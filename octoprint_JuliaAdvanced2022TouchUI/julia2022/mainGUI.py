# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainGUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(800, 480)
        MainWindow.setMinimumSize(QtCore.QSize(800, 480))
        MainWindow.setMaximumSize(QtCore.QSize(800, 480))
        MainWindow.setStyleSheet("QStatusBar {\n"
"    background-color: rgb(49, 49, 49);\n"
"}\n"
"\n"
"QStatusBar::item {\n"
"    border: none;\n"
"    border-radius: 0px;\n"
"}")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.mainApplication = QtWidgets.QWidget(MainWindow)
        self.mainApplication.setObjectName("mainApplication")
        self.stackedWidget = QtWidgets.QStackedWidget(self.mainApplication)
        self.stackedWidget.setEnabled(True)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 800, 480))
        self.stackedWidget.setMinimumSize(QtCore.QSize(800, 480))
        self.stackedWidget.setMaximumSize(QtCore.QSize(800, 480))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.stackedWidget.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.stackedWidget.setFont(font)
        self.stackedWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.stackedWidget.setAutoFillBackground(False)
        self.stackedWidget.setStyleSheet("\n"
"background-color: rgb(40, 40, 40);")
        self.stackedWidget.setObjectName("stackedWidget")
        self.loadingPage = QtWidgets.QWidget()
        self.loadingPage.setObjectName("loadingPage")
        self.LoadingLabel = QtWidgets.QLabel(self.loadingPage)
        self.LoadingLabel.setGeometry(QtCore.QRect(0, -80, 801, 561))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.LoadingLabel.setFont(font)
        self.LoadingLabel.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.LoadingLabel.setText("")
        self.LoadingLabel.setPixmap(QtGui.QPixmap("templates/img/Splash BG.png"))
        self.LoadingLabel.setScaledContents(True)
        self.LoadingLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.LoadingLabel.setObjectName("LoadingLabel")
        self.label_4 = QtWidgets.QLabel(self.loadingPage)
        self.label_4.setGeometry(QtCore.QRect(40, 20, 711, 161))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("templates/img/Fracktal Logo.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.fileName_2 = QtWidgets.QLabel(self.loadingPage)
        self.fileName_2.setGeometry(QtCore.QRect(360, 310, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(12)
        self.fileName_2.setFont(font)
        self.fileName_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.fileName_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.fileName_2.setScaledContents(True)
        self.fileName_2.setWordWrap(False)
        self.fileName_2.setObjectName("fileName_2")
        self.loadingGif = QtWidgets.QLabel(self.loadingPage)
        self.loadingGif.setGeometry(QtCore.QRect(70, 90, 666, 480))
        self.loadingGif.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.loadingGif.setStyleSheet("background-color: rgb(255, 255, 255,0);")
        self.loadingGif.setText("")
        self.loadingGif.setScaledContents(True)
        self.loadingGif.setObjectName("loadingGif")
        self.LoadingLabel.raise_()
        self.loadingGif.raise_()
        self.label_4.raise_()
        self.fileName_2.raise_()
        self.stackedWidget.addWidget(self.loadingPage)
        self.homePage = QtWidgets.QWidget()
        self.homePage.setObjectName("homePage")
        self.playPauseButton = QtWidgets.QPushButton(self.homePage)
        self.playPauseButton.setGeometry(QtCore.QRect(400, 350, 191, 91))
        self.playPauseButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.playPauseButton.setFont(font)
        self.playPauseButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.playPauseButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("templates/img/play-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("templates/img/pause-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.playPauseButton.setIcon(icon)
        self.playPauseButton.setIconSize(QtCore.QSize(50, 50))
        self.playPauseButton.setCheckable(True)
        self.playPauseButton.setChecked(False)
        self.playPauseButton.setAutoDefault(False)
        self.playPauseButton.setDefault(False)
        self.playPauseButton.setFlat(False)
        self.playPauseButton.setObjectName("playPauseButton")
        self.stopButton = QtWidgets.QPushButton(self.homePage)
        self.stopButton.setGeometry(QtCore.QRect(590, 350, 211, 91))
        self.stopButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.stopButton.setFont(font)
        self.stopButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.stopButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("templates/img/video-player-stop-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.stopButton.setIcon(icon1)
        self.stopButton.setIconSize(QtCore.QSize(50, 50))
        self.stopButton.setObjectName("stopButton")
        self.line = QtWidgets.QFrame(self.homePage)
        self.line.setGeometry(QtCore.QRect(460, 80, 20, 281))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.line.setFont(font)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.tool0Label = QtWidgets.QLabel(self.homePage)
        self.tool0Label.setGeometry(QtCore.QRect(32, 148, 51, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0Label.setFont(font)
        self.tool0Label.setStyleSheet("\n"
"   color:  white;")
        self.tool0Label.setText("")
        self.tool0Label.setPixmap(QtGui.QPixmap("templates/img/Nozzle.png"))
        self.tool0Label.setScaledContents(True)
        self.tool0Label.setObjectName("tool0Label")
        self.FileNameLabel = QtWidgets.QLabel(self.homePage)
        self.FileNameLabel.setGeometry(QtCore.QRect(10, 247, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.FileNameLabel.setFont(font)
        self.FileNameLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.FileNameLabel.setObjectName("FileNameLabel")
        self.printTimeLabel = QtWidgets.QLabel(self.homePage)
        self.printTimeLabel.setGeometry(QtCore.QRect(10, 280, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.printTimeLabel.setFont(font)
        self.printTimeLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.printTimeLabel.setObjectName("printTimeLabel")
        self.fileName = QtWidgets.QLabel(self.homePage)
        self.fileName.setGeometry(QtCore.QRect(70, 247, 281, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fileName.setFont(font)
        self.fileName.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.fileName.setScaledContents(True)
        self.fileName.setWordWrap(False)
        self.fileName.setObjectName("fileName")
        self.printTime = QtWidgets.QLabel(self.homePage)
        self.printTime.setGeometry(QtCore.QRect(160, 280, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.printTime.setFont(font)
        self.printTime.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.printTime.setObjectName("printTime")
        self.timeLeftLabel = QtWidgets.QLabel(self.homePage)
        self.timeLeftLabel.setGeometry(QtCore.QRect(10, 320, 151, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.timeLeftLabel.setFont(font)
        self.timeLeftLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.timeLeftLabel.setObjectName("timeLeftLabel")
        self.bedTempBar = QtWidgets.QProgressBar(self.homePage)
        self.bedTempBar.setGeometry(QtCore.QRect(395, 110, 21, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.bedTempBar.setFont(font)
        self.bedTempBar.setStyleSheet("QProgressBar::chunk {\n"
"    border-radius: 5px;\n"
"    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.522, y2:0, stop:0.0336134 rgba(74, 183, 255, 255), stop:1 rgba(53, 173, 242, 255));\n"
"}\n"
"\n"
"QProgressBar {\n"
"    border: 1px solid white;\n"
"    border-radius: 5px;\n"
"}\n"
"")
        self.bedTempBar.setMaximum(300)
        self.bedTempBar.setProperty("value", 10)
        self.bedTempBar.setAlignment(QtCore.Qt.AlignCenter)
        self.bedTempBar.setTextVisible(False)
        self.bedTempBar.setOrientation(QtCore.Qt.Vertical)
        self.bedTempBar.setObjectName("bedTempBar")
        self.bedLabel = QtWidgets.QLabel(self.homePage)
        self.bedLabel.setGeometry(QtCore.QRect(320, 140, 61, 61))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.bedLabel.setFont(font)
        self.bedLabel.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.bedLabel.setText("")
        self.bedLabel.setPixmap(QtGui.QPixmap("templates/img/bed.png"))
        self.bedLabel.setScaledContents(True)
        self.bedLabel.setObjectName("bedLabel")
        self.tool0TargetTemperature = QtWidgets.QLabel(self.homePage)
        self.tool0TargetTemperature.setGeometry(QtCore.QRect(40, 90, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0TargetTemperature.setFont(font)
        self.tool0TargetTemperature.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.tool0TargetTemperature.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.tool0TargetTemperature.setObjectName("tool0TargetTemperature")
        self.tool0TempBar = QtWidgets.QProgressBar(self.homePage)
        self.tool0TempBar.setGeometry(QtCore.QRect(105, 110, 21, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.tool0TempBar.setFont(font)
        self.tool0TempBar.setStyleSheet("QProgressBar::chunk {\n"
"    border-radius: 5px;\n"
"    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.522, y2:0, stop:0.0336134 rgba(74, 183, 255, 255), stop:1 rgba(53, 173, 242, 255));\n"
"}\n"
"\n"
"QProgressBar {\n"
"    border: 1px solid white;\n"
"    border-radius: 5px;\n"
"}\n"
"")
        self.tool0TempBar.setMaximum(300)
        self.tool0TempBar.setProperty("value", 200)
        self.tool0TempBar.setAlignment(QtCore.Qt.AlignCenter)
        self.tool0TempBar.setTextVisible(False)
        self.tool0TempBar.setOrientation(QtCore.Qt.Vertical)
        self.tool0TempBar.setObjectName("tool0TempBar")
        self.tool0ActualTemperature = QtWidgets.QLabel(self.homePage)
        self.tool0ActualTemperature.setGeometry(QtCore.QRect(30, 210, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0ActualTemperature.setFont(font)
        self.tool0ActualTemperature.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(0, 0, 0, 0);")
        self.tool0ActualTemperature.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.tool0ActualTemperature.setObjectName("tool0ActualTemperature")
        self.bedActualTemperatute = QtWidgets.QLabel(self.homePage)
        self.bedActualTemperatute.setGeometry(QtCore.QRect(340, 220, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.bedActualTemperatute.setFont(font)
        self.bedActualTemperatute.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(0, 0, 0, 0);")
        self.bedActualTemperatute.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.bedActualTemperatute.setObjectName("bedActualTemperatute")
        self.bedTargetTemperature = QtWidgets.QLabel(self.homePage)
        self.bedTargetTemperature.setGeometry(QtCore.QRect(340, 100, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.bedTargetTemperature.setFont(font)
        self.bedTargetTemperature.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.bedTargetTemperature.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.bedTargetTemperature.setObjectName("bedTargetTemperature")
        self.menuButton = QtWidgets.QPushButton(self.homePage)
        self.menuButton.setGeometry(QtCore.QRect(0, 350, 211, 91))
        self.menuButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.menuButton.setFont(font)
        self.menuButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    \n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.menuButton.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("templates/img/menu.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuButton.setIcon(icon2)
        self.menuButton.setIconSize(QtCore.QSize(50, 50))
        self.menuButton.setCheckable(False)
        self.menuButton.setAutoDefault(False)
        self.menuButton.setDefault(False)
        self.menuButton.setFlat(False)
        self.menuButton.setObjectName("menuButton")
        self.printProgressBar = QtWidgets.QProgressBar(self.homePage)
        self.printProgressBar.setGeometry(QtCore.QRect(0, 440, 801, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.printProgressBar.setFont(font)
        self.printProgressBar.setStyleSheet("QProgressBar::chunk {\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0.523, x2:0, y2:0.534, stop:0 rgba(130, 203, 117, 255), stop:1 rgba(66, 191, 85, 255));\n"
"border: 1px solid green;\n"
"}\n"
"\n"
"QProgressBar {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
" /*  border-bottom-left-radius: 10px;\n"
" border-bottom-right-radius: 10px;*/\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(150, 150, 150, 255), stop:1 rgba(180, 180, 180, 255));\n"
"}\n"
"")
        self.printProgressBar.setMaximum(100)
        self.printProgressBar.setProperty("value", 0)
        self.printProgressBar.setAlignment(QtCore.Qt.AlignCenter)
        self.printProgressBar.setTextVisible(True)
        self.printProgressBar.setOrientation(QtCore.Qt.Horizontal)
        self.printProgressBar.setObjectName("printProgressBar")
        self.timeLeft = QtWidgets.QLabel(self.homePage)
        self.timeLeft.setGeometry(QtCore.QRect(150, 310, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.timeLeft.setFont(font)
        self.timeLeft.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.timeLeft.setWordWrap(False)
        self.timeLeft.setObjectName("timeLeft")
        self.printerStatus = QtWidgets.QLabel(self.homePage)
        self.printerStatus.setGeometry(QtCore.QRect(40, 10, 551, 61))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.printerStatus.setFont(font)
        self.printerStatus.setStyleSheet("\n"
"background-color: rgba(255, 255, 255, 0);")
        self.printerStatus.setScaledContents(True)
        self.printerStatus.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.printerStatus.setWordWrap(True)
        self.printerStatus.setObjectName("printerStatus")
        self.controlButton = QtWidgets.QPushButton(self.homePage)
        self.controlButton.setGeometry(QtCore.QRect(210, 350, 191, 91))
        self.controlButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.controlButton.setFont(font)
        self.controlButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.controlButton.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("templates/img/settings-1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.controlButton.setIcon(icon3)
        self.controlButton.setIconSize(QtCore.QSize(50, 50))
        self.controlButton.setCheckable(False)
        self.controlButton.setAutoDefault(False)
        self.controlButton.setDefault(False)
        self.controlButton.setFlat(False)
        self.controlButton.setObjectName("controlButton")
        self.printerStatusColour = QtWidgets.QLabel(self.homePage)
        self.printerStatusColour.setGeometry(QtCore.QRect(5, 20, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.printerStatusColour.setFont(font)
        self.printerStatusColour.setStyleSheet("     border: 1px solid rgb(87, 87, 87);\n"
"    border-radius: 10px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0.523, x2:0, y2:0.534, stop:0 rgba(130, 203, 117, 255), stop:1 rgba(66, 191, 85, 255));")
        self.printerStatusColour.setText("")
        self.printerStatusColour.setAlignment(QtCore.Qt.AlignCenter)
        self.printerStatusColour.setObjectName("printerStatusColour")
        self.celciusLabel = QtWidgets.QLabel(self.homePage)
        self.celciusLabel.setGeometry(QtCore.QRect(420, 100, 70, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.celciusLabel.setFont(font)
        self.celciusLabel.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.celciusLabel.setObjectName("celciusLabel")
        self.tool1TargetTemperature = QtWidgets.QLabel(self.homePage)
        self.tool1TargetTemperature.setGeometry(QtCore.QRect(180, 90, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool1TargetTemperature.setFont(font)
        self.tool1TargetTemperature.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.tool1TargetTemperature.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.tool1TargetTemperature.setObjectName("tool1TargetTemperature")
        self.tool1Label = QtWidgets.QLabel(self.homePage)
        self.tool1Label.setGeometry(QtCore.QRect(180, 148, 51, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool1Label.setFont(font)
        self.tool1Label.setStyleSheet("\n"
"   color:  white;")
        self.tool1Label.setText("")
        self.tool1Label.setPixmap(QtGui.QPixmap("templates/img/Nozzle.png"))
        self.tool1Label.setScaledContents(True)
        self.tool1Label.setObjectName("tool1Label")
        self.tool1TempBar = QtWidgets.QProgressBar(self.homePage)
        self.tool1TempBar.setGeometry(QtCore.QRect(250, 110, 21, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.tool1TempBar.setFont(font)
        self.tool1TempBar.setStyleSheet("QProgressBar::chunk {\n"
"    border-radius: 5px;\n"
"    background-color: qlineargradient(spread:pad, x1:0.517, y1:0, x2:0.522, y2:0, stop:0.0336134 rgba(74, 183, 255, 255), stop:1 rgba(53, 173, 242, 255));\n"
"}\n"
"\n"
"QProgressBar {\n"
"    border: 1px solid white;\n"
"    border-radius: 5px;\n"
"}\n"
"")
        self.tool1TempBar.setMaximum(300)
        self.tool1TempBar.setProperty("value", 200)
        self.tool1TempBar.setAlignment(QtCore.Qt.AlignCenter)
        self.tool1TempBar.setTextVisible(False)
        self.tool1TempBar.setOrientation(QtCore.Qt.Vertical)
        self.tool1TempBar.setObjectName("tool1TempBar")
        self.tool1ActualTemperature = QtWidgets.QLabel(self.homePage)
        self.tool1ActualTemperature.setGeometry(QtCore.QRect(170, 200, 71, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool1ActualTemperature.setFont(font)
        self.tool1ActualTemperature.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(0, 0, 0, 0);")
        self.tool1ActualTemperature.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.tool1ActualTemperature.setObjectName("tool1ActualTemperature")
        self.statusBar = QtWidgets.QLabel(self.homePage)
        self.statusBar.setGeometry(QtCore.QRect(0, 0, 801, 81))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.statusBar.setFont(font)
        self.statusBar.setStyleSheet("     border-bottom: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));")
        self.statusBar.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.statusBar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.statusBar.setText("")
        self.statusBar.setObjectName("statusBar")
        self.printPreviewMain = QtWidgets.QLabel(self.homePage)
        self.printPreviewMain.setGeometry(QtCore.QRect(489, 80, 311, 291))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.printPreviewMain.setFont(font)
        self.printPreviewMain.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.printPreviewMain.setText("")
        self.printPreviewMain.setPixmap(QtGui.QPixmap("templates/img/thumbnail.png"))
        self.printPreviewMain.setScaledContents(True)
        self.printPreviewMain.setObjectName("printPreviewMain")
        self.ipStatus = QtWidgets.QLabel(self.homePage)
        self.ipStatus.setGeometry(QtCore.QRect(560, 10, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.ipStatus.setFont(font)
        self.ipStatus.setStyleSheet("\n"
"background-color: rgba(255, 255, 255, 0);")
        self.ipStatus.setScaledContents(True)
        self.ipStatus.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTop|QtCore.Qt.AlignTrailing)
        self.ipStatus.setWordWrap(True)
        self.ipStatus.setObjectName("ipStatus")
        self.celciusLabel_2 = QtWidgets.QLabel(self.homePage)
        self.celciusLabel_2.setGeometry(QtCore.QRect(280, 100, 70, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.celciusLabel_2.setFont(font)
        self.celciusLabel_2.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.celciusLabel_2.setObjectName("celciusLabel_2")
        self.celciusLabel_3 = QtWidgets.QLabel(self.homePage)
        self.celciusLabel_3.setGeometry(QtCore.QRect(130, 100, 70, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.celciusLabel_3.setFont(font)
        self.celciusLabel_3.setStyleSheet("\n"
"   color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.celciusLabel_3.setObjectName("celciusLabel_3")
        self.label = QtWidgets.QLabel(self.homePage)
        self.label.setGeometry(QtCore.QRect(200, 150, 20, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setStyleSheet("\n"
"color: black;\n"
"background-color: rgb(255, 255, 255,0);")
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(self.homePage)
        self.label_3.setGeometry(QtCore.QRect(50, 150, 20, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("\n"
"color: black;\n"
"background-color: rgb(255, 255, 255,0);")
        self.label_3.setObjectName("label_3")
        self.doorLockButton = QtWidgets.QToolButton(self.homePage)
        self.doorLockButton.setEnabled(False)
        self.doorLockButton.setGeometry(QtCore.QRect(729, 80, 71, 101))
        self.doorLockButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(7)
        self.doorLockButton.setFont(font)
        self.doorLockButton.setStyleSheet("QToolButton {\n"
"    padding-top: 20px;\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"border-top-left-radius: 10px;\n"
"\n"
"border-bottom-left-radius: 10px;\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("templates/img/doorUnlock.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon4.addPixmap(QtGui.QPixmap("templates/img/doorLock.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.doorLockButton.setIcon(icon4)
        self.doorLockButton.setIconSize(QtCore.QSize(50, 50))
        self.doorLockButton.setCheckable(False)
        self.doorLockButton.setChecked(False)
        self.doorLockButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.doorLockButton.setAutoRaise(False)
        self.doorLockButton.setObjectName("doorLockButton")
        self.timeLeftLabel.raise_()
        self.printPreviewMain.raise_()
        self.line.raise_()
        self.statusBar.raise_()
        self.playPauseButton.raise_()
        self.stopButton.raise_()
        self.tool0Label.raise_()
        self.FileNameLabel.raise_()
        self.printTimeLabel.raise_()
        self.printTime.raise_()
        self.bedTempBar.raise_()
        self.bedLabel.raise_()
        self.tool0TempBar.raise_()
        self.tool0ActualTemperature.raise_()
        self.tool0TargetTemperature.raise_()
        self.bedActualTemperatute.raise_()
        self.bedTargetTemperature.raise_()
        self.menuButton.raise_()
        self.timeLeft.raise_()
        self.controlButton.raise_()
        self.printProgressBar.raise_()
        self.printerStatusColour.raise_()
        self.celciusLabel.raise_()
        self.tool1TargetTemperature.raise_()
        self.tool1Label.raise_()
        self.tool1TempBar.raise_()
        self.tool1ActualTemperature.raise_()
        self.fileName.raise_()
        self.ipStatus.raise_()
        self.printerStatus.raise_()
        self.celciusLabel_2.raise_()
        self.celciusLabel_3.raise_()
        self.label.raise_()
        self.label_3.raise_()
        self.doorLockButton.raise_()
        self.stackedWidget.addWidget(self.homePage)
        self.MenuPage = QtWidgets.QWidget()
        self.MenuPage.setObjectName("MenuPage")
        self.menuBackButton = QtWidgets.QPushButton(self.MenuPage)
        self.menuBackButton.setGeometry(QtCore.QRect(529, 250, 271, 231))
        self.menuBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.menuBackButton.setFont(font)
        self.menuBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.menuBackButton.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("templates/img/arrows-4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuBackButton.setIcon(icon5)
        self.menuBackButton.setIconSize(QtCore.QSize(150, 150))
        self.menuBackButton.setCheckable(False)
        self.menuBackButton.setObjectName("menuBackButton")
        self.menuControlButton = QtWidgets.QToolButton(self.MenuPage)
        self.menuControlButton.setGeometry(QtCore.QRect(260, 0, 271, 251))
        self.menuControlButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.menuControlButton.setFont(font)
        self.menuControlButton.setStyleSheet("QToolButton {\n"
"padding-top: 20px;\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.menuControlButton.setIcon(icon3)
        self.menuControlButton.setIconSize(QtCore.QSize(150, 150))
        self.menuControlButton.setCheckable(False)
        self.menuControlButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.menuControlButton.setObjectName("menuControlButton")
        self.menuPrintButton = QtWidgets.QToolButton(self.MenuPage)
        self.menuPrintButton.setGeometry(QtCore.QRect(0, 0, 261, 251))
        self.menuPrintButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.menuPrintButton.setFont(font)
        self.menuPrintButton.setStyleSheet("QToolButton {\n"
"    padding-top: 20px;\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("templates/img/printer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuPrintButton.setIcon(icon6)
        self.menuPrintButton.setIconSize(QtCore.QSize(150, 150))
        self.menuPrintButton.setCheckable(False)
        self.menuPrintButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.menuPrintButton.setObjectName("menuPrintButton")
        self.menuSettingsButton = QtWidgets.QToolButton(self.MenuPage)
        self.menuSettingsButton.setGeometry(QtCore.QRect(260, 249, 271, 231))
        self.menuSettingsButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.menuSettingsButton.setFont(font)
        self.menuSettingsButton.setStyleSheet("QToolButton {\n"
"padding-top: 20px;\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("templates/img/settings.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuSettingsButton.setIcon(icon7)
        self.menuSettingsButton.setIconSize(QtCore.QSize(150, 150))
        self.menuSettingsButton.setCheckable(False)
        self.menuSettingsButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.menuSettingsButton.setObjectName("menuSettingsButton")
        self.menuCartButton = QtWidgets.QToolButton(self.MenuPage)
        self.menuCartButton.setGeometry(QtCore.QRect(0, 249, 261, 231))
        self.menuCartButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.menuCartButton.setFont(font)
        self.menuCartButton.setStyleSheet("QToolButton {\n"
"padding-top: 20px;\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("templates/img/cart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuCartButton.setIcon(icon8)
        self.menuCartButton.setIconSize(QtCore.QSize(150, 150))
        self.menuCartButton.setCheckable(False)
        self.menuCartButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.menuCartButton.setAutoRaise(False)
        self.menuCartButton.setObjectName("menuCartButton")
        self.menuCalibrateButton = QtWidgets.QToolButton(self.MenuPage)
        self.menuCalibrateButton.setGeometry(QtCore.QRect(529, 0, 271, 251))
        self.menuCalibrateButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.menuCalibrateButton.setFont(font)
        self.menuCalibrateButton.setStyleSheet("QToolButton {\n"
"padding-top: 20px;\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("templates/img/reload.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuCalibrateButton.setIcon(icon9)
        self.menuCalibrateButton.setIconSize(QtCore.QSize(150, 150))
        self.menuCalibrateButton.setCheckable(False)
        self.menuCalibrateButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.menuCalibrateButton.setObjectName("menuCalibrateButton")
        self.menuSettingsButton.raise_()
        self.menuControlButton.raise_()
        self.menuCartButton.raise_()
        self.menuCalibrateButton.raise_()
        self.menuBackButton.raise_()
        self.menuPrintButton.raise_()
        self.stackedWidget.addWidget(self.MenuPage)
        self.settingsPage = QtWidgets.QWidget()
        self.settingsPage.setObjectName("settingsPage")
        self.scrollArea = QtWidgets.QScrollArea(self.settingsPage)
        self.scrollArea.setGeometry(QtCore.QRect(0, 0, 801, 481))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.scrollArea.setFont(font)
        self.scrollArea.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 80px;\n"
"     margin: 70px 0 70px 0;\n"
" }\n"
" QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 20px;\n"
" }\n"
" QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
" QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"     background: none;\n"
" }")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 778, 900))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setContentsMargins(0, 0, 3, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.settingsBackButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.settingsBackButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        self.settingsBackButton.setFont(font)
        self.settingsBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.settingsBackButton.setText("")
        self.settingsBackButton.setIcon(icon5)
        self.settingsBackButton.setIconSize(QtCore.QSize(70, 70))
        self.settingsBackButton.setCheckable(False)
        self.settingsBackButton.setAutoDefault(False)
        self.settingsBackButton.setDefault(False)
        self.settingsBackButton.setFlat(False)
        self.settingsBackButton.setObjectName("settingsBackButton")
        self.verticalLayout.addWidget(self.settingsBackButton)
        self.networkSettingsButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.networkSettingsButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.networkSettingsButton.setFont(font)
        self.networkSettingsButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.networkSettingsButton.setIconSize(QtCore.QSize(40, 40))
        self.networkSettingsButton.setObjectName("networkSettingsButton")
        self.verticalLayout.addWidget(self.networkSettingsButton)
        self.displaySettingsButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.displaySettingsButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.displaySettingsButton.setFont(font)
        self.displaySettingsButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.displaySettingsButton.setIconSize(QtCore.QSize(40, 40))
        self.displaySettingsButton.setObjectName("displaySettingsButton")
        self.verticalLayout.addWidget(self.displaySettingsButton)
        self.pairPhoneButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.pairPhoneButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.pairPhoneButton.setFont(font)
        self.pairPhoneButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.pairPhoneButton.setIconSize(QtCore.QSize(40, 40))
        self.pairPhoneButton.setObjectName("pairPhoneButton")
        self.verticalLayout.addWidget(self.pairPhoneButton)
        self.OTAButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.OTAButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.OTAButton.setFont(font)
        self.OTAButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.OTAButton.setIconSize(QtCore.QSize(40, 40))
        self.OTAButton.setObjectName("OTAButton")
        self.verticalLayout.addWidget(self.OTAButton)
        self.versionButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.versionButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.versionButton.setFont(font)
        self.versionButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.versionButton.setIconSize(QtCore.QSize(40, 40))
        self.versionButton.setObjectName("versionButton")
        self.verticalLayout.addWidget(self.versionButton)
        self.restorePrintSettingsButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.restorePrintSettingsButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.restorePrintSettingsButton.setFont(font)
        self.restorePrintSettingsButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.restorePrintSettingsButton.setIconSize(QtCore.QSize(40, 40))
        self.restorePrintSettingsButton.setObjectName("restorePrintSettingsButton")
        self.verticalLayout.addWidget(self.restorePrintSettingsButton)
        self.restoreFactoryDefaultsButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.restoreFactoryDefaultsButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.restoreFactoryDefaultsButton.setFont(font)
        self.restoreFactoryDefaultsButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.restoreFactoryDefaultsButton.setIconSize(QtCore.QSize(40, 40))
        self.restoreFactoryDefaultsButton.setObjectName("restoreFactoryDefaultsButton")
        self.verticalLayout.addWidget(self.restoreFactoryDefaultsButton)
        self.restartButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.restartButton.setMinimumSize(QtCore.QSize(0, 100))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.restartButton.setFont(font)
        self.restartButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.restartButton.setIconSize(QtCore.QSize(40, 40))
        self.restartButton.setObjectName("restartButton")
        self.verticalLayout.addWidget(self.restartButton)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.stackedWidget.addWidget(self.settingsPage)
        self.QRCodePage = QtWidgets.QWidget()
        self.QRCodePage.setObjectName("QRCodePage")
        self.QRCodeBackButton = QtWidgets.QPushButton(self.QRCodePage)
        self.QRCodeBackButton.setGeometry(QtCore.QRect(0, 390, 801, 91))
        self.QRCodeBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(20)
        self.QRCodeBackButton.setFont(font)
        self.QRCodeBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.QRCodeBackButton.setText("")
        self.QRCodeBackButton.setIcon(icon5)
        self.QRCodeBackButton.setIconSize(QtCore.QSize(70, 70))
        self.QRCodeBackButton.setCheckable(False)
        self.QRCodeBackButton.setAutoDefault(False)
        self.QRCodeBackButton.setDefault(False)
        self.QRCodeBackButton.setFlat(False)
        self.QRCodeBackButton.setObjectName("QRCodeBackButton")
        self.QRCodeBackground = QtWidgets.QLabel(self.QRCodePage)
        self.QRCodeBackground.setGeometry(QtCore.QRect(250, 50, 301, 301))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.QRCodeBackground.setFont(font)
        self.QRCodeBackground.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.QRCodeBackground.setText("")
        self.QRCodeBackground.setObjectName("QRCodeBackground")
        self.QRCodeLabel = QtWidgets.QLabel(self.QRCodePage)
        self.QRCodeLabel.setGeometry(QtCore.QRect(250, 50, 301, 301))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.QRCodeLabel.setFont(font)
        self.QRCodeLabel.setStyleSheet("")
        self.QRCodeLabel.setText("")
        self.QRCodeLabel.setScaledContents(True)
        self.QRCodeLabel.setObjectName("QRCodeLabel")
        self.QRCodeBackground.raise_()
        self.QRCodeLabel.raise_()
        self.QRCodeBackButton.raise_()
        self.stackedWidget.addWidget(self.QRCodePage)
        self.staticIPSettingsPage = QtWidgets.QWidget()
        self.staticIPSettingsPage.setObjectName("staticIPSettingsPage")
        self.staticIPComboBox = QtWidgets.QComboBox(self.staticIPSettingsPage)
        self.staticIPComboBox.setGeometry(QtCore.QRect(200, 10, 301, 71))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.staticIPComboBox.setFont(font)
        self.staticIPComboBox.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPComboBox.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 60px;\n"
"     margin: 67px 0 67px 0;\n"
" }\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 7px;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"\n"
"QComboBox {\n"
"border: 1px solid black;\n"
"    padding: 0px 18px 0px 3px;\n"
"    min-width: 6em;\n"
"\n"
"}\n"
"\n"
"QComboBox::item {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down {\n"
"border-left: 1px solid black;\n"
"border-right: 1px solid black;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 70px;\n"
"\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"\n"
"image: url(./templates/img/arrows-5.png);\n"
"width: 30px;\n"
"height: 30px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    selection-background-color: rgb(40, 40, 40);\n"
"    background: white;\n"
"}")
        self.staticIPComboBox.setEditable(False)
        self.staticIPComboBox.setMaxVisibleItems(8)
        self.staticIPComboBox.setIconSize(QtCore.QSize(30, 30))
        self.staticIPComboBox.setObjectName("staticIPComboBox")
        self.staticIPINterfaceLabel = QtWidgets.QLabel(self.staticIPSettingsPage)
        self.staticIPINterfaceLabel.setGeometry(QtCore.QRect(10, 30, 171, 30))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.staticIPINterfaceLabel.setFont(font)
        self.staticIPINterfaceLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPINterfaceLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.staticIPINterfaceLabel.setObjectName("staticIPINterfaceLabel")
        self.staticIPSettingsDoneButton = QtWidgets.QPushButton(self.staticIPSettingsPage)
        self.staticIPSettingsDoneButton.setGeometry(QtCore.QRect(-10, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.staticIPSettingsDoneButton.setFont(font)
        self.staticIPSettingsDoneButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPSettingsDoneButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.staticIPSettingsDoneButton.setIconSize(QtCore.QSize(40, 40))
        self.staticIPSettingsDoneButton.setObjectName("staticIPSettingsDoneButton")
        self.ethStaticSettings = QtWidgets.QWidget(self.staticIPSettingsPage)
        self.ethStaticSettings.setGeometry(QtCore.QRect(-10, 120, 801, 211))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.ethStaticSettings.setFont(font)
        self.ethStaticSettings.setObjectName("ethStaticSettings")
        self.staticIPGatewayKeyboardButton = QtWidgets.QPushButton(self.ethStaticSettings)
        self.staticIPGatewayKeyboardButton.setGeometry(QtCore.QRect(690, 80, 111, 51))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.staticIPGatewayKeyboardButton.setFont(font)
        self.staticIPGatewayKeyboardButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPGatewayKeyboardButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(0, 0, 0);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.staticIPGatewayKeyboardButton.setIconSize(QtCore.QSize(40, 40))
        self.staticIPGatewayKeyboardButton.setObjectName("staticIPGatewayKeyboardButton")
        self.staticIPGatewayLabel = QtWidgets.QLabel(self.ethStaticSettings)
        self.staticIPGatewayLabel.setGeometry(QtCore.QRect(10, 90, 110, 30))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.staticIPGatewayLabel.setFont(font)
        self.staticIPGatewayLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPGatewayLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.staticIPGatewayLabel.setObjectName("staticIPGatewayLabel")
        self.staticIPKeyboardButton = QtWidgets.QPushButton(self.ethStaticSettings)
        self.staticIPKeyboardButton.setEnabled(True)
        self.staticIPKeyboardButton.setGeometry(QtCore.QRect(690, 10, 111, 51))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.staticIPKeyboardButton.setFont(font)
        self.staticIPKeyboardButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPKeyboardButton.setAutoFillBackground(False)
        self.staticIPKeyboardButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(0, 0, 0);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.staticIPKeyboardButton.setIconSize(QtCore.QSize(40, 40))
        self.staticIPKeyboardButton.setObjectName("staticIPKeyboardButton")
        self.staticIPLabel = QtWidgets.QLabel(self.ethStaticSettings)
        self.staticIPLabel.setGeometry(QtCore.QRect(10, 20, 151, 30))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.staticIPLabel.setFont(font)
        self.staticIPLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.staticIPLabel.setObjectName("staticIPLabel")
        self.staticIPNameServerKeyboardButton = QtWidgets.QPushButton(self.ethStaticSettings)
        self.staticIPNameServerKeyboardButton.setGeometry(QtCore.QRect(690, 150, 111, 51))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.staticIPNameServerKeyboardButton.setFont(font)
        self.staticIPNameServerKeyboardButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPNameServerKeyboardButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(0, 0, 0);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.staticIPNameServerKeyboardButton.setIconSize(QtCore.QSize(40, 40))
        self.staticIPNameServerKeyboardButton.setObjectName("staticIPNameServerKeyboardButton")
        self.staticIPNameServerLabel = QtWidgets.QLabel(self.ethStaticSettings)
        self.staticIPNameServerLabel.setGeometry(QtCore.QRect(10, 160, 181, 30))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.staticIPNameServerLabel.setFont(font)
        self.staticIPNameServerLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPNameServerLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.staticIPNameServerLabel.setObjectName("staticIPNameServerLabel")
        self.staticIPSettingsCancelButton = QtWidgets.QPushButton(self.staticIPSettingsPage)
        self.staticIPSettingsCancelButton.setGeometry(QtCore.QRect(390, 360, 411, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.staticIPSettingsCancelButton.setFont(font)
        self.staticIPSettingsCancelButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.staticIPSettingsCancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.staticIPSettingsCancelButton.setIconSize(QtCore.QSize(50, 50))
        self.staticIPSettingsCancelButton.setObjectName("staticIPSettingsCancelButton")
        self.deleteStaticIPSettingsButton = QtWidgets.QPushButton(self.staticIPSettingsPage)
        self.deleteStaticIPSettingsButton.setEnabled(True)
        self.deleteStaticIPSettingsButton.setGeometry(QtCore.QRect(630, 0, 171, 91))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.deleteStaticIPSettingsButton.setFont(font)
        self.deleteStaticIPSettingsButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.deleteStaticIPSettingsButton.setAutoFillBackground(False)
        self.deleteStaticIPSettingsButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(0, 0, 0);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.deleteStaticIPSettingsButton.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("templates/img/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.deleteStaticIPSettingsButton.setIcon(icon10)
        self.deleteStaticIPSettingsButton.setIconSize(QtCore.QSize(40, 40))
        self.deleteStaticIPSettingsButton.setObjectName("deleteStaticIPSettingsButton")
        self.stackedWidget.addWidget(self.staticIPSettingsPage)
        self.wifiSettingsPage = QtWidgets.QWidget()
        self.wifiSettingsPage.setObjectName("wifiSettingsPage")
        self.wifiSettingsComboBox = QtWidgets.QComboBox(self.wifiSettingsPage)
        self.wifiSettingsComboBox.setGeometry(QtCore.QRect(0, 70, 701, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.wifiSettingsComboBox.setFont(font)
        self.wifiSettingsComboBox.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 60px;\n"
"     margin: 67px 0 67px 0;\n"
" }\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 7px;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"\n"
"QComboBox {\n"
"border: 1px solid black;\n"
"    padding: 0px 18px 0px 3px;\n"
"    min-width: 6em;\n"
"\n"
"}\n"
"\n"
"QComboBox::item {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down {\n"
"border-left: 1px solid black;\n"
"border-right: 1px solid black;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 50px;\n"
"\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"\n"
"image: url(./templates/img/arrows-5.png);\n"
"width: 30px;\n"
"height: 30px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    selection-background-color: rgb(40, 40, 40);\n"
"    background: white;\n"
"}")
        self.wifiSettingsComboBox.setEditable(False)
        self.wifiSettingsComboBox.setMaxVisibleItems(8)
        self.wifiSettingsComboBox.setIconSize(QtCore.QSize(30, 30))
        self.wifiSettingsComboBox.setObjectName("wifiSettingsComboBox")
        self.ssidlabel = QtWidgets.QLabel(self.wifiSettingsPage)
        self.ssidlabel.setGeometry(QtCore.QRect(0, 0, 461, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.ssidlabel.setFont(font)
        self.ssidlabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.ssidlabel.setObjectName("ssidlabel")
        self.passwordlabel = QtWidgets.QLabel(self.wifiSettingsPage)
        self.passwordlabel.setGeometry(QtCore.QRect(10, 180, 791, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.passwordlabel.setFont(font)
        self.passwordlabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.passwordlabel.setObjectName("passwordlabel")
        self.wifiSettingsDoneButton = QtWidgets.QPushButton(self.wifiSettingsPage)
        self.wifiSettingsDoneButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.wifiSettingsDoneButton.setFont(font)
        self.wifiSettingsDoneButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.wifiSettingsDoneButton.setIconSize(QtCore.QSize(40, 40))
        self.wifiSettingsDoneButton.setObjectName("wifiSettingsDoneButton")
        self.wifiSettingsCancelButton = QtWidgets.QPushButton(self.wifiSettingsPage)
        self.wifiSettingsCancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.wifiSettingsCancelButton.setFont(font)
        self.wifiSettingsCancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.wifiSettingsCancelButton.setIconSize(QtCore.QSize(40, 40))
        self.wifiSettingsCancelButton.setObjectName("wifiSettingsCancelButton")
        self.wifiSettingsSSIDKeyboardButton = QtWidgets.QPushButton(self.wifiSettingsPage)
        self.wifiSettingsSSIDKeyboardButton.setGeometry(QtCore.QRect(700, 70, 101, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.wifiSettingsSSIDKeyboardButton.setFont(font)
        self.wifiSettingsSSIDKeyboardButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(0, 0, 0);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.wifiSettingsSSIDKeyboardButton.setIconSize(QtCore.QSize(40, 40))
        self.wifiSettingsSSIDKeyboardButton.setObjectName("wifiSettingsSSIDKeyboardButton")
        self.hiddenCheckBox = QtWidgets.QCheckBox(self.wifiSettingsPage)
        self.hiddenCheckBox.setGeometry(QtCore.QRect(0, 130, 161, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.hiddenCheckBox.setFont(font)
        self.hiddenCheckBox.setStyleSheet("QCheckBox {\n"
"    color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 25px;\n"
"    height: 25px;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    image: url(./templates/img/check-box.png);\n"
"}\n"
"QCheckBox::indicator:unchecked {\n"
"    image: url(./templates/img/blank-check-box.png);\n"
"}\n"
"\n"
"\n"
"\n"
"")
        self.hiddenCheckBox.setIconSize(QtCore.QSize(40, 40))
        self.hiddenCheckBox.setChecked(False)
        self.hiddenCheckBox.setObjectName("hiddenCheckBox")
        self.wifiSettingsComboBox.raise_()
        self.ssidlabel.raise_()
        self.passwordlabel.raise_()
        self.wifiSettingsSSIDKeyboardButton.raise_()
        self.wifiSettingsCancelButton.raise_()
        self.wifiSettingsDoneButton.raise_()
        self.hiddenCheckBox.raise_()
        self.stackedWidget.addWidget(self.wifiSettingsPage)
        self.networkSettingsPage = QtWidgets.QWidget()
        self.networkSettingsPage.setObjectName("networkSettingsPage")
        self.networkInfoButton = QtWidgets.QPushButton(self.networkSettingsPage)
        self.networkInfoButton.setGeometry(QtCore.QRect(0, 0, 801, 100))
        self.networkInfoButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.networkInfoButton.setFont(font)
        self.networkInfoButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.networkInfoButton.setIconSize(QtCore.QSize(40, 40))
        self.networkInfoButton.setObjectName("networkInfoButton")
        self.configureWifiButton = QtWidgets.QPushButton(self.networkSettingsPage)
        self.configureWifiButton.setGeometry(QtCore.QRect(0, 100, 801, 100))
        self.configureWifiButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.configureWifiButton.setFont(font)
        self.configureWifiButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.configureWifiButton.setIconSize(QtCore.QSize(40, 40))
        self.configureWifiButton.setObjectName("configureWifiButton")
        self.configureStaticIPButton = QtWidgets.QPushButton(self.networkSettingsPage)
        self.configureStaticIPButton.setGeometry(QtCore.QRect(0, 200, 801, 100))
        self.configureStaticIPButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.configureStaticIPButton.setFont(font)
        self.configureStaticIPButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.configureStaticIPButton.setIconSize(QtCore.QSize(40, 40))
        self.configureStaticIPButton.setObjectName("configureStaticIPButton")
        self.networkSettingsBackButton = QtWidgets.QPushButton(self.networkSettingsPage)
        self.networkSettingsBackButton.setGeometry(QtCore.QRect(0, 360, 801, 121))
        self.networkSettingsBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.networkSettingsBackButton.setFont(font)
        self.networkSettingsBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.networkSettingsBackButton.setText("")
        self.networkSettingsBackButton.setIcon(icon5)
        self.networkSettingsBackButton.setIconSize(QtCore.QSize(50, 50))
        self.networkSettingsBackButton.setCheckable(False)
        self.networkSettingsBackButton.setAutoDefault(False)
        self.networkSettingsBackButton.setDefault(False)
        self.networkSettingsBackButton.setFlat(False)
        self.networkSettingsBackButton.setObjectName("networkSettingsBackButton")
        self.stackedWidget.addWidget(self.networkSettingsPage)
        self.displaySettingsPage = QtWidgets.QWidget()
        self.displaySettingsPage.setObjectName("displaySettingsPage")
        self.displaySettingsBackButton = QtWidgets.QPushButton(self.displaySettingsPage)
        self.displaySettingsBackButton.setGeometry(QtCore.QRect(0, 360, 801, 121))
        self.displaySettingsBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        self.displaySettingsBackButton.setFont(font)
        self.displaySettingsBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.displaySettingsBackButton.setText("")
        self.displaySettingsBackButton.setIcon(icon5)
        self.displaySettingsBackButton.setIconSize(QtCore.QSize(50, 50))
        self.displaySettingsBackButton.setCheckable(False)
        self.displaySettingsBackButton.setAutoDefault(False)
        self.displaySettingsBackButton.setDefault(False)
        self.displaySettingsBackButton.setFlat(False)
        self.displaySettingsBackButton.setObjectName("displaySettingsBackButton")
        self.calibrateTouch = QtWidgets.QPushButton(self.displaySettingsPage)
        self.calibrateTouch.setGeometry(QtCore.QRect(-10, 10, 811, 100))
        self.calibrateTouch.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.calibrateTouch.setFont(font)
        self.calibrateTouch.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.calibrateTouch.setIconSize(QtCore.QSize(40, 40))
        self.calibrateTouch.setObjectName("calibrateTouch")
        self.stackedWidget.addWidget(self.displaySettingsPage)
        self.rotateDisplaySettingsPage = QtWidgets.QWidget()
        self.rotateDisplaySettingsPage.setObjectName("rotateDisplaySettingsPage")
        self.rotateDisplaySettingsDoneButton = QtWidgets.QPushButton(self.rotateDisplaySettingsPage)
        self.rotateDisplaySettingsDoneButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.rotateDisplaySettingsDoneButton.setFont(font)
        self.rotateDisplaySettingsDoneButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.rotateDisplaySettingsDoneButton.setIconSize(QtCore.QSize(40, 40))
        self.rotateDisplaySettingsDoneButton.setObjectName("rotateDisplaySettingsDoneButton")
        self.rotateDisplaySettingsCancelButton = QtWidgets.QPushButton(self.rotateDisplaySettingsPage)
        self.rotateDisplaySettingsCancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.rotateDisplaySettingsCancelButton.setFont(font)
        self.rotateDisplaySettingsCancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.rotateDisplaySettingsCancelButton.setIconSize(QtCore.QSize(40, 40))
        self.rotateDisplaySettingsCancelButton.setObjectName("rotateDisplaySettingsCancelButton")
        self.rotateDisplaySettingsComboBox = QtWidgets.QComboBox(self.rotateDisplaySettingsPage)
        self.rotateDisplaySettingsComboBox.setGeometry(QtCore.QRect(10, 80, 781, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.rotateDisplaySettingsComboBox.setFont(font)
        self.rotateDisplaySettingsComboBox.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 60px;\n"
"     margin: 67px 0 67px 0;\n"
" }\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 7px;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"\n"
"QComboBox {\n"
"border: 1px solid black;\n"
"    padding: 0px 18px 0px 3px;\n"
"    min-width: 6em;\n"
"\n"
"}\n"
"\n"
"QComboBox::item {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down {\n"
"border-left: 1px solid black;\n"
"border-right: 1px solid black;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 50px;\n"
"\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"\n"
"image: url(./templates/img/arrows-5.png);\n"
"width: 30px;\n"
"height: 30px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    selection-background-color: rgb(40, 40, 40);\n"
"    background: white;\n"
"}")
        self.rotateDisplaySettingsComboBox.setEditable(False)
        self.rotateDisplaySettingsComboBox.setMaxVisibleItems(8)
        self.rotateDisplaySettingsComboBox.setIconSize(QtCore.QSize(30, 30))
        self.rotateDisplaySettingsComboBox.setObjectName("rotateDisplaySettingsComboBox")
        self.rotateDisplaySettingsComboBox.addItem("")
        self.rotateDisplaySettingsComboBox.addItem("")
        self.rotateDisplaySettingsLabel = QtWidgets.QLabel(self.rotateDisplaySettingsPage)
        self.rotateDisplaySettingsLabel.setGeometry(QtCore.QRect(10, 10, 561, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.rotateDisplaySettingsLabel.setFont(font)
        self.rotateDisplaySettingsLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.rotateDisplaySettingsLabel.setObjectName("rotateDisplaySettingsLabel")
        self.stackedWidget.addWidget(self.rotateDisplaySettingsPage)
        self.networkInfoPage = QtWidgets.QWidget()
        self.networkInfoPage.setObjectName("networkInfoPage")
        self.hostnameLabel = QtWidgets.QLabel(self.networkInfoPage)
        self.hostnameLabel.setGeometry(QtCore.QRect(90, 60, 241, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.hostnameLabel.setFont(font)
        self.hostnameLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.hostnameLabel.setObjectName("hostnameLabel")
        self.hostname = QtWidgets.QLabel(self.networkInfoPage)
        self.hostname.setGeometry(QtCore.QRect(90, 82, 311, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.hostname.setFont(font)
        self.hostname.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.hostname.setObjectName("hostname")
        self.wifiIpLabel = QtWidgets.QLabel(self.networkInfoPage)
        self.wifiIpLabel.setGeometry(QtCore.QRect(90, 150, 240, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.wifiIpLabel.setFont(font)
        self.wifiIpLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.wifiIpLabel.setObjectName("wifiIpLabel")
        self.wifiMac = QtWidgets.QLabel(self.networkInfoPage)
        self.wifiMac.setGeometry(QtCore.QRect(90, 170, 311, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.wifiMac.setFont(font)
        self.wifiMac.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.wifiMac.setObjectName("wifiMac")
        self.lanIpLabel = QtWidgets.QLabel(self.networkInfoPage)
        self.lanIpLabel.setGeometry(QtCore.QRect(90, 230, 240, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.lanIpLabel.setFont(font)
        self.lanIpLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.lanIpLabel.setObjectName("lanIpLabel")
        self.lanMac = QtWidgets.QLabel(self.networkInfoPage)
        self.lanMac.setGeometry(QtCore.QRect(90, 250, 301, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.lanMac.setFont(font)
        self.lanMac.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.lanMac.setObjectName("lanMac")
        self.networkInfoBackButton = QtWidgets.QPushButton(self.networkInfoPage)
        self.networkInfoBackButton.setGeometry(QtCore.QRect(0, 390, 801, 91))
        self.networkInfoBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.networkInfoBackButton.setFont(font)
        self.networkInfoBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.networkInfoBackButton.setText("")
        self.networkInfoBackButton.setIcon(icon5)
        self.networkInfoBackButton.setIconSize(QtCore.QSize(50, 50))
        self.networkInfoBackButton.setCheckable(False)
        self.networkInfoBackButton.setAutoDefault(False)
        self.networkInfoBackButton.setDefault(False)
        self.networkInfoBackButton.setFlat(False)
        self.networkInfoBackButton.setObjectName("networkInfoBackButton")
        self.wifiMacLabel = QtWidgets.QLabel(self.networkInfoPage)
        self.wifiMacLabel.setGeometry(QtCore.QRect(410, 150, 240, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.wifiMacLabel.setFont(font)
        self.wifiMacLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.wifiMacLabel.setObjectName("wifiMacLabel")
        self.lanMacLabel = QtWidgets.QLabel(self.networkInfoPage)
        self.lanMacLabel.setGeometry(QtCore.QRect(410, 230, 240, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.lanMacLabel.setFont(font)
        self.lanMacLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.lanMacLabel.setObjectName("lanMacLabel")
        self.wifiIp = QtWidgets.QLabel(self.networkInfoPage)
        self.wifiIp.setGeometry(QtCore.QRect(410, 170, 381, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.wifiIp.setFont(font)
        self.wifiIp.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.wifiIp.setObjectName("wifiIp")
        self.lanIp = QtWidgets.QLabel(self.networkInfoPage)
        self.lanIp.setGeometry(QtCore.QRect(410, 250, 381, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.lanIp.setFont(font)
        self.lanIp.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.lanIp.setObjectName("lanIp")
        self.wifiApLabel = QtWidgets.QLabel(self.networkInfoPage)
        self.wifiApLabel.setGeometry(QtCore.QRect(410, 60, 240, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.wifiApLabel.setFont(font)
        self.wifiApLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.wifiApLabel.setObjectName("wifiApLabel")
        self.wifiAp = QtWidgets.QLabel(self.networkInfoPage)
        self.wifiAp.setGeometry(QtCore.QRect(410, 80, 381, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.wifiAp.setFont(font)
        self.wifiAp.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.wifiAp.setObjectName("wifiAp")
        self.hostnameLabel.raise_()
        self.wifiIpLabel.raise_()
        self.wifiMac.raise_()
        self.lanIpLabel.raise_()
        self.lanMac.raise_()
        self.networkInfoBackButton.raise_()
        self.hostname.raise_()
        self.wifiMacLabel.raise_()
        self.lanMacLabel.raise_()
        self.wifiIp.raise_()
        self.lanIp.raise_()
        self.wifiApLabel.raise_()
        self.wifiAp.raise_()
        self.stackedWidget.addWidget(self.networkInfoPage)
        self.OTAUpdatePage = QtWidgets.QWidget()
        self.OTAUpdatePage.setObjectName("OTAUpdatePage")
        self.updateListWidget = QtWidgets.QListWidget(self.OTAUpdatePage)
        self.updateListWidget.setGeometry(QtCore.QRect(0, 0, 801, 391))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        self.updateListWidget.setFont(font)
        self.updateListWidget.setStyleSheet("\n"
"\n"
"QScrollBar:vertical {\n"
" border: 1px solid black; \n"
"border-radius: 5px;\n"
"background: rgb(40,40,40);\n"
"width: 62px;\n"
"}\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 20px;\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"/* This remvoes the bottom button by setting the height to 0px */\n"
"QScrollBar::add-line:vertical {\n"
"height: 0px;\n"
"subcontrol-position: bottom;\n"
"subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* This remvoes the top button by setting the height to 0px */\n"
"QScrollBar::sub-line:vertical {\n"
"height: 0px;\n"
"subcontrol-position: top;\n"
"subcontrol-origin: margin;\n"
"}\n"
"\n"
"/*\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"border: 2px solid grey;\n"
"width: 5px;\n"
"height: 5px;\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"\n"
"QListView::item {\n"
"color: rgb(255, 255, 255);\n"
"border-bottom: 1px solid rgb(255, 255, 255);\n"
"}\n"
"\n"
"QListView {\n"
"    show-decoration-selected: 1; /* make the selection span the entire width of the view */\n"
"}\n"
"\n"
"QListView::item:selected {\n"
"outline: none;\n"
"}\n"
"\n"
"\n"
"QListView::item:selected:focus {\n"
"    outline: none;\n"
"}\n"
"")
        self.updateListWidget.setObjectName("updateListWidget")
        self.softwareUpdateBackButton = QtWidgets.QPushButton(self.OTAUpdatePage)
        self.softwareUpdateBackButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        self.softwareUpdateBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        self.softwareUpdateBackButton.setFont(font)
        self.softwareUpdateBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.softwareUpdateBackButton.setText("")
        self.softwareUpdateBackButton.setIcon(icon5)
        self.softwareUpdateBackButton.setIconSize(QtCore.QSize(70, 70))
        self.softwareUpdateBackButton.setCheckable(False)
        self.softwareUpdateBackButton.setAutoDefault(False)
        self.softwareUpdateBackButton.setDefault(False)
        self.softwareUpdateBackButton.setFlat(False)
        self.softwareUpdateBackButton.setObjectName("softwareUpdateBackButton")
        self.performUpdateButton = QtWidgets.QPushButton(self.OTAUpdatePage)
        self.performUpdateButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        self.performUpdateButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        self.performUpdateButton.setFont(font)
        self.performUpdateButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("templates/img/update-arrows.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.performUpdateButton.setIcon(icon11)
        self.performUpdateButton.setIconSize(QtCore.QSize(70, 70))
        self.performUpdateButton.setCheckable(False)
        self.performUpdateButton.setAutoDefault(False)
        self.performUpdateButton.setDefault(False)
        self.performUpdateButton.setFlat(False)
        self.performUpdateButton.setObjectName("performUpdateButton")
        self.stackedWidget.addWidget(self.OTAUpdatePage)
        self.softwareUpdateProgressPage = QtWidgets.QWidget()
        self.softwareUpdateProgressPage.setObjectName("softwareUpdateProgressPage")
        self.logTextEdit = QtWidgets.QTextEdit(self.softwareUpdateProgressPage)
        self.logTextEdit.setGeometry(QtCore.QRect(0, 0, 801, 481))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.logTextEdit.setFont(font)
        self.logTextEdit.setStyleSheet("QTextEdit{\n"
"background-color:  rgb(40, 40, 40);\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"\n"
"QScrollBar:vertical {\n"
" border: 1px solid black; \n"
"border-radius: 5px;\n"
"background: rgb(40,40,40);\n"
"width: 30px;\n"
"}\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 20px;\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"/* This remvoes the bottom button by setting the height to 0px */\n"
"QScrollBar::add-line:vertical {\n"
"height: 0px;\n"
"subcontrol-position: bottom;\n"
"subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* This remvoes the top button by setting the height to 0px */\n"
"QScrollBar::sub-line:vertical {\n"
"height: 0px;\n"
"subcontrol-position: top;\n"
"subcontrol-origin: margin;\n"
"}\n"
"\n"
"/*\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"border: 2px solid grey;\n"
"width: 5px;\n"
"height: 5px;\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"")
        self.logTextEdit.setReadOnly(True)
        self.logTextEdit.setObjectName("logTextEdit")
        self.stackedWidget.addWidget(self.softwareUpdateProgressPage)
        self.firmwareUpdateProgressPage = QtWidgets.QWidget()
        self.firmwareUpdateProgressPage.setObjectName("firmwareUpdateProgressPage")
        self.firmwareUpdateLog = QtWidgets.QTextEdit(self.firmwareUpdateProgressPage)
        self.firmwareUpdateLog.setGeometry(QtCore.QRect(0, 0, 801, 411))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.firmwareUpdateLog.setFont(font)
        self.firmwareUpdateLog.setStyleSheet("QTextEdit{\n"
"background-color:  rgb(40, 40, 40);\n"
"/*font-color: white;*/\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"\n"
"QScrollBar:vertical {\n"
" border: 1px solid black; \n"
"border-radius: 5px;\n"
"background: rgb(40,40,40);\n"
"width: 30px;\n"
"}\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 20px;\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"/* This remvoes the bottom button by setting the height to 0px */\n"
"QScrollBar::add-line:vertical {\n"
"height: 0px;\n"
"subcontrol-position: bottom;\n"
"subcontrol-origin: margin;\n"
"}\n"
"\n"
"/* This remvoes the top button by setting the height to 0px */\n"
"QScrollBar::sub-line:vertical {\n"
"height: 0px;\n"
"subcontrol-position: top;\n"
"subcontrol-origin: margin;\n"
"}\n"
"\n"
"/*\n"
"QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical {\n"
"border: 2px solid grey;\n"
"width: 5px;\n"
"height: 5px;\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"")
        self.firmwareUpdateLog.setReadOnly(True)
        self.firmwareUpdateLog.setObjectName("firmwareUpdateLog")
        self.firmwareUpdateBackButton = QtWidgets.QPushButton(self.firmwareUpdateProgressPage)
        self.firmwareUpdateBackButton.setEnabled(False)
        self.firmwareUpdateBackButton.setGeometry(QtCore.QRect(0, 360, 801, 121))
        self.firmwareUpdateBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.firmwareUpdateBackButton.setFont(font)
        self.firmwareUpdateBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.firmwareUpdateBackButton.setText("")
        self.firmwareUpdateBackButton.setIcon(icon5)
        self.firmwareUpdateBackButton.setIconSize(QtCore.QSize(70, 70))
        self.firmwareUpdateBackButton.setCheckable(False)
        self.firmwareUpdateBackButton.setAutoDefault(False)
        self.firmwareUpdateBackButton.setDefault(False)
        self.firmwareUpdateBackButton.setFlat(False)
        self.firmwareUpdateBackButton.setObjectName("firmwareUpdateBackButton")
        self.stackedWidget.addWidget(self.firmwareUpdateProgressPage)
        self.calibratePage = QtWidgets.QWidget()
        self.calibratePage.setObjectName("calibratePage")
        self.calibrateLabel = QtWidgets.QLabel(self.calibratePage)
        self.calibrateLabel.setGeometry(QtCore.QRect(10, 20, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel.setFont(font)
        self.calibrateLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel.setObjectName("calibrateLabel")
        self.calibrateBackButton = QtWidgets.QPushButton(self.calibratePage)
        self.calibrateBackButton.setGeometry(QtCore.QRect(680, 200, 122, 281))
        self.calibrateBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        self.calibrateBackButton.setFont(font)
        self.calibrateBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.calibrateBackButton.setText("")
        self.calibrateBackButton.setIcon(icon5)
        self.calibrateBackButton.setIconSize(QtCore.QSize(70, 70))
        self.calibrateBackButton.setCheckable(False)
        self.calibrateBackButton.setAutoDefault(False)
        self.calibrateBackButton.setDefault(False)
        self.calibrateBackButton.setFlat(False)
        self.calibrateBackButton.setObjectName("calibrateBackButton")
        self.calibrationWizardButton = QtWidgets.QToolButton(self.calibratePage)
        self.calibrationWizardButton.setGeometry(QtCore.QRect(0, 200, 361, 141))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.calibrationWizardButton.setFont(font)
        self.calibrationWizardButton.setStyleSheet("QToolButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton:focus {\n"
"    outline: none;\n"
"}")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("templates/img/magic-wand.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.calibrationWizardButton.setIcon(icon12)
        self.calibrationWizardButton.setIconSize(QtCore.QSize(70, 70))
        self.calibrationWizardButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.calibrationWizardButton.setObjectName("calibrationWizardButton")
        self.toolOffsetXYButton = QtWidgets.QToolButton(self.calibratePage)
        self.toolOffsetXYButton.setGeometry(QtCore.QRect(350, 340, 171, 141))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(12)
        self.toolOffsetXYButton.setFont(font)
        self.toolOffsetXYButton.setStyleSheet("QToolButton {\n"
"\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton:focus {\n"
"    outline: none;\n"
"}")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("templates/img/Tool Offset Icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolOffsetXYButton.setIcon(icon13)
        self.toolOffsetXYButton.setIconSize(QtCore.QSize(70, 70))
        self.toolOffsetXYButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toolOffsetXYButton.setObjectName("toolOffsetXYButton")
        self.nozzleOffsetButton = QtWidgets.QToolButton(self.calibratePage)
        self.nozzleOffsetButton.setGeometry(QtCore.QRect(0, 340, 171, 141))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(12)
        self.nozzleOffsetButton.setFont(font)
        self.nozzleOffsetButton.setStyleSheet("QToolButton {\n"
"\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton:focus {\n"
"    outline: none;\n"
"}")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("templates/img/Nozzle Offset Icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.nozzleOffsetButton.setIcon(icon14)
        self.nozzleOffsetButton.setIconSize(QtCore.QSize(70, 70))
        self.nozzleOffsetButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.nozzleOffsetButton.setObjectName("nozzleOffsetButton")
        self.toolOffsetZButton = QtWidgets.QToolButton(self.calibratePage)
        self.toolOffsetZButton.setGeometry(QtCore.QRect(170, 340, 181, 141))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(12)
        self.toolOffsetZButton.setFont(font)
        self.toolOffsetZButton.setStyleSheet("QToolButton {\n"
"\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton:focus {\n"
"    outline: none;\n"
"}")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("templates/img/Tool Z Offset Icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolOffsetZButton.setIcon(icon15)
        self.toolOffsetZButton.setIconSize(QtCore.QSize(70, 70))
        self.toolOffsetZButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toolOffsetZButton.setObjectName("toolOffsetZButton")
        self.testPrintsButton = QtWidgets.QToolButton(self.calibratePage)
        self.testPrintsButton.setGeometry(QtCore.QRect(350, 200, 331, 141))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.testPrintsButton.setFont(font)
        self.testPrintsButton.setStyleSheet("QToolButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton:focus {\n"
"    outline: none;\n"
"}")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("templates/img/3d-printing.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.testPrintsButton.setIcon(icon16)
        self.testPrintsButton.setIconSize(QtCore.QSize(70, 70))
        self.testPrintsButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.testPrintsButton.setObjectName("testPrintsButton")
        self.idexCalibrationWizardButton = QtWidgets.QToolButton(self.calibratePage)
        self.idexCalibrationWizardButton.setGeometry(QtCore.QRect(520, 340, 161, 141))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(12)
        self.idexCalibrationWizardButton.setFont(font)
        self.idexCalibrationWizardButton.setStyleSheet("QToolButton {\n"
"\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton:focus {\n"
"    outline: none;\n"
"}")
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("templates/img/IDEX.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.idexCalibrationWizardButton.setIcon(icon17)
        self.idexCalibrationWizardButton.setIconSize(QtCore.QSize(70, 70))
        self.idexCalibrationWizardButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.idexCalibrationWizardButton.setObjectName("idexCalibrationWizardButton")
        self.stackedWidget.addWidget(self.calibratePage)
        self.testPrintsPage1 = QtWidgets.QWidget()
        self.testPrintsPage1.setObjectName("testPrintsPage1")
        self.calibrateLabel_36 = QtWidgets.QLabel(self.testPrintsPage1)
        self.calibrateLabel_36.setGeometry(QtCore.QRect(10, 20, 469, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_36.setFont(font)
        self.calibrateLabel_36.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_36.setObjectName("calibrateLabel_36")
        self.calibrateLabel_57 = QtWidgets.QLabel(self.testPrintsPage1)
        self.calibrateLabel_57.setGeometry(QtCore.QRect(70, 60, 721, 96))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_57.setFont(font)
        self.calibrateLabel_57.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_57.setScaledContents(False)
        self.calibrateLabel_57.setWordWrap(True)
        self.calibrateLabel_57.setObjectName("calibrateLabel_57")
        self.tool0Label_27 = QtWidgets.QLabel(self.testPrintsPage1)
        self.tool0Label_27.setGeometry(QtCore.QRect(10, 80, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0Label_27.setFont(font)
        self.tool0Label_27.setStyleSheet("\n"
"   color:  white;")
        self.tool0Label_27.setText("")
        self.tool0Label_27.setPixmap(QtGui.QPixmap("templates/img/exclamation-mark.png"))
        self.tool0Label_27.setScaledContents(True)
        self.tool0Label_27.setObjectName("tool0Label_27")
        self.calibrateLabel_58 = QtWidgets.QLabel(self.testPrintsPage1)
        self.calibrateLabel_58.setGeometry(QtCore.QRect(10, 160, 465, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_58.setFont(font)
        self.calibrateLabel_58.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_58.setObjectName("calibrateLabel_58")
        self.tool0Label_28 = QtWidgets.QLabel(self.testPrintsPage1)
        self.tool0Label_28.setGeometry(QtCore.QRect(31, 208, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0Label_28.setFont(font)
        self.tool0Label_28.setStyleSheet("\n"
"   color:  white;")
        self.tool0Label_28.setText("")
        self.tool0Label_28.setPixmap(QtGui.QPixmap("templates/img/Nozzle.png"))
        self.tool0Label_28.setScaledContents(True)
        self.tool0Label_28.setObjectName("tool0Label_28")
        self.tool0TargetTemperature_27 = QtWidgets.QLabel(self.testPrintsPage1)
        self.tool0TargetTemperature_27.setGeometry(QtCore.QRect(10, 220, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0TargetTemperature_27.setFont(font)
        self.tool0TargetTemperature_27.setStyleSheet("\n"
"   color:  black;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.tool0TargetTemperature_27.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.tool0TargetTemperature_27.setObjectName("tool0TargetTemperature_27")
        self.testPrintsTool0SizeComboBox = QtWidgets.QComboBox(self.testPrintsPage1)
        self.testPrintsTool0SizeComboBox.setGeometry(QtCore.QRect(90, 200, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(20)
        self.testPrintsTool0SizeComboBox.setFont(font)
        self.testPrintsTool0SizeComboBox.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 60px;\n"
"     margin: 67px 0 67px 0;\n"
" }\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 7px;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"\n"
"QComboBox {\n"
"border: 1px solid black;\n"
"    padding: 0px 18px 0px 3px;\n"
"    min-width: 6em;\n"
"\n"
"}\n"
"\n"
"QComboBox::item {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down {\n"
"border-left: 1px solid black;\n"
"border-right: 1px solid black;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 50px;\n"
"\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"\n"
"image: url(./templates/img/arrows-5.png);\n"
"width: 30px;\n"
"height: 30px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    selection-background-color: rgb(40, 40, 40);\n"
"    background: white;\n"
"}")
        self.testPrintsTool0SizeComboBox.setEditable(False)
        self.testPrintsTool0SizeComboBox.setMaxVisibleItems(8)
        self.testPrintsTool0SizeComboBox.setIconSize(QtCore.QSize(30, 30))
        self.testPrintsTool0SizeComboBox.setObjectName("testPrintsTool0SizeComboBox")
        self.testPrintsTool0SizeComboBox.addItem("")
        self.testPrintsTool0SizeComboBox.addItem("")
        self.testPrintsTool0SizeComboBox.addItem("")
        self.testPrintsTool1SizeComboBox_6 = QtWidgets.QComboBox(self.testPrintsPage1)
        self.testPrintsTool1SizeComboBox_6.setGeometry(QtCore.QRect(600, 200, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(20)
        self.testPrintsTool1SizeComboBox_6.setFont(font)
        self.testPrintsTool1SizeComboBox_6.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 60px;\n"
"     margin: 67px 0 67px 0;\n"
" }\n"
"\n"
"/* Sets up the color and height of handle */\n"
"QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 7px;\n"
"}\n"
"\n"
"\n"
"QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
"/* need this to get rid of crosshatching on scrollbar background */\n"
"QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"background: none;\n"
"}\n"
"\n"
"QComboBox {\n"
"border: 1px solid black;\n"
"    padding: 0px 18px 0px 3px;\n"
"    min-width: 6em;\n"
"\n"
"}\n"
"\n"
"QComboBox::item {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down {\n"
"border-left: 1px solid black;\n"
"border-right: 1px solid black;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 50px;\n"
"\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"\n"
"image: url(./templates/img/arrows-5.png);\n"
"width: 30px;\n"
"height: 30px;\n"
"\n"
"}\n"
"\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    selection-background-color: rgb(40, 40, 40);\n"
"    background: white;\n"
"}")
        self.testPrintsTool1SizeComboBox_6.setEditable(False)
        self.testPrintsTool1SizeComboBox_6.setMaxVisibleItems(8)
        self.testPrintsTool1SizeComboBox_6.setIconSize(QtCore.QSize(30, 30))
        self.testPrintsTool1SizeComboBox_6.setObjectName("testPrintsTool1SizeComboBox_6")
        self.testPrintsTool1SizeComboBox_6.addItem("")
        self.testPrintsTool1SizeComboBox_6.addItem("")
        self.testPrintsTool1SizeComboBox_6.addItem("")
        self.tool0TargetTemperature_28 = QtWidgets.QLabel(self.testPrintsPage1)
        self.tool0TargetTemperature_28.setGeometry(QtCore.QRect(510, 213, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0TargetTemperature_28.setFont(font)
        self.tool0TargetTemperature_28.setStyleSheet("\n"
"   color:  black;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.tool0TargetTemperature_28.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.tool0TargetTemperature_28.setObjectName("tool0TargetTemperature_28")
        self.tool1Label_12 = QtWidgets.QLabel(self.testPrintsPage1)
        self.tool1Label_12.setGeometry(QtCore.QRect(530, 200, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool1Label_12.setFont(font)
        self.tool1Label_12.setStyleSheet("\n"
"   color:  white;")
        self.tool1Label_12.setText("")
        self.tool1Label_12.setPixmap(QtGui.QPixmap("templates/img/Nozzle.png"))
        self.tool1Label_12.setScaledContents(True)
        self.tool1Label_12.setObjectName("tool1Label_12")
        self.calibrateLabel_59 = QtWidgets.QLabel(self.testPrintsPage1)
        self.calibrateLabel_59.setGeometry(QtCore.QRect(80, 260, 711, 96))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_59.setFont(font)
        self.calibrateLabel_59.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_59.setScaledContents(False)
        self.calibrateLabel_59.setWordWrap(True)
        self.calibrateLabel_59.setObjectName("calibrateLabel_59")
        self.testPrintsNextButton = QtWidgets.QPushButton(self.testPrintsPage1)
        self.testPrintsNextButton.setGeometry(QtCore.QRect(0, 350, 391, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.testPrintsNextButton.setFont(font)
        self.testPrintsNextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.testPrintsNextButton.setIconSize(QtCore.QSize(40, 40))
        self.testPrintsNextButton.setObjectName("testPrintsNextButton")
        self.testPrintsBackButton = QtWidgets.QPushButton(self.testPrintsPage1)
        self.testPrintsBackButton.setGeometry(QtCore.QRect(390, 350, 411, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.testPrintsBackButton.setFont(font)
        self.testPrintsBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.testPrintsBackButton.setText("")
        self.testPrintsBackButton.setIcon(icon5)
        self.testPrintsBackButton.setIconSize(QtCore.QSize(70, 70))
        self.testPrintsBackButton.setObjectName("testPrintsBackButton")
        self.tool0Label_29 = QtWidgets.QLabel(self.testPrintsPage1)
        self.tool0Label_29.setGeometry(QtCore.QRect(20, 290, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0Label_29.setFont(font)
        self.tool0Label_29.setStyleSheet("\n"
"   color:  white;")
        self.tool0Label_29.setText("")
        self.tool0Label_29.setPixmap(QtGui.QPixmap("templates/img/exclamation-mark.png"))
        self.tool0Label_29.setScaledContents(True)
        self.tool0Label_29.setObjectName("tool0Label_29")
        self.tool1Label_12.raise_()
        self.calibrateLabel_36.raise_()
        self.calibrateLabel_57.raise_()
        self.tool0Label_27.raise_()
        self.calibrateLabel_58.raise_()
        self.tool0Label_28.raise_()
        self.tool0TargetTemperature_27.raise_()
        self.testPrintsTool0SizeComboBox.raise_()
        self.testPrintsTool1SizeComboBox_6.raise_()
        self.tool0TargetTemperature_28.raise_()
        self.calibrateLabel_59.raise_()
        self.testPrintsNextButton.raise_()
        self.testPrintsBackButton.raise_()
        self.tool0Label_29.raise_()
        self.stackedWidget.addWidget(self.testPrintsPage1)
        self.testPrintsPage2 = QtWidgets.QWidget()
        self.testPrintsPage2.setObjectName("testPrintsPage2")
        self.calibrateLabel_2 = QtWidgets.QLabel(self.testPrintsPage2)
        self.calibrateLabel_2.setGeometry(QtCore.QRect(60, -10, 731, 96))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_2.setFont(font)
        self.calibrateLabel_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_2.setScaledContents(False)
        self.calibrateLabel_2.setWordWrap(True)
        self.calibrateLabel_2.setObjectName("calibrateLabel_2")
        self.tool0Label_30 = QtWidgets.QLabel(self.testPrintsPage2)
        self.tool0Label_30.setGeometry(QtCore.QRect(0, 20, 50, 50))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(14)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.tool0Label_30.setFont(font)
        self.tool0Label_30.setStyleSheet("\n"
"   color:  white;")
        self.tool0Label_30.setText("")
        self.tool0Label_30.setPixmap(QtGui.QPixmap("templates/img/exclamation-mark.png"))
        self.tool0Label_30.setScaledContents(True)
        self.tool0Label_30.setObjectName("tool0Label_30")
        self.bedLevelPrintButton = QtWidgets.QPushButton(self.testPrintsPage2)
        self.bedLevelPrintButton.setGeometry(QtCore.QRect(-1, 147, 811, 70))
        self.bedLevelPrintButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.bedLevelPrintButton.setFont(font)
        self.bedLevelPrintButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.bedLevelPrintButton.setIconSize(QtCore.QSize(40, 40))
        self.bedLevelPrintButton.setObjectName("bedLevelPrintButton")
        self.singleNozzlePrintButton = QtWidgets.QPushButton(self.testPrintsPage2)
        self.singleNozzlePrintButton.setGeometry(QtCore.QRect(-1, 279, 801, 70))
        self.singleNozzlePrintButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.singleNozzlePrintButton.setFont(font)
        self.singleNozzlePrintButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.singleNozzlePrintButton.setIconSize(QtCore.QSize(40, 40))
        self.singleNozzlePrintButton.setObjectName("singleNozzlePrintButton")
        self.dualNozzlePrintButton = QtWidgets.QPushButton(self.testPrintsPage2)
        self.dualNozzlePrintButton.setGeometry(QtCore.QRect(-1, 342, 801, 70))
        self.dualNozzlePrintButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.dualNozzlePrintButton.setFont(font)
        self.dualNozzlePrintButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.dualNozzlePrintButton.setIconSize(QtCore.QSize(40, 40))
        self.dualNozzlePrintButton.setObjectName("dualNozzlePrintButton")
        self.movementTestPrintButton = QtWidgets.QPushButton(self.testPrintsPage2)
        self.movementTestPrintButton.setGeometry(QtCore.QRect(-1, 216, 801, 70))
        self.movementTestPrintButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.movementTestPrintButton.setFont(font)
        self.movementTestPrintButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.movementTestPrintButton.setIconSize(QtCore.QSize(40, 40))
        self.movementTestPrintButton.setObjectName("movementTestPrintButton")
        self.dualCaliberationPrintButton = QtWidgets.QPushButton(self.testPrintsPage2)
        self.dualCaliberationPrintButton.setGeometry(QtCore.QRect(0, 79, 801, 70))
        self.dualCaliberationPrintButton.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.dualCaliberationPrintButton.setFont(font)
        self.dualCaliberationPrintButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.dualCaliberationPrintButton.setIconSize(QtCore.QSize(40, 40))
        self.dualCaliberationPrintButton.setObjectName("dualCaliberationPrintButton")
        self.testPrintsCancelButton = QtWidgets.QPushButton(self.testPrintsPage2)
        self.testPrintsCancelButton.setGeometry(QtCore.QRect(-1, 409, 801, 71))
        self.testPrintsCancelButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(13)
        self.testPrintsCancelButton.setFont(font)
        self.testPrintsCancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.testPrintsCancelButton.setIconSize(QtCore.QSize(50, 50))
        self.testPrintsCancelButton.setCheckable(False)
        self.testPrintsCancelButton.setAutoDefault(False)
        self.testPrintsCancelButton.setDefault(False)
        self.testPrintsCancelButton.setFlat(False)
        self.testPrintsCancelButton.setObjectName("testPrintsCancelButton")
        self.stackedWidget.addWidget(self.testPrintsPage2)
        self.toolOffsetXYPage = QtWidgets.QWidget()
        self.toolOffsetXYPage.setObjectName("toolOffsetXYPage")
        self.bedLabel_3 = QtWidgets.QLabel(self.toolOffsetXYPage)
        self.bedLabel_3.setGeometry(QtCore.QRect(480, 100, 70, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.bedLabel_3.setFont(font)
        self.bedLabel_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.bedLabel_3.setObjectName("bedLabel_3")
        self.tollOffsetXLabel = QtWidgets.QLabel(self.toolOffsetXYPage)
        self.tollOffsetXLabel.setGeometry(QtCore.QRect(160, 121, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.tollOffsetXLabel.setFont(font)
        self.tollOffsetXLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.tollOffsetXLabel.setObjectName("tollOffsetXLabel")
        self.toolOffsetXYBackButton = QtWidgets.QPushButton(self.toolOffsetXYPage)
        self.toolOffsetXYBackButton.setGeometry(QtCore.QRect(0, 359, 801, 121))
        self.toolOffsetXYBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetXYBackButton.setFont(font)
        self.toolOffsetXYBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.toolOffsetXYBackButton.setText("")
        self.toolOffsetXYBackButton.setIcon(icon5)
        self.toolOffsetXYBackButton.setIconSize(QtCore.QSize(70, 70))
        self.toolOffsetXYBackButton.setCheckable(False)
        self.toolOffsetXYBackButton.setAutoDefault(False)
        self.toolOffsetXYBackButton.setDefault(False)
        self.toolOffsetXYBackButton.setFlat(False)
        self.toolOffsetXYBackButton.setObjectName("toolOffsetXYBackButton")
        self.toolOffsetLabel = QtWidgets.QLabel(self.toolOffsetXYPage)
        self.toolOffsetLabel.setGeometry(QtCore.QRect(30, 30, 521, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolOffsetLabel.setFont(font)
        self.toolOffsetLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolOffsetLabel.setObjectName("toolOffsetLabel")
        self.toolOffsetXDoubleSpinBox = QtWidgets.QDoubleSpinBox(self.toolOffsetXYPage)
        self.toolOffsetXDoubleSpinBox.setGeometry(QtCore.QRect(291, 79, 221, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetXDoubleSpinBox.setFont(font)
        self.toolOffsetXDoubleSpinBox.setStyleSheet("QDoubleSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QDoubleSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QDoubleSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::up-arrow { \n"
"image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"\n"
"\n"
"QDoubleSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QDoubleSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-arrow { \n"
"image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.toolOffsetXDoubleSpinBox.setFrame(False)
        self.toolOffsetXDoubleSpinBox.setReadOnly(False)
        self.toolOffsetXDoubleSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.toolOffsetXDoubleSpinBox.setAccelerated(True)
        self.toolOffsetXDoubleSpinBox.setDecimals(2)
        self.toolOffsetXDoubleSpinBox.setMinimum(-50.0)
        self.toolOffsetXDoubleSpinBox.setMaximum(50.0)
        self.toolOffsetXDoubleSpinBox.setSingleStep(0.025)
        self.toolOffsetXDoubleSpinBox.setProperty("value", 0.0)
        self.toolOffsetXDoubleSpinBox.setObjectName("toolOffsetXDoubleSpinBox")
        self.toolOffsetXSetButton = QtWidgets.QPushButton(self.toolOffsetXYPage)
        self.toolOffsetXSetButton.setGeometry(QtCore.QRect(510, 80, 91, 119))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetXSetButton.setFont(font)
        self.toolOffsetXSetButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-top-right-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.toolOffsetXSetButton.setText("")
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("templates/img/verification-mark.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolOffsetXSetButton.setIcon(icon18)
        self.toolOffsetXSetButton.setIconSize(QtCore.QSize(70, 70))
        self.toolOffsetXSetButton.setObjectName("toolOffsetXSetButton")
        self.toolOffsetYSetButton = QtWidgets.QPushButton(self.toolOffsetXYPage)
        self.toolOffsetYSetButton.setGeometry(QtCore.QRect(510, 220, 91, 119))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetYSetButton.setFont(font)
        self.toolOffsetYSetButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-top-right-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.toolOffsetYSetButton.setText("")
        self.toolOffsetYSetButton.setIcon(icon18)
        self.toolOffsetYSetButton.setIconSize(QtCore.QSize(70, 70))
        self.toolOffsetYSetButton.setObjectName("toolOffsetYSetButton")
        self.toolOffsetYDoubleSpinBox = QtWidgets.QDoubleSpinBox(self.toolOffsetXYPage)
        self.toolOffsetYDoubleSpinBox.setGeometry(QtCore.QRect(291, 219, 221, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetYDoubleSpinBox.setFont(font)
        self.toolOffsetYDoubleSpinBox.setStyleSheet("QDoubleSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QDoubleSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QDoubleSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::up-arrow { \n"
"image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"\n"
"\n"
"QDoubleSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QDoubleSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-arrow { \n"
"image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.toolOffsetYDoubleSpinBox.setFrame(False)
        self.toolOffsetYDoubleSpinBox.setReadOnly(False)
        self.toolOffsetYDoubleSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.toolOffsetYDoubleSpinBox.setAccelerated(True)
        self.toolOffsetYDoubleSpinBox.setDecimals(2)
        self.toolOffsetYDoubleSpinBox.setMinimum(-4.0)
        self.toolOffsetYDoubleSpinBox.setMaximum(4.0)
        self.toolOffsetYDoubleSpinBox.setSingleStep(0.025)
        self.toolOffsetYDoubleSpinBox.setObjectName("toolOffsetYDoubleSpinBox")
        self.toolOffsetYLabel = QtWidgets.QLabel(self.toolOffsetXYPage)
        self.toolOffsetYLabel.setGeometry(QtCore.QRect(160, 258, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolOffsetYLabel.setFont(font)
        self.toolOffsetYLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolOffsetYLabel.setObjectName("toolOffsetYLabel")
        self.stackedWidget.addWidget(self.toolOffsetXYPage)
        self.toolOffsetZpage = QtWidgets.QWidget()
        self.toolOffsetZpage.setObjectName("toolOffsetZpage")
        self.toolOffsetZSetButton = QtWidgets.QPushButton(self.toolOffsetZpage)
        self.toolOffsetZSetButton.setGeometry(QtCore.QRect(490, 141, 91, 119))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetZSetButton.setFont(font)
        self.toolOffsetZSetButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-top-right-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.toolOffsetZSetButton.setText("")
        self.toolOffsetZSetButton.setIcon(icon18)
        self.toolOffsetZSetButton.setIconSize(QtCore.QSize(70, 70))
        self.toolOffsetZSetButton.setObjectName("toolOffsetZSetButton")
        self.toolOffsetZDoubleSpinBox = QtWidgets.QDoubleSpinBox(self.toolOffsetZpage)
        self.toolOffsetZDoubleSpinBox.setGeometry(QtCore.QRect(270, 140, 221, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetZDoubleSpinBox.setFont(font)
        self.toolOffsetZDoubleSpinBox.setStyleSheet("QDoubleSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QDoubleSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QDoubleSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::up-arrow { \n"
"image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"\n"
"\n"
"QDoubleSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QDoubleSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-arrow { \n"
"image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.toolOffsetZDoubleSpinBox.setFrame(False)
        self.toolOffsetZDoubleSpinBox.setReadOnly(False)
        self.toolOffsetZDoubleSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.toolOffsetZDoubleSpinBox.setAccelerated(True)
        self.toolOffsetZDoubleSpinBox.setDecimals(2)
        self.toolOffsetZDoubleSpinBox.setMinimum(-2.0)
        self.toolOffsetZDoubleSpinBox.setMaximum(2.0)
        self.toolOffsetZDoubleSpinBox.setSingleStep(0.025)
        self.toolOffsetZDoubleSpinBox.setProperty("value", 0.0)
        self.toolOffsetZDoubleSpinBox.setObjectName("toolOffsetZDoubleSpinBox")
        self.tollOffsetXLabel_2 = QtWidgets.QLabel(self.toolOffsetZpage)
        self.tollOffsetXLabel_2.setGeometry(QtCore.QRect(120, 180, 131, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.tollOffsetXLabel_2.setFont(font)
        self.tollOffsetXLabel_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.tollOffsetXLabel_2.setObjectName("tollOffsetXLabel_2")
        self.toolOffsetLabel_2 = QtWidgets.QLabel(self.toolOffsetZpage)
        self.toolOffsetLabel_2.setGeometry(QtCore.QRect(20, 70, 461, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolOffsetLabel_2.setFont(font)
        self.toolOffsetLabel_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolOffsetLabel_2.setObjectName("toolOffsetLabel_2")
        self.toolOffsetZBackButton = QtWidgets.QPushButton(self.toolOffsetZpage)
        self.toolOffsetZBackButton.setGeometry(QtCore.QRect(0, 359, 801, 121))
        self.toolOffsetZBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolOffsetZBackButton.setFont(font)
        self.toolOffsetZBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.toolOffsetZBackButton.setText("")
        self.toolOffsetZBackButton.setIcon(icon5)
        self.toolOffsetZBackButton.setIconSize(QtCore.QSize(70, 70))
        self.toolOffsetZBackButton.setCheckable(False)
        self.toolOffsetZBackButton.setAutoDefault(False)
        self.toolOffsetZBackButton.setDefault(False)
        self.toolOffsetZBackButton.setFlat(False)
        self.toolOffsetZBackButton.setObjectName("toolOffsetZBackButton")
        self.stackedWidget.addWidget(self.toolOffsetZpage)
        self.quickStep1Page = QtWidgets.QWidget()
        self.quickStep1Page.setObjectName("quickStep1Page")
        self.quickStep1CancelButton = QtWidgets.QPushButton(self.quickStep1Page)
        self.quickStep1CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep1CancelButton.setFont(font)
        self.quickStep1CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep1CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep1CancelButton.setObjectName("quickStep1CancelButton")
        self.quickStep1NextButton = QtWidgets.QPushButton(self.quickStep1Page)
        self.quickStep1NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep1NextButton.setFont(font)
        self.quickStep1NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep1NextButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep1NextButton.setObjectName("quickStep1NextButton")
        self.calibrateLabel_6 = QtWidgets.QLabel(self.quickStep1Page)
        self.calibrateLabel_6.setGeometry(QtCore.QRect(10, 10, 781, 261))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_6.setFont(font)
        self.calibrateLabel_6.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_6.setWordWrap(True)
        self.calibrateLabel_6.setObjectName("calibrateLabel_6")
        self.stackedWidget.addWidget(self.quickStep1Page)
        self.quickStep2Page = QtWidgets.QWidget()
        self.quickStep2Page.setObjectName("quickStep2Page")
        self.quickStep2NextButton = QtWidgets.QPushButton(self.quickStep2Page)
        self.quickStep2NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep2NextButton.setFont(font)
        self.quickStep2NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep2NextButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep2NextButton.setObjectName("quickStep2NextButton")
        self.quickStep2CancelButton = QtWidgets.QPushButton(self.quickStep2Page)
        self.quickStep2CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep2CancelButton.setFont(font)
        self.quickStep2CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep2CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep2CancelButton.setObjectName("quickStep2CancelButton")
        self.calibrateLabel_7 = QtWidgets.QLabel(self.quickStep2Page)
        self.calibrateLabel_7.setGeometry(QtCore.QRect(10, 10, 781, 261))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_7.setFont(font)
        self.calibrateLabel_7.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_7.setWordWrap(True)
        self.calibrateLabel_7.setObjectName("calibrateLabel_7")
        self.stackedWidget.addWidget(self.quickStep2Page)
        self.quickStep3Page = QtWidgets.QWidget()
        self.quickStep3Page.setObjectName("quickStep3Page")
        self.quickStep3NextButton = QtWidgets.QPushButton(self.quickStep3Page)
        self.quickStep3NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep3NextButton.setFont(font)
        self.quickStep3NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep3NextButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep3NextButton.setObjectName("quickStep3NextButton")
        self.quickStep3CancelButton = QtWidgets.QPushButton(self.quickStep3Page)
        self.quickStep3CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep3CancelButton.setFont(font)
        self.quickStep3CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep3CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep3CancelButton.setObjectName("quickStep3CancelButton")
        self.calibrateLabel_10 = QtWidgets.QLabel(self.quickStep3Page)
        self.calibrateLabel_10.setGeometry(QtCore.QRect(10, 10, 781, 261))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_10.setFont(font)
        self.calibrateLabel_10.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_10.setWordWrap(True)
        self.calibrateLabel_10.setObjectName("calibrateLabel_10")
        self.stackedWidget.addWidget(self.quickStep3Page)
        self.quickStep4Page = QtWidgets.QWidget()
        self.quickStep4Page.setObjectName("quickStep4Page")
        self.quickStep4NextButton = QtWidgets.QPushButton(self.quickStep4Page)
        self.quickStep4NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep4NextButton.setFont(font)
        self.quickStep4NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep4NextButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep4NextButton.setObjectName("quickStep4NextButton")
        self.quickStep4CancelButton = QtWidgets.QPushButton(self.quickStep4Page)
        self.quickStep4CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.quickStep4CancelButton.setFont(font)
        self.quickStep4CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.quickStep4CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.quickStep4CancelButton.setObjectName("quickStep4CancelButton")
        self.calibrateLabel_12 = QtWidgets.QLabel(self.quickStep4Page)
        self.calibrateLabel_12.setGeometry(QtCore.QRect(10, 10, 781, 261))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_12.setFont(font)
        self.calibrateLabel_12.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_12.setWordWrap(True)
        self.calibrateLabel_12.setObjectName("calibrateLabel_12")
        self.stackedWidget.addWidget(self.quickStep4Page)
        self.nozzleHeightStep1Page = QtWidgets.QWidget()
        self.nozzleHeightStep1Page.setObjectName("nozzleHeightStep1Page")
        self.nozzleHeightStep1NextButton = QtWidgets.QPushButton(self.nozzleHeightStep1Page)
        self.nozzleHeightStep1NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.nozzleHeightStep1NextButton.setFont(font)
        self.nozzleHeightStep1NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.nozzleHeightStep1NextButton.setIconSize(QtCore.QSize(40, 40))
        self.nozzleHeightStep1NextButton.setObjectName("nozzleHeightStep1NextButton")
        self.nozzleHeightStep1CancelButton = QtWidgets.QPushButton(self.nozzleHeightStep1Page)
        self.nozzleHeightStep1CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.nozzleHeightStep1CancelButton.setFont(font)
        self.nozzleHeightStep1CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.nozzleHeightStep1CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.nozzleHeightStep1CancelButton.setObjectName("nozzleHeightStep1CancelButton")
        self.toolZOffsetLabel = QtWidgets.QLabel(self.nozzleHeightStep1Page)
        self.toolZOffsetLabel.setGeometry(QtCore.QRect(10, 10, 791, 141))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolZOffsetLabel.setFont(font)
        self.toolZOffsetLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolZOffsetLabel.setWordWrap(True)
        self.toolZOffsetLabel.setObjectName("toolZOffsetLabel")
        self.moveZMT1CaliberateButton = QtWidgets.QPushButton(self.nozzleHeightStep1Page)
        self.moveZMT1CaliberateButton.setGeometry(QtCore.QRect(400, 160, 241, 171))
        self.moveZMT1CaliberateButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.moveZMT1CaliberateButton.setFont(font)
        self.moveZMT1CaliberateButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-right-radius: 15px;\n"
"    border-top-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZMT1CaliberateButton.setText("")
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("templates/img/arrows.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.moveZMT1CaliberateButton.setIcon(icon19)
        self.moveZMT1CaliberateButton.setIconSize(QtCore.QSize(150, 150))
        self.moveZMT1CaliberateButton.setCheckable(False)
        self.moveZMT1CaliberateButton.setAutoDefault(False)
        self.moveZMT1CaliberateButton.setDefault(False)
        self.moveZMT1CaliberateButton.setFlat(False)
        self.moveZMT1CaliberateButton.setObjectName("moveZMT1CaliberateButton")
        self.moveZPT1CaliberateButton = QtWidgets.QPushButton(self.nozzleHeightStep1Page)
        self.moveZPT1CaliberateButton.setGeometry(QtCore.QRect(160, 160, 241, 171))
        self.moveZPT1CaliberateButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.moveZPT1CaliberateButton.setFont(font)
        self.moveZPT1CaliberateButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-left-radius: 15px;\n"
"    border-top-left-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZPT1CaliberateButton.setText("")
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap("templates/img/arrows-5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.moveZPT1CaliberateButton.setIcon(icon20)
        self.moveZPT1CaliberateButton.setIconSize(QtCore.QSize(150, 150))
        self.moveZPT1CaliberateButton.setCheckable(False)
        self.moveZPT1CaliberateButton.setAutoDefault(False)
        self.moveZPT1CaliberateButton.setDefault(False)
        self.moveZPT1CaliberateButton.setFlat(False)
        self.moveZPT1CaliberateButton.setObjectName("moveZPT1CaliberateButton")
        self.stackedWidget.addWidget(self.nozzleHeightStep1Page)
        self.idexConfigStep1Page = QtWidgets.QWidget()
        self.idexConfigStep1Page.setObjectName("idexConfigStep1Page")
        self.calibrateLabel_8 = QtWidgets.QLabel(self.idexConfigStep1Page)
        self.calibrateLabel_8.setGeometry(QtCore.QRect(10, 10, 781, 61))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_8.setFont(font)
        self.calibrateLabel_8.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_8.setWordWrap(True)
        self.calibrateLabel_8.setObjectName("calibrateLabel_8")
        self.calibrateLabel_14 = QtWidgets.QLabel(self.idexConfigStep1Page)
        self.calibrateLabel_14.setGeometry(QtCore.QRect(10, 80, 391, 281))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_14.setFont(font)
        self.calibrateLabel_14.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_14.setWordWrap(True)
        self.calibrateLabel_14.setObjectName("calibrateLabel_14")
        self.idexConfigStep1NextButton = QtWidgets.QPushButton(self.idexConfigStep1Page)
        self.idexConfigStep1NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep1NextButton.setFont(font)
        self.idexConfigStep1NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep1NextButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep1NextButton.setObjectName("idexConfigStep1NextButton")
        self.idexConfigStep1CancelButton = QtWidgets.QPushButton(self.idexConfigStep1Page)
        self.idexConfigStep1CancelButton.setEnabled(True)
        self.idexConfigStep1CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep1CancelButton.setFont(font)
        self.idexConfigStep1CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep1CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep1CancelButton.setObjectName("idexConfigStep1CancelButton")
        self.stackedWidget.addWidget(self.idexConfigStep1Page)
        self.idexConfigStep2Page = QtWidgets.QWidget()
        self.idexConfigStep2Page.setObjectName("idexConfigStep2Page")
        self.idexConfigStep2NextButton = QtWidgets.QPushButton(self.idexConfigStep2Page)
        self.idexConfigStep2NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep2NextButton.setFont(font)
        self.idexConfigStep2NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep2NextButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep2NextButton.setObjectName("idexConfigStep2NextButton")
        self.idexConfigStep2CancelButton = QtWidgets.QPushButton(self.idexConfigStep2Page)
        self.idexConfigStep2CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep2CancelButton.setFont(font)
        self.idexConfigStep2CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep2CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep2CancelButton.setObjectName("idexConfigStep2CancelButton")
        self.calibrateLabel_9 = QtWidgets.QLabel(self.idexConfigStep2Page)
        self.calibrateLabel_9.setGeometry(QtCore.QRect(10, 10, 781, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_9.setFont(font)
        self.calibrateLabel_9.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_9.setWordWrap(True)
        self.calibrateLabel_9.setObjectName("calibrateLabel_9")
        self.calibrateLabel_15 = QtWidgets.QLabel(self.idexConfigStep2Page)
        self.calibrateLabel_15.setGeometry(QtCore.QRect(10, 80, 391, 281))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_15.setFont(font)
        self.calibrateLabel_15.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_15.setWordWrap(True)
        self.calibrateLabel_15.setObjectName("calibrateLabel_15")
        self.stackedWidget.addWidget(self.idexConfigStep2Page)
        self.idexConfigStep3Page = QtWidgets.QWidget()
        self.idexConfigStep3Page.setObjectName("idexConfigStep3Page")
        self.calibrateLabel_11 = QtWidgets.QLabel(self.idexConfigStep3Page)
        self.calibrateLabel_11.setGeometry(QtCore.QRect(10, 10, 781, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_11.setFont(font)
        self.calibrateLabel_11.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_11.setWordWrap(True)
        self.calibrateLabel_11.setObjectName("calibrateLabel_11")
        self.idexConfigStep3NextButton = QtWidgets.QPushButton(self.idexConfigStep3Page)
        self.idexConfigStep3NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep3NextButton.setFont(font)
        self.idexConfigStep3NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep3NextButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep3NextButton.setObjectName("idexConfigStep3NextButton")
        self.calibrateLabel_16 = QtWidgets.QLabel(self.idexConfigStep3Page)
        self.calibrateLabel_16.setGeometry(QtCore.QRect(10, 80, 391, 281))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_16.setFont(font)
        self.calibrateLabel_16.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_16.setWordWrap(True)
        self.calibrateLabel_16.setObjectName("calibrateLabel_16")
        self.idexConfigStep3CancelButton = QtWidgets.QPushButton(self.idexConfigStep3Page)
        self.idexConfigStep3CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep3CancelButton.setFont(font)
        self.idexConfigStep3CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep3CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep3CancelButton.setObjectName("idexConfigStep3CancelButton")
        self.stackedWidget.addWidget(self.idexConfigStep3Page)
        self.idexConfigStep4Page = QtWidgets.QWidget()
        self.idexConfigStep4Page.setObjectName("idexConfigStep4Page")
        self.calibrateLabel_13 = QtWidgets.QLabel(self.idexConfigStep4Page)
        self.calibrateLabel_13.setGeometry(QtCore.QRect(10, 10, 781, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_13.setFont(font)
        self.calibrateLabel_13.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_13.setWordWrap(True)
        self.calibrateLabel_13.setObjectName("calibrateLabel_13")
        self.idexConfigStep4NextButton = QtWidgets.QPushButton(self.idexConfigStep4Page)
        self.idexConfigStep4NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep4NextButton.setFont(font)
        self.idexConfigStep4NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep4NextButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep4NextButton.setObjectName("idexConfigStep4NextButton")
        self.calibrateLabel_17 = QtWidgets.QLabel(self.idexConfigStep4Page)
        self.calibrateLabel_17.setGeometry(QtCore.QRect(10, 80, 391, 281))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.calibrateLabel_17.setFont(font)
        self.calibrateLabel_17.setStyleSheet("color: rgb(255, 255, 255);")
        self.calibrateLabel_17.setWordWrap(True)
        self.calibrateLabel_17.setObjectName("calibrateLabel_17")
        self.idexConfigStep4CancelButton = QtWidgets.QPushButton(self.idexConfigStep4Page)
        self.idexConfigStep4CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep4CancelButton.setFont(font)
        self.idexConfigStep4CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep4CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep4CancelButton.setObjectName("idexConfigStep4CancelButton")
        self.stackedWidget.addWidget(self.idexConfigStep4Page)
        self.idexConfigStep5Page = QtWidgets.QWidget()
        self.idexConfigStep5Page.setObjectName("idexConfigStep5Page")
        self.moveZMIdexButton = QtWidgets.QPushButton(self.idexConfigStep5Page)
        self.moveZMIdexButton.setGeometry(QtCore.QRect(400, 60, 241, 81))
        self.moveZMIdexButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.moveZMIdexButton.setFont(font)
        self.moveZMIdexButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-right-radius: 15px;\n"
"    border-top-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZMIdexButton.setText("")
        self.moveZMIdexButton.setIcon(icon19)
        self.moveZMIdexButton.setIconSize(QtCore.QSize(150, 150))
        self.moveZMIdexButton.setCheckable(False)
        self.moveZMIdexButton.setAutoDefault(False)
        self.moveZMIdexButton.setDefault(False)
        self.moveZMIdexButton.setFlat(False)
        self.moveZMIdexButton.setObjectName("moveZMIdexButton")
        self.toolZOffsetLabel_4 = QtWidgets.QLabel(self.idexConfigStep5Page)
        self.toolZOffsetLabel_4.setGeometry(QtCore.QRect(10, 10, 791, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolZOffsetLabel_4.setFont(font)
        self.toolZOffsetLabel_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolZOffsetLabel_4.setWordWrap(True)
        self.toolZOffsetLabel_4.setObjectName("toolZOffsetLabel_4")
        self.idexConfigStep5NextButton = QtWidgets.QPushButton(self.idexConfigStep5Page)
        self.idexConfigStep5NextButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep5NextButton.setFont(font)
        self.idexConfigStep5NextButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep5NextButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep5NextButton.setObjectName("idexConfigStep5NextButton")
        self.idexConfigStep5CancelButton = QtWidgets.QPushButton(self.idexConfigStep5Page)
        self.idexConfigStep5CancelButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.idexConfigStep5CancelButton.setFont(font)
        self.idexConfigStep5CancelButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.idexConfigStep5CancelButton.setIconSize(QtCore.QSize(40, 40))
        self.idexConfigStep5CancelButton.setObjectName("idexConfigStep5CancelButton")
        self.moveZPIdexButton = QtWidgets.QPushButton(self.idexConfigStep5Page)
        self.moveZPIdexButton.setGeometry(QtCore.QRect(160, 60, 241, 81))
        self.moveZPIdexButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.moveZPIdexButton.setFont(font)
        self.moveZPIdexButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-left-radius: 15px;\n"
"    border-top-left-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZPIdexButton.setText("")
        self.moveZPIdexButton.setIcon(icon20)
        self.moveZPIdexButton.setIconSize(QtCore.QSize(150, 150))
        self.moveZPIdexButton.setCheckable(False)
        self.moveZPIdexButton.setAutoDefault(False)
        self.moveZPIdexButton.setDefault(False)
        self.moveZPIdexButton.setFlat(False)
        self.moveZPIdexButton.setObjectName("moveZPIdexButton")
        self.toolZOffsetLabel_5 = QtWidgets.QLabel(self.idexConfigStep5Page)
        self.toolZOffsetLabel_5.setGeometry(QtCore.QRect(10, 140, 791, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolZOffsetLabel_5.setFont(font)
        self.toolZOffsetLabel_5.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolZOffsetLabel_5.setWordWrap(True)
        self.toolZOffsetLabel_5.setObjectName("toolZOffsetLabel_5")
        self.toolZOffsetLabel_6 = QtWidgets.QLabel(self.idexConfigStep5Page)
        self.toolZOffsetLabel_6.setGeometry(QtCore.QRect(10, 190, 791, 81))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolZOffsetLabel_6.setFont(font)
        self.toolZOffsetLabel_6.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolZOffsetLabel_6.setWordWrap(True)
        self.toolZOffsetLabel_6.setObjectName("toolZOffsetLabel_6")
        self.toolZOffsetLabel_7 = QtWidgets.QLabel(self.idexConfigStep5Page)
        self.toolZOffsetLabel_7.setGeometry(QtCore.QRect(10, 270, 791, 81))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.toolZOffsetLabel_7.setFont(font)
        self.toolZOffsetLabel_7.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolZOffsetLabel_7.setWordWrap(True)
        self.toolZOffsetLabel_7.setObjectName("toolZOffsetLabel_7")
        self.stackedWidget.addWidget(self.idexConfigStep5Page)
        self.nozzleOffsetPage = QtWidgets.QWidget()
        self.nozzleOffsetPage.setObjectName("nozzleOffsetPage")
        self.nozzleOffsetDoubleSpinBox = QtWidgets.QDoubleSpinBox(self.nozzleOffsetPage)
        self.nozzleOffsetDoubleSpinBox.setGeometry(QtCore.QRect(170, 150, 321, 136))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.nozzleOffsetDoubleSpinBox.setFont(font)
        self.nozzleOffsetDoubleSpinBox.setStyleSheet("QDoubleSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QDoubleSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QDoubleSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::up-arrow { \n"
"image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"\n"
"\n"
"QDoubleSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QDoubleSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-arrow { \n"
"image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QDoubleSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.nozzleOffsetDoubleSpinBox.setFrame(False)
        self.nozzleOffsetDoubleSpinBox.setReadOnly(False)
        self.nozzleOffsetDoubleSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.nozzleOffsetDoubleSpinBox.setAccelerated(True)
        self.nozzleOffsetDoubleSpinBox.setDecimals(2)
        self.nozzleOffsetDoubleSpinBox.setMinimum(-2.0)
        self.nozzleOffsetDoubleSpinBox.setMaximum(2.0)
        self.nozzleOffsetDoubleSpinBox.setSingleStep(0.05)
        self.nozzleOffsetDoubleSpinBox.setObjectName("nozzleOffsetDoubleSpinBox")
        self.nozzleOffsetSetButton = QtWidgets.QPushButton(self.nozzleOffsetPage)
        self.nozzleOffsetSetButton.setGeometry(QtCore.QRect(488, 152, 91, 132))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.nozzleOffsetSetButton.setFont(font)
        self.nozzleOffsetSetButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-top-right-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.nozzleOffsetSetButton.setText("")
        self.nozzleOffsetSetButton.setIcon(icon18)
        self.nozzleOffsetSetButton.setIconSize(QtCore.QSize(70, 70))
        self.nozzleOffsetSetButton.setObjectName("nozzleOffsetSetButton")
        self.feedRateLabelControlPage_3 = QtWidgets.QLabel(self.nozzleOffsetPage)
        self.feedRateLabelControlPage_3.setGeometry(QtCore.QRect(10, 10, 781, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.feedRateLabelControlPage_3.setFont(font)
        self.feedRateLabelControlPage_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.feedRateLabelControlPage_3.setWordWrap(True)
        self.feedRateLabelControlPage_3.setObjectName("feedRateLabelControlPage_3")
        self.nozzleOffsetBackButton = QtWidgets.QPushButton(self.nozzleOffsetPage)
        self.nozzleOffsetBackButton.setGeometry(QtCore.QRect(-1, 359, 801, 121))
        self.nozzleOffsetBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.nozzleOffsetBackButton.setFont(font)
        self.nozzleOffsetBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.nozzleOffsetBackButton.setText("")
        self.nozzleOffsetBackButton.setIcon(icon5)
        self.nozzleOffsetBackButton.setIconSize(QtCore.QSize(70, 70))
        self.nozzleOffsetBackButton.setCheckable(False)
        self.nozzleOffsetBackButton.setAutoDefault(False)
        self.nozzleOffsetBackButton.setDefault(False)
        self.nozzleOffsetBackButton.setFlat(False)
        self.nozzleOffsetBackButton.setObjectName("nozzleOffsetBackButton")
        self.printPreviewSelected_2 = QtWidgets.QLabel(self.nozzleOffsetPage)
        self.printPreviewSelected_2.setGeometry(QtCore.QRect(260, 150, 161, 161))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.printPreviewSelected_2.setFont(font)
        self.printPreviewSelected_2.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.printPreviewSelected_2.setText("")
        self.printPreviewSelected_2.setPixmap(QtGui.QPixmap("templates/img/Nozzle Offset.png"))
        self.printPreviewSelected_2.setScaledContents(True)
        self.printPreviewSelected_2.setObjectName("printPreviewSelected_2")
        self.feedRateLabelControlPage_4 = QtWidgets.QLabel(self.nozzleOffsetPage)
        self.feedRateLabelControlPage_4.setGeometry(QtCore.QRect(10, 320, 211, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.feedRateLabelControlPage_4.setFont(font)
        self.feedRateLabelControlPage_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.feedRateLabelControlPage_4.setWordWrap(True)
        self.feedRateLabelControlPage_4.setObjectName("feedRateLabelControlPage_4")
        self.currentNozzleOffset = QtWidgets.QLabel(self.nozzleOffsetPage)
        self.currentNozzleOffset.setGeometry(QtCore.QRect(240, 320, 211, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.currentNozzleOffset.setFont(font)
        self.currentNozzleOffset.setStyleSheet("color: rgb(255, 255, 255);")
        self.currentNozzleOffset.setWordWrap(True)
        self.currentNozzleOffset.setObjectName("currentNozzleOffset")
        self.feedRateLabelControlPage_3.raise_()
        self.nozzleOffsetDoubleSpinBox.raise_()
        self.nozzleOffsetSetButton.raise_()
        self.nozzleOffsetBackButton.raise_()
        self.printPreviewSelected_2.raise_()
        self.feedRateLabelControlPage_4.raise_()
        self.currentNozzleOffset.raise_()
        self.stackedWidget.addWidget(self.nozzleOffsetPage)
        self.printLocationPage = QtWidgets.QWidget()
        self.printLocationPage.setObjectName("printLocationPage")
        self.fromUsbButton = QtWidgets.QPushButton(self.printLocationPage)
        self.fromUsbButton.setGeometry(QtCore.QRect(267, 350, 265, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fromUsbButton.setFont(font)
        self.fromUsbButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap("templates/img/usb.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fromUsbButton.setIcon(icon21)
        self.fromUsbButton.setIconSize(QtCore.QSize(70, 70))
        self.fromUsbButton.setObjectName("fromUsbButton")
        self.printFromLabel = QtWidgets.QLabel(self.printLocationPage)
        self.printFromLabel.setGeometry(QtCore.QRect(30, 80, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.printFromLabel.setFont(font)
        self.printFromLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.printFromLabel.setObjectName("printFromLabel")
        self.printLocationScreenBackButton = QtWidgets.QPushButton(self.printLocationPage)
        self.printLocationScreenBackButton.setGeometry(QtCore.QRect(529, 350, 271, 131))
        self.printLocationScreenBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        self.printLocationScreenBackButton.setFont(font)
        self.printLocationScreenBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.printLocationScreenBackButton.setText("")
        self.printLocationScreenBackButton.setIcon(icon5)
        self.printLocationScreenBackButton.setIconSize(QtCore.QSize(70, 70))
        self.printLocationScreenBackButton.setCheckable(False)
        self.printLocationScreenBackButton.setAutoDefault(False)
        self.printLocationScreenBackButton.setDefault(False)
        self.printLocationScreenBackButton.setFlat(False)
        self.printLocationScreenBackButton.setObjectName("printLocationScreenBackButton")
        self.fromLocalButton = QtWidgets.QPushButton(self.printLocationPage)
        self.fromLocalButton.setGeometry(QtCore.QRect(0, 350, 271, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fromLocalButton.setFont(font)
        self.fromLocalButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap("templates/img/folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fromLocalButton.setIcon(icon22)
        self.fromLocalButton.setIconSize(QtCore.QSize(70, 70))
        self.fromLocalButton.setObjectName("fromLocalButton")
        self.stackedWidget.addWidget(self.printLocationPage)
        self.fileListLocalPage = QtWidgets.QWidget()
        self.fileListLocalPage.setObjectName("fileListLocalPage")
        self.fileListWidget = QtWidgets.QListWidget(self.fileListLocalPage)
        self.fileListWidget.setGeometry(QtCore.QRect(0, 0, 591, 481))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.fileListWidget.setFont(font)
        self.fileListWidget.setStyleSheet("\n"
"\n"
"QListView {\n"
"    show-decoration-selected: 1; /* make the selection span the entire width\n"
" of the view */\n"
"    background-color: rgb(255, 255, 255);\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:!selected {\n"
"    color: black;\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:selected {\n"
"    border:  rgb(182, 182, 182);\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(40, 40, 40);\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:selected:!active {\n"
"     border: 1px solid rgb(182, 182, 182);\n"
"    background-color: rgb(40,40,40);\n"
"outline: none;\n"
"\n"
"}\n"
"\n"
"QListView::item:selected:active {\n"
"     border: 1px solid  rgb(182, 182, 182);\n"
"    background-color: rgb(40,40,40);\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:selected:focus {\n"
"    outline: none;\n"
"}\n"
"")
        self.fileListWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.fileListWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.fileListWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileListWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileListWidget.setAutoScrollMargin(4)
        self.fileListWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.fileListWidget.setObjectName("fileListWidget")
        self.localStorageBackButton = QtWidgets.QPushButton(self.fileListLocalPage)
        self.localStorageBackButton.setGeometry(QtCore.QRect(690, 330, 111, 151))
        self.localStorageBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.localStorageBackButton.setFont(font)
        self.localStorageBackButton.setStyleSheet("QPushButton {\n"
"        border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.localStorageBackButton.setText("")
        self.localStorageBackButton.setIcon(icon5)
        self.localStorageBackButton.setIconSize(QtCore.QSize(70, 70))
        self.localStorageBackButton.setCheckable(False)
        self.localStorageBackButton.setAutoDefault(False)
        self.localStorageBackButton.setDefault(False)
        self.localStorageBackButton.setFlat(False)
        self.localStorageBackButton.setObjectName("localStorageBackButton")
        self.localStorageSelectButton = QtWidgets.QPushButton(self.fileListLocalPage)
        self.localStorageSelectButton.setGeometry(QtCore.QRect(690, 0, 111, 151))
        self.localStorageSelectButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.localStorageSelectButton.setFont(font)
        self.localStorageSelectButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.localStorageSelectButton.setText("")
        self.localStorageSelectButton.setIcon(icon18)
        self.localStorageSelectButton.setIconSize(QtCore.QSize(70, 70))
        self.localStorageSelectButton.setCheckable(False)
        self.localStorageSelectButton.setAutoDefault(False)
        self.localStorageSelectButton.setDefault(False)
        self.localStorageSelectButton.setFlat(False)
        self.localStorageSelectButton.setObjectName("localStorageSelectButton")
        self.localStorageScrollDown = QtWidgets.QPushButton(self.fileListLocalPage)
        self.localStorageScrollDown.setGeometry(QtCore.QRect(590, 240, 101, 241))
        self.localStorageScrollDown.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.localStorageScrollDown.setFont(font)
        self.localStorageScrollDown.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.localStorageScrollDown.setText("")
        self.localStorageScrollDown.setIcon(icon20)
        self.localStorageScrollDown.setIconSize(QtCore.QSize(70, 70))
        self.localStorageScrollDown.setCheckable(False)
        self.localStorageScrollDown.setAutoRepeat(True)
        self.localStorageScrollDown.setAutoExclusive(False)
        self.localStorageScrollDown.setAutoDefault(False)
        self.localStorageScrollDown.setDefault(False)
        self.localStorageScrollDown.setFlat(False)
        self.localStorageScrollDown.setObjectName("localStorageScrollDown")
        self.localStorageScrollUp = QtWidgets.QPushButton(self.fileListLocalPage)
        self.localStorageScrollUp.setGeometry(QtCore.QRect(590, 0, 101, 241))
        self.localStorageScrollUp.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.localStorageScrollUp.setFont(font)
        self.localStorageScrollUp.setStyleSheet("QPushButton {\n"
"\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.localStorageScrollUp.setText("")
        self.localStorageScrollUp.setIcon(icon19)
        self.localStorageScrollUp.setIconSize(QtCore.QSize(70, 70))
        self.localStorageScrollUp.setCheckable(False)
        self.localStorageScrollUp.setAutoRepeat(True)
        self.localStorageScrollUp.setAutoExclusive(False)
        self.localStorageScrollUp.setAutoDefault(False)
        self.localStorageScrollUp.setDefault(False)
        self.localStorageScrollUp.setFlat(False)
        self.localStorageScrollUp.setObjectName("localStorageScrollUp")
        self.localStorageDeleteButton = QtWidgets.QPushButton(self.fileListLocalPage)
        self.localStorageDeleteButton.setGeometry(QtCore.QRect(690, 150, 111, 181))
        self.localStorageDeleteButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.localStorageDeleteButton.setFont(font)
        self.localStorageDeleteButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.localStorageDeleteButton.setText("")
        self.localStorageDeleteButton.setIcon(icon10)
        self.localStorageDeleteButton.setIconSize(QtCore.QSize(70, 70))
        self.localStorageDeleteButton.setCheckable(False)
        self.localStorageDeleteButton.setAutoDefault(False)
        self.localStorageDeleteButton.setDefault(False)
        self.localStorageDeleteButton.setFlat(False)
        self.localStorageDeleteButton.setObjectName("localStorageDeleteButton")
        self.stackedWidget.addWidget(self.fileListLocalPage)
        self.fileListUSBPage = QtWidgets.QWidget()
        self.fileListUSBPage.setObjectName("fileListUSBPage")
        self.USBStorageSaveButton = QtWidgets.QPushButton(self.fileListUSBPage)
        self.USBStorageSaveButton.setGeometry(QtCore.QRect(690, 150, 111, 181))
        self.USBStorageSaveButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(20)
        self.USBStorageSaveButton.setFont(font)
        self.USBStorageSaveButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.USBStorageSaveButton.setText("")
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap("templates/img/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.USBStorageSaveButton.setIcon(icon23)
        self.USBStorageSaveButton.setIconSize(QtCore.QSize(70, 70))
        self.USBStorageSaveButton.setCheckable(False)
        self.USBStorageSaveButton.setAutoDefault(False)
        self.USBStorageSaveButton.setDefault(False)
        self.USBStorageSaveButton.setFlat(False)
        self.USBStorageSaveButton.setObjectName("USBStorageSaveButton")
        self.USBStorageScrollUp = QtWidgets.QPushButton(self.fileListUSBPage)
        self.USBStorageScrollUp.setGeometry(QtCore.QRect(590, 0, 101, 241))
        self.USBStorageScrollUp.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(20)
        self.USBStorageScrollUp.setFont(font)
        self.USBStorageScrollUp.setStyleSheet("QPushButton {\n"
"\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.USBStorageScrollUp.setText("")
        self.USBStorageScrollUp.setIcon(icon19)
        self.USBStorageScrollUp.setIconSize(QtCore.QSize(70, 70))
        self.USBStorageScrollUp.setCheckable(False)
        self.USBStorageScrollUp.setAutoRepeat(True)
        self.USBStorageScrollUp.setAutoExclusive(False)
        self.USBStorageScrollUp.setAutoDefault(False)
        self.USBStorageScrollUp.setDefault(False)
        self.USBStorageScrollUp.setFlat(False)
        self.USBStorageScrollUp.setObjectName("USBStorageScrollUp")
        self.USBStorageSelectButton = QtWidgets.QPushButton(self.fileListUSBPage)
        self.USBStorageSelectButton.setGeometry(QtCore.QRect(690, 0, 111, 151))
        self.USBStorageSelectButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(20)
        self.USBStorageSelectButton.setFont(font)
        self.USBStorageSelectButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.USBStorageSelectButton.setText("")
        self.USBStorageSelectButton.setIcon(icon18)
        self.USBStorageSelectButton.setIconSize(QtCore.QSize(70, 70))
        self.USBStorageSelectButton.setCheckable(False)
        self.USBStorageSelectButton.setAutoDefault(False)
        self.USBStorageSelectButton.setDefault(False)
        self.USBStorageSelectButton.setFlat(False)
        self.USBStorageSelectButton.setObjectName("USBStorageSelectButton")
        self.USBStorageBackButton = QtWidgets.QPushButton(self.fileListUSBPage)
        self.USBStorageBackButton.setGeometry(QtCore.QRect(690, 330, 111, 151))
        self.USBStorageBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(20)
        self.USBStorageBackButton.setFont(font)
        self.USBStorageBackButton.setStyleSheet("QPushButton {\n"
"        border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.USBStorageBackButton.setText("")
        self.USBStorageBackButton.setIcon(icon5)
        self.USBStorageBackButton.setIconSize(QtCore.QSize(70, 70))
        self.USBStorageBackButton.setCheckable(False)
        self.USBStorageBackButton.setAutoDefault(False)
        self.USBStorageBackButton.setDefault(False)
        self.USBStorageBackButton.setFlat(False)
        self.USBStorageBackButton.setObjectName("USBStorageBackButton")
        self.USBStorageScrollDown = QtWidgets.QPushButton(self.fileListUSBPage)
        self.USBStorageScrollDown.setGeometry(QtCore.QRect(590, 240, 101, 241))
        self.USBStorageScrollDown.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(20)
        self.USBStorageScrollDown.setFont(font)
        self.USBStorageScrollDown.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.USBStorageScrollDown.setText("")
        self.USBStorageScrollDown.setIcon(icon20)
        self.USBStorageScrollDown.setIconSize(QtCore.QSize(70, 70))
        self.USBStorageScrollDown.setCheckable(False)
        self.USBStorageScrollDown.setAutoRepeat(True)
        self.USBStorageScrollDown.setAutoExclusive(False)
        self.USBStorageScrollDown.setAutoDefault(False)
        self.USBStorageScrollDown.setDefault(False)
        self.USBStorageScrollDown.setFlat(False)
        self.USBStorageScrollDown.setObjectName("USBStorageScrollDown")
        self.fileListWidgetUSB = QtWidgets.QListWidget(self.fileListUSBPage)
        self.fileListWidgetUSB.setGeometry(QtCore.QRect(0, 0, 591, 481))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(20)
        self.fileListWidgetUSB.setFont(font)
        self.fileListWidgetUSB.setStyleSheet("\n"
"\n"
"QListView {\n"
"    show-decoration-selected: 1; /* make the selection span the entire width\n"
" of the view */\n"
"    background-color: rgb(255, 255, 255);\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:!selected {\n"
"    color: black;\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:selected {\n"
"    border:  rgb(182, 182, 182);\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgb(40, 40, 40);\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:selected:!active {\n"
"     border: 1px solid rgb(182, 182, 182);\n"
"    background-color: rgb(40,40,40);\n"
"outline: none;\n"
"\n"
"}\n"
"\n"
"QListView::item:selected:active {\n"
"     border: 1px solid  rgb(182, 182, 182);\n"
"    background-color: rgb(40,40,40);\n"
"outline: none;\n"
"}\n"
"\n"
"QListView::item:selected:focus {\n"
"    outline: none;\n"
"}\n"
"")
        self.fileListWidgetUSB.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.fileListWidgetUSB.setFrameShadow(QtWidgets.QFrame.Plain)
        self.fileListWidgetUSB.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileListWidgetUSB.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileListWidgetUSB.setAutoScrollMargin(4)
        self.fileListWidgetUSB.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.fileListWidgetUSB.setObjectName("fileListWidgetUSB")
        self.USBStorageSaveButton.raise_()
        self.USBStorageSelectButton.raise_()
        self.USBStorageBackButton.raise_()
        self.fileListWidgetUSB.raise_()
        self.USBStorageScrollDown.raise_()
        self.USBStorageScrollUp.raise_()
        self.stackedWidget.addWidget(self.fileListUSBPage)
        self.printSelectedLocalPage = QtWidgets.QWidget()
        self.printSelectedLocalPage.setObjectName("printSelectedLocalPage")
        self.fileSelected = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.fileSelected.setGeometry(QtCore.QRect(10, 20, 461, 41))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.fileSelected.setFont(font)
        self.fileSelected.setStyleSheet("color:  white;\n"
"background-color: rgba(255, 255, 255, 0);")
        self.fileSelected.setScaledContents(True)
        self.fileSelected.setWordWrap(True)
        self.fileSelected.setObjectName("fileSelected")
        self.fileSelectedBackButton = QtWidgets.QPushButton(self.printSelectedLocalPage)
        self.fileSelectedBackButton.setGeometry(QtCore.QRect(400, 360, 401, 121))
        self.fileSelectedBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fileSelectedBackButton.setFont(font)
        self.fileSelectedBackButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.fileSelectedBackButton.setText("")
        self.fileSelectedBackButton.setIcon(icon5)
        self.fileSelectedBackButton.setIconSize(QtCore.QSize(70, 70))
        self.fileSelectedBackButton.setCheckable(False)
        self.fileSelectedBackButton.setAutoDefault(False)
        self.fileSelectedBackButton.setDefault(False)
        self.fileSelectedBackButton.setFlat(False)
        self.fileSelectedBackButton.setObjectName("fileSelectedBackButton")
        self.fileSelectedPrintButton = QtWidgets.QToolButton(self.printSelectedLocalPage)
        self.fileSelectedPrintButton.setGeometry(QtCore.QRect(0, 360, 401, 121))
        self.fileSelectedPrintButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fileSelectedPrintButton.setFont(font)
        self.fileSelectedPrintButton.setStyleSheet("QToolButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.fileSelectedPrintButton.setIcon(icon6)
        self.fileSelectedPrintButton.setIconSize(QtCore.QSize(70, 70))
        self.fileSelectedPrintButton.setCheckable(False)
        self.fileSelectedPrintButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.fileSelectedPrintButton.setObjectName("fileSelectedPrintButton")
        self.fileSizeSelected = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.fileSizeSelected.setGeometry(QtCore.QRect(180, 130, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.fileSizeSelected.setFont(font)
        self.fileSizeSelected.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.fileSizeSelected.setScaledContents(True)
        self.fileSizeSelected.setObjectName("fileSizeSelected")
        self.fileDateSelected = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.fileDateSelected.setGeometry(QtCore.QRect(180, 160, 201, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.fileDateSelected.setFont(font)
        self.fileDateSelected.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.fileDateSelected.setScaledContents(True)
        self.fileDateSelected.setObjectName("fileDateSelected")
        self.filePrintTimeSelected = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.filePrintTimeSelected.setGeometry(QtCore.QRect(180, 210, 141, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.filePrintTimeSelected.setFont(font)
        self.filePrintTimeSelected.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.filePrintTimeSelected.setScaledContents(True)
        self.filePrintTimeSelected.setObjectName("filePrintTimeSelected")
        self.filamentVolumeSelected = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.filamentVolumeSelected.setGeometry(QtCore.QRect(180, 260, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.filamentVolumeSelected.setFont(font)
        self.filamentVolumeSelected.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.filamentVolumeSelected.setScaledContents(True)
        self.filamentVolumeSelected.setObjectName("filamentVolumeSelected")
        self.fileSizeSelectedLabel = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.fileSizeSelectedLabel.setGeometry(QtCore.QRect(10, 130, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.fileSizeSelectedLabel.setFont(font)
        self.fileSizeSelectedLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.fileSizeSelectedLabel.setObjectName("fileSizeSelectedLabel")
        self.fileDateSelectedLabel = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.fileDateSelectedLabel.setGeometry(QtCore.QRect(10, 160, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.fileDateSelectedLabel.setFont(font)
        self.fileDateSelectedLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.fileDateSelectedLabel.setObjectName("fileDateSelectedLabel")
        self.filePrintTimeSelectedLabel = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.filePrintTimeSelectedLabel.setGeometry(QtCore.QRect(10, 190, 171, 61))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.filePrintTimeSelectedLabel.setFont(font)
        self.filePrintTimeSelectedLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.filePrintTimeSelectedLabel.setWordWrap(True)
        self.filePrintTimeSelectedLabel.setObjectName("filePrintTimeSelectedLabel")
        self.filamentVolumeSelectedLabel = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.filamentVolumeSelectedLabel.setGeometry(QtCore.QRect(10, 260, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.filamentVolumeSelectedLabel.setFont(font)
        self.filamentVolumeSelectedLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.filamentVolumeSelectedLabel.setObjectName("filamentVolumeSelectedLabel")
        self.filamentLengthFileSelected = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.filamentLengthFileSelected.setGeometry(QtCore.QRect(180, 290, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.filamentLengthFileSelected.setFont(font)
        self.filamentLengthFileSelected.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.filamentLengthFileSelected.setScaledContents(True)
        self.filamentLengthFileSelected.setObjectName("filamentLengthFileSelected")
        self.filamentLengthSelectedLabel = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.filamentLengthSelectedLabel.setGeometry(QtCore.QRect(10, 290, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.filamentLengthSelectedLabel.setFont(font)
        self.filamentLengthSelectedLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.filamentLengthSelectedLabel.setObjectName("filamentLengthSelectedLabel")
        self.printPreviewSelected = QtWidgets.QLabel(self.printSelectedLocalPage)
        self.printPreviewSelected.setGeometry(QtCore.QRect(530, 80, 210, 210))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.printPreviewSelected.setFont(font)
        self.printPreviewSelected.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.printPreviewSelected.setText("")
        self.printPreviewSelected.setPixmap(QtGui.QPixmap(".templates/img/thumbnail.png"))
        self.printPreviewSelected.setScaledContents(True)
        self.printPreviewSelected.setObjectName("printPreviewSelected")
        self.stackedWidget.addWidget(self.printSelectedLocalPage)
        self.printSelectedUSBPage = QtWidgets.QWidget()
        self.printSelectedUSBPage.setObjectName("printSelectedUSBPage")
        self.fileSelectedUSBTransferButton = QtWidgets.QToolButton(self.printSelectedUSBPage)
        self.fileSelectedUSBTransferButton.setGeometry(QtCore.QRect(0, 350, 271, 131))
        self.fileSelectedUSBTransferButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fileSelectedUSBTransferButton.setFont(font)
        self.fileSelectedUSBTransferButton.setStyleSheet("QToolButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.fileSelectedUSBTransferButton.setIcon(icon23)
        self.fileSelectedUSBTransferButton.setIconSize(QtCore.QSize(70, 70))
        self.fileSelectedUSBTransferButton.setCheckable(False)
        self.fileSelectedUSBTransferButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.fileSelectedUSBTransferButton.setObjectName("fileSelectedUSBTransferButton")
        self.fileSelectedUSBBackButton = QtWidgets.QPushButton(self.printSelectedUSBPage)
        self.fileSelectedUSBBackButton.setGeometry(QtCore.QRect(529, 350, 271, 131))
        self.fileSelectedUSBBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fileSelectedUSBBackButton.setFont(font)
        self.fileSelectedUSBBackButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.fileSelectedUSBBackButton.setText("")
        self.fileSelectedUSBBackButton.setIcon(icon5)
        self.fileSelectedUSBBackButton.setIconSize(QtCore.QSize(70, 70))
        self.fileSelectedUSBBackButton.setCheckable(False)
        self.fileSelectedUSBBackButton.setAutoDefault(False)
        self.fileSelectedUSBBackButton.setDefault(False)
        self.fileSelectedUSBBackButton.setFlat(False)
        self.fileSelectedUSBBackButton.setObjectName("fileSelectedUSBBackButton")
        self.fileSelectedUSBName = QtWidgets.QLabel(self.printSelectedUSBPage)
        self.fileSelectedUSBName.setGeometry(QtCore.QRect(20, 20, 481, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.fileSelectedUSBName.setFont(font)
        self.fileSelectedUSBName.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.fileSelectedUSBName.setObjectName("fileSelectedUSBName")
        self.fileSelectedUSBPrintButton = QtWidgets.QToolButton(self.printSelectedUSBPage)
        self.fileSelectedUSBPrintButton.setGeometry(QtCore.QRect(267, 350, 265, 131))
        self.fileSelectedUSBPrintButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.fileSelectedUSBPrintButton.setFont(font)
        self.fileSelectedUSBPrintButton.setStyleSheet("QToolButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QToolButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.fileSelectedUSBPrintButton.setIcon(icon6)
        self.fileSelectedUSBPrintButton.setIconSize(QtCore.QSize(70, 70))
        self.fileSelectedUSBPrintButton.setCheckable(False)
        self.fileSelectedUSBPrintButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.fileSelectedUSBPrintButton.setObjectName("fileSelectedUSBPrintButton")
        self.printPreviewSelectedUSB = QtWidgets.QLabel(self.printSelectedUSBPage)
        self.printPreviewSelectedUSB.setGeometry(QtCore.QRect(270, 20, 261, 271))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.printPreviewSelectedUSB.setFont(font)
        self.printPreviewSelectedUSB.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.printPreviewSelectedUSB.setText("")
        self.printPreviewSelectedUSB.setPixmap(QtGui.QPixmap("templates/img/thumbnail.png"))
        self.printPreviewSelectedUSB.setScaledContents(True)
        self.printPreviewSelectedUSB.setObjectName("printPreviewSelectedUSB")
        self.stackedWidget.addWidget(self.printSelectedUSBPage)
        self.controlPage = QtWidgets.QWidget()
        self.controlPage.setObjectName("controlPage")
        self.controlTabWidget = QtWidgets.QTabWidget(self.controlPage)
        self.controlTabWidget.setGeometry(QtCore.QRect(0, -10, 1000, 491))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.controlTabWidget.sizePolicy().hasHeightForWidth())
        self.controlTabWidget.setSizePolicy(sizePolicy)
        self.controlTabWidget.setMinimumSize(QtCore.QSize(791, 0))
        self.controlTabWidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.controlTabWidget.setFont(font)
        self.controlTabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.controlTabWidget.setAutoFillBackground(False)
        self.controlTabWidget.setStyleSheet("QTabWidget::pane { /* The tab widget frame */\n"
"    position: absolute;\n"
"\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"\n"
"}\n"
"\n"
"/* Style the tab using the tab sub-control. Note that\n"
"    it reads QTabBar _not_ QTabWidget */\n"
"QTabBar::tab {\n"
"   border-right: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-color: #C2C7CB; /* same as the pane color */\n"
"    width: 134px;\n"
"     height: 100px;\n"
"    padding-left:50px;\n"
"padding-right:-25px;\n"
"\n"
"\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"/*    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"*/\n"
"background-color: rgb(40, 40, 40);\n"
"\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    border-color: #9B9B9B;\n"
"    border-bottom-color: #C2C7CB; /* same as pane color */\n"
"}\n"
"QTabBar::tab:first {\n"
"    margin-left: 0; /* the first selected tab has nothing to overlap with on the left */\n"
"/*border-bottom-left-radius: 15px;*/\n"
"}\n"
"QTabBar::tab:last {\n"
"    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */\n"
"}\n"
"QTabBar::tab:focus {\n"
"    outline: none;\n"
"}\n"
"QTabBar:focus {\n"
"    outline: none;\n"
"}")
        self.controlTabWidget.setTabPosition(QtWidgets.QTabWidget.South)
        self.controlTabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.controlTabWidget.setIconSize(QtCore.QSize(60, 60))
        self.controlTabWidget.setElideMode(QtCore.Qt.ElideLeft)
        self.controlTabWidget.setUsesScrollButtons(False)
        self.controlTabWidget.setTabsClosable(False)
        self.controlTabWidget.setMovable(False)
        self.controlTabWidget.setObjectName("controlTabWidget")
        self.feedRateTab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.feedRateTab.sizePolicy().hasHeightForWidth())
        self.feedRateTab.setSizePolicy(sizePolicy)
        self.feedRateTab.setObjectName("feedRateTab")
        self.feedRateLabelControlPage = QtWidgets.QLabel(self.feedRateTab)
        self.feedRateLabelControlPage.setGeometry(QtCore.QRect(10, 70, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.feedRateLabelControlPage.setFont(font)
        self.feedRateLabelControlPage.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedRateLabelControlPage.setObjectName("feedRateLabelControlPage")
        self.feedRateSpinBox = QtWidgets.QSpinBox(self.feedRateTab)
        self.feedRateSpinBox.setGeometry(QtCore.QRect(202, 18, 241, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(24)
        self.feedRateSpinBox.setFont(font)
        self.feedRateSpinBox.setStyleSheet("QSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-arrow { \n"
"image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 55px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::down-arrow { \n"
"image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.feedRateSpinBox.setFrame(False)
        self.feedRateSpinBox.setReadOnly(False)
        self.feedRateSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.feedRateSpinBox.setAccelerated(True)
        self.feedRateSpinBox.setMinimum(50)
        self.feedRateSpinBox.setMaximum(200)
        self.feedRateSpinBox.setSingleStep(1)
        self.feedRateSpinBox.setProperty("value", 100)
        self.feedRateSpinBox.setObjectName("feedRateSpinBox")
        self.setFeedRateButton = QtWidgets.QPushButton(self.feedRateTab)
        self.setFeedRateButton.setGeometry(QtCore.QRect(440, 20, 131, 117))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.setFeedRateButton.setFont(font)
        self.setFeedRateButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-top-right-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.setFeedRateButton.setText("")
        self.setFeedRateButton.setIcon(icon18)
        self.setFeedRateButton.setIconSize(QtCore.QSize(70, 70))
        self.setFeedRateButton.setObjectName("setFeedRateButton")
        self.moveZMBabyStep = QtWidgets.QPushButton(self.feedRateTab)
        self.moveZMBabyStep.setGeometry(QtCore.QRect(400, 210, 261, 141))
        self.moveZMBabyStep.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.moveZMBabyStep.setFont(font)
        self.moveZMBabyStep.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-right-radius: 15px;\n"
"    border-top-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZMBabyStep.setText("")
        self.moveZMBabyStep.setIcon(icon19)
        self.moveZMBabyStep.setIconSize(QtCore.QSize(70, 70))
        self.moveZMBabyStep.setCheckable(False)
        self.moveZMBabyStep.setAutoDefault(False)
        self.moveZMBabyStep.setDefault(False)
        self.moveZMBabyStep.setFlat(False)
        self.moveZMBabyStep.setObjectName("moveZMBabyStep")
        self.moveZPBabyStep = QtWidgets.QPushButton(self.feedRateTab)
        self.moveZPBabyStep.setGeometry(QtCore.QRect(130, 210, 271, 141))
        self.moveZPBabyStep.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.moveZPBabyStep.setFont(font)
        self.moveZPBabyStep.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-left-radius: 15px;\n"
"    border-top-left-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZPBabyStep.setText("")
        self.moveZPBabyStep.setIcon(icon20)
        self.moveZPBabyStep.setIconSize(QtCore.QSize(70, 70))
        self.moveZPBabyStep.setCheckable(False)
        self.moveZPBabyStep.setAutoDefault(False)
        self.moveZPBabyStep.setDefault(False)
        self.moveZPBabyStep.setFlat(False)
        self.moveZPBabyStep.setObjectName("moveZPBabyStep")
        self.flowRateLabelControlPage_5 = QtWidgets.QLabel(self.feedRateTab)
        self.flowRateLabelControlPage_5.setGeometry(QtCore.QRect(10, 160, 421, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.flowRateLabelControlPage_5.setFont(font)
        self.flowRateLabelControlPage_5.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.flowRateLabelControlPage_5.setObjectName("flowRateLabelControlPage_5")
        self.feedRateSpinBox.raise_()
        self.feedRateLabelControlPage.raise_()
        self.setFeedRateButton.raise_()
        self.moveZMBabyStep.raise_()
        self.moveZPBabyStep.raise_()
        self.flowRateLabelControlPage_5.raise_()
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap("templates/img/wrench.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon24.addPixmap(QtGui.QPixmap("templates/img/wrench_selected.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.controlTabWidget.addTab(self.feedRateTab, icon24, "")
        self.temperatureTab = QtWidgets.QWidget()
        self.temperatureTab.setObjectName("temperatureTab")
        self.toolLabel = QtWidgets.QLabel(self.temperatureTab)
        self.toolLabel.setGeometry(QtCore.QRect(60, 160, 70, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.toolLabel.setFont(font)
        self.toolLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.toolLabel.setObjectName("toolLabel")
        self.bedLabel_2 = QtWidgets.QLabel(self.temperatureTab)
        self.bedLabel_2.setGeometry(QtCore.QRect(440, 150, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.bedLabel_2.setFont(font)
        self.bedLabel_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.bedLabel_2.setObjectName("bedLabel_2")
        self.cooldownButton = QtWidgets.QPushButton(self.temperatureTab)
        self.cooldownButton.setGeometry(QtCore.QRect(60, 0, 231, 81))
        self.cooldownButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.cooldownButton.setFont(font)
        self.cooldownButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-bottom-left-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.cooldownButton.setText("")
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap("templates/img/snowflake.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cooldownButton.setIcon(icon25)
        self.cooldownButton.setIconSize(QtCore.QSize(50, 50))
        self.cooldownButton.setObjectName("cooldownButton")
        self.fanOffButton = QtWidgets.QPushButton(self.temperatureTab)
        self.fanOffButton.setGeometry(QtCore.QRect(510, 0, 221, 81))
        self.fanOffButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.fanOffButton.setFont(font)
        self.fanOffButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-bottom-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.fanOffButton.setText("")
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap("templates/img/fan-black-silhouette-off.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fanOffButton.setIcon(icon26)
        self.fanOffButton.setIconSize(QtCore.QSize(50, 50))
        self.fanOffButton.setCheckable(False)
        self.fanOffButton.setAutoDefault(False)
        self.fanOffButton.setDefault(False)
        self.fanOffButton.setFlat(False)
        self.fanOffButton.setObjectName("fanOffButton")
        self.fanOnButton = QtWidgets.QPushButton(self.temperatureTab)
        self.fanOnButton.setGeometry(QtCore.QRect(290, 0, 221, 81))
        self.fanOnButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.fanOnButton.setFont(font)
        self.fanOnButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.fanOnButton.setText("")
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap("templates/img/fan-black-silhouette.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.fanOnButton.setIcon(icon27)
        self.fanOnButton.setIconSize(QtCore.QSize(50, 50))
        self.fanOnButton.setCheckable(False)
        self.fanOnButton.setAutoDefault(False)
        self.fanOnButton.setDefault(False)
        self.fanOnButton.setFlat(False)
        self.fanOnButton.setObjectName("fanOnButton")
        self.toolTempSpinBox = QtWidgets.QSpinBox(self.temperatureTab)
        self.toolTempSpinBox.setGeometry(QtCore.QRect(151, 198, 160, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(20)
        self.toolTempSpinBox.setFont(font)
        self.toolTempSpinBox.setStyleSheet("QSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-arrow { \n"
"image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px; }\n"
"\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::down-arrow {\n"
"image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.toolTempSpinBox.setFrame(False)
        self.toolTempSpinBox.setReadOnly(False)
        self.toolTempSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.toolTempSpinBox.setAccelerated(True)
        self.toolTempSpinBox.setMaximum(300)
        self.toolTempSpinBox.setSingleStep(1)
        self.toolTempSpinBox.setProperty("value", 0)
        self.toolTempSpinBox.setObjectName("toolTempSpinBox")
        self.bedTempSpinBox = QtWidgets.QSpinBox(self.temperatureTab)
        self.bedTempSpinBox.setGeometry(QtCore.QRect(532, 180, 181, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(20)
        self.bedTempSpinBox.setFont(font)
        self.bedTempSpinBox.setStyleSheet("QSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-arrow { image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px; }\n"
"\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::down-arrow {image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.bedTempSpinBox.setFrame(False)
        self.bedTempSpinBox.setReadOnly(False)
        self.bedTempSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.bedTempSpinBox.setAccelerated(True)
        self.bedTempSpinBox.setMaximum(150)
        self.bedTempSpinBox.setSingleStep(1)
        self.bedTempSpinBox.setProperty("value", 0)
        self.bedTempSpinBox.setObjectName("bedTempSpinBox")
        self.setToolTempButton = QtWidgets.QPushButton(self.temperatureTab)
        self.setToolTempButton.setGeometry(QtCore.QRect(309, 199, 71, 130))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.setToolTempButton.setFont(font)
        self.setToolTempButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.setToolTempButton.setText("")
        self.setToolTempButton.setIcon(icon18)
        self.setToolTempButton.setIconSize(QtCore.QSize(50, 50))
        self.setToolTempButton.setObjectName("setToolTempButton")
        self.setBedTempButton = QtWidgets.QPushButton(self.temperatureTab)
        self.setBedTempButton.setGeometry(QtCore.QRect(710, 180, 71, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.setBedTempButton.setFont(font)
        self.setBedTempButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-top-right-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.setBedTempButton.setText("")
        self.setBedTempButton.setIcon(icon18)
        self.setBedTempButton.setIconSize(QtCore.QSize(50, 50))
        self.setBedTempButton.setObjectName("setBedTempButton")
        self.toolToggleTemperatureButton = QtWidgets.QPushButton(self.temperatureTab)
        self.toolToggleTemperatureButton.setGeometry(QtCore.QRect(244, 129, 136, 71))
        self.toolToggleTemperatureButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.toolToggleTemperatureButton.setFont(font)
        self.toolToggleTemperatureButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
" border-top-right-radius:15px;\n"
" border-top-left-radius:15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.toolToggleTemperatureButton.setText("")
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap("templates/img/NozzleSelect_0.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon28.addPixmap(QtGui.QPixmap("templates/img/NozzleSelect_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.toolToggleTemperatureButton.setIcon(icon28)
        self.toolToggleTemperatureButton.setIconSize(QtCore.QSize(100, 100))
        self.toolToggleTemperatureButton.setCheckable(True)
        self.toolToggleTemperatureButton.setChecked(False)
        self.toolToggleTemperatureButton.setAutoDefault(False)
        self.toolToggleTemperatureButton.setDefault(False)
        self.toolToggleTemperatureButton.setFlat(False)
        self.toolToggleTemperatureButton.setObjectName("toolToggleTemperatureButton")
        self.tool180PreheatButton = QtWidgets.QPushButton(self.temperatureTab)
        self.tool180PreheatButton.setGeometry(QtCore.QRect(40, 200, 101, 61))
        self.tool180PreheatButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.tool180PreheatButton.setFont(font)
        self.tool180PreheatButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-right-radius: 15px;\n"
"border-top-left-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.tool180PreheatButton.setIconSize(QtCore.QSize(50, 50))
        self.tool180PreheatButton.setCheckable(False)
        self.tool180PreheatButton.setAutoDefault(False)
        self.tool180PreheatButton.setDefault(False)
        self.tool180PreheatButton.setFlat(False)
        self.tool180PreheatButton.setObjectName("tool180PreheatButton")
        self.tool250PreheatButton = QtWidgets.QPushButton(self.temperatureTab)
        self.tool250PreheatButton.setGeometry(QtCore.QRect(40, 260, 101, 61))
        self.tool250PreheatButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.tool250PreheatButton.setFont(font)
        self.tool250PreheatButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-right-radius: 15px;\n"
"border-bottom-left-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.tool250PreheatButton.setIconSize(QtCore.QSize(50, 50))
        self.tool250PreheatButton.setCheckable(False)
        self.tool250PreheatButton.setAutoDefault(False)
        self.tool250PreheatButton.setDefault(False)
        self.tool250PreheatButton.setFlat(False)
        self.tool250PreheatButton.setObjectName("tool250PreheatButton")
        self.bed100PreheatButton = QtWidgets.QPushButton(self.temperatureTab)
        self.bed100PreheatButton.setGeometry(QtCore.QRect(420, 250, 101, 61))
        self.bed100PreheatButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.bed100PreheatButton.setFont(font)
        self.bed100PreheatButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-right-radius: 15px;\n"
"border-bottom-left-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.bed100PreheatButton.setIconSize(QtCore.QSize(50, 50))
        self.bed100PreheatButton.setCheckable(False)
        self.bed100PreheatButton.setAutoDefault(False)
        self.bed100PreheatButton.setDefault(False)
        self.bed100PreheatButton.setFlat(False)
        self.bed100PreheatButton.setObjectName("bed100PreheatButton")
        self.bed60PreheatButton = QtWidgets.QPushButton(self.temperatureTab)
        self.bed60PreheatButton.setGeometry(QtCore.QRect(420, 190, 101, 61))
        self.bed60PreheatButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(15)
        self.bed60PreheatButton.setFont(font)
        self.bed60PreheatButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-right-radius: 15px;\n"
"border-top-left-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.bed60PreheatButton.setIconSize(QtCore.QSize(50, 50))
        self.bed60PreheatButton.setCheckable(False)
        self.bed60PreheatButton.setAutoDefault(False)
        self.bed60PreheatButton.setDefault(False)
        self.bed60PreheatButton.setFlat(False)
        self.bed60PreheatButton.setObjectName("bed60PreheatButton")
        self.toolLabel.raise_()
        self.bedLabel_2.raise_()
        self.cooldownButton.raise_()
        self.fanOffButton.raise_()
        self.fanOnButton.raise_()
        self.setToolTempButton.raise_()
        self.setBedTempButton.raise_()
        self.bedTempSpinBox.raise_()
        self.toolTempSpinBox.raise_()
        self.toolToggleTemperatureButton.raise_()
        self.tool180PreheatButton.raise_()
        self.tool250PreheatButton.raise_()
        self.bed100PreheatButton.raise_()
        self.bed60PreheatButton.raise_()
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap("templates/img/thermometer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon29.addPixmap(QtGui.QPixmap("templates/img/thermometer_Selected.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.controlTabWidget.addTab(self.temperatureTab, icon29, "")
        self.motionTab = QtWidgets.QWidget()
        self.motionTab.setObjectName("motionTab")
        self.step1Button = QtWidgets.QPushButton(self.motionTab)
        self.step1Button.setGeometry(QtCore.QRect(180, 0, 121, 61))
        self.step1Button.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.step1Button.setFont(font)
        self.step1Button.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"     border-bottom: none; /* no border for a flat push button */\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border-bottom: none; /* no border for a flat push button */\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.step1Button.setIconSize(QtCore.QSize(40, 40))
        self.step1Button.setCheckable(False)
        self.step1Button.setAutoDefault(False)
        self.step1Button.setDefault(False)
        self.step1Button.setFlat(False)
        self.step1Button.setObjectName("step1Button")
        self.step10Button = QtWidgets.QPushButton(self.motionTab)
        self.step10Button.setGeometry(QtCore.QRect(300, 0, 131, 61))
        self.step10Button.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.step10Button.setFont(font)
        self.step10Button.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"     border-bottom: none; /* no border for a flat push button */\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border-bottom: none; /* no border for a flat push button */\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.step10Button.setIconSize(QtCore.QSize(40, 40))
        self.step10Button.setCheckable(False)
        self.step10Button.setAutoDefault(False)
        self.step10Button.setDefault(False)
        self.step10Button.setFlat(False)
        self.step10Button.setObjectName("step10Button")
        self.step100Button = QtWidgets.QPushButton(self.motionTab)
        self.step100Button.setGeometry(QtCore.QRect(430, 0, 151, 61))
        self.step100Button.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.step100Button.setFont(font)
        self.step100Button.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"     border-bottom: none; /* no border for a flat push button */\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border-bottom: none; /* no border for a flat push button */\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.step100Button.setIconSize(QtCore.QSize(40, 40))
        self.step100Button.setCheckable(True)
        self.step100Button.setChecked(False)
        self.step100Button.setAutoDefault(False)
        self.step100Button.setDefault(False)
        self.step100Button.setFlat(False)
        self.step100Button.setObjectName("step100Button")
        self.moveYPButton = QtWidgets.QPushButton(self.motionTab)
        self.moveYPButton.setGeometry(QtCore.QRect(120, 90, 101, 91))
        self.moveYPButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.moveYPButton.setFont(font)
        self.moveYPButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-left-radius: 15px;\n"
"    border-top-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveYPButton.setText("")
        self.moveYPButton.setIcon(icon19)
        self.moveYPButton.setIconSize(QtCore.QSize(40, 40))
        self.moveYPButton.setCheckable(False)
        self.moveYPButton.setAutoDefault(False)
        self.moveYPButton.setDefault(False)
        self.moveYPButton.setFlat(False)
        self.moveYPButton.setObjectName("moveYPButton")
        self.moveYMButton = QtWidgets.QPushButton(self.motionTab)
        self.moveYMButton.setGeometry(QtCore.QRect(120, 270, 101, 81))
        self.moveYMButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.moveYMButton.setFont(font)
        self.moveYMButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-left-radius: 15px;\n"
"    border-bottom-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveYMButton.setText("")
        self.moveYMButton.setIcon(icon20)
        self.moveYMButton.setIconSize(QtCore.QSize(40, 40))
        self.moveYMButton.setCheckable(False)
        self.moveYMButton.setAutoDefault(False)
        self.moveYMButton.setDefault(False)
        self.moveYMButton.setFlat(False)
        self.moveYMButton.setObjectName("moveYMButton")
        self.moveXPButton = QtWidgets.QPushButton(self.motionTab)
        self.moveXPButton.setGeometry(QtCore.QRect(220, 180, 91, 91))
        self.moveXPButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.moveXPButton.setFont(font)
        self.moveXPButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-right-radius: 15px;\n"
"    border-bottom-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveXPButton.setText("")
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap("templates/img/arrows-2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.moveXPButton.setIcon(icon30)
        self.moveXPButton.setIconSize(QtCore.QSize(40, 40))
        self.moveXPButton.setCheckable(False)
        self.moveXPButton.setAutoDefault(False)
        self.moveXPButton.setDefault(False)
        self.moveXPButton.setFlat(False)
        self.moveXPButton.setObjectName("moveXPButton")
        self.moveXMButton = QtWidgets.QPushButton(self.motionTab)
        self.moveXMButton.setGeometry(QtCore.QRect(30, 180, 91, 91))
        self.moveXMButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.moveXMButton.setFont(font)
        self.moveXMButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-left-radius: 15px;\n"
"    border-bottom-left-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveXMButton.setText("")
        self.moveXMButton.setIcon(icon5)
        self.moveXMButton.setIconSize(QtCore.QSize(40, 40))
        self.moveXMButton.setCheckable(False)
        self.moveXMButton.setAutoDefault(False)
        self.moveXMButton.setDefault(False)
        self.moveXMButton.setFlat(False)
        self.moveXMButton.setObjectName("moveXMButton")
        self.homeXYButton = QtWidgets.QPushButton(self.motionTab)
        self.homeXYButton.setGeometry(QtCore.QRect(120, 180, 101, 91))
        self.homeXYButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.homeXYButton.setFont(font)
        self.homeXYButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.homeXYButton.setText("")
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap("templates/img/home-icon-silhouette.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.homeXYButton.setIcon(icon31)
        self.homeXYButton.setIconSize(QtCore.QSize(40, 40))
        self.homeXYButton.setCheckable(False)
        self.homeXYButton.setAutoDefault(False)
        self.homeXYButton.setDefault(False)
        self.homeXYButton.setFlat(False)
        self.homeXYButton.setObjectName("homeXYButton")
        self.homeZButton = QtWidgets.QPushButton(self.motionTab)
        self.homeZButton.setGeometry(QtCore.QRect(380, 180, 101, 91))
        self.homeZButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.homeZButton.setFont(font)
        self.homeZButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.homeZButton.setText("")
        self.homeZButton.setIcon(icon31)
        self.homeZButton.setIconSize(QtCore.QSize(40, 40))
        self.homeZButton.setCheckable(False)
        self.homeZButton.setAutoDefault(False)
        self.homeZButton.setDefault(False)
        self.homeZButton.setFlat(False)
        self.homeZButton.setObjectName("homeZButton")
        self.motorOffButton = QtWidgets.QPushButton(self.motionTab)
        self.motorOffButton.setGeometry(QtCore.QRect(580, 0, 121, 61))
        self.motorOffButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.motorOffButton.setFont(font)
        self.motorOffButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"     border-bottom: none; /* no border for a flat push button */\n"
" border-bottom-right-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.motorOffButton.setText("")
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap("templates/img/motor.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.motorOffButton.setIcon(icon32)
        self.motorOffButton.setIconSize(QtCore.QSize(40, 40))
        self.motorOffButton.setCheckable(False)
        self.motorOffButton.setAutoDefault(False)
        self.motorOffButton.setDefault(False)
        self.motorOffButton.setFlat(False)
        self.motorOffButton.setObjectName("motorOffButton")
        self.moveZMButton = QtWidgets.QPushButton(self.motionTab)
        self.moveZMButton.setGeometry(QtCore.QRect(380, 90, 101, 91))
        self.moveZMButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.moveZMButton.setFont(font)
        self.moveZMButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-left-radius: 15px;\n"
"    border-top-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZMButton.setText("")
        self.moveZMButton.setIcon(icon19)
        self.moveZMButton.setIconSize(QtCore.QSize(40, 40))
        self.moveZMButton.setCheckable(False)
        self.moveZMButton.setAutoDefault(False)
        self.moveZMButton.setDefault(False)
        self.moveZMButton.setFlat(False)
        self.moveZMButton.setObjectName("moveZMButton")
        self.moveZPButton = QtWidgets.QPushButton(self.motionTab)
        self.moveZPButton.setGeometry(QtCore.QRect(380, 270, 101, 81))
        self.moveZPButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.moveZPButton.setFont(font)
        self.moveZPButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-left-radius: 15px;\n"
"    border-bottom-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.moveZPButton.setText("")
        self.moveZPButton.setIcon(icon20)
        self.moveZPButton.setIconSize(QtCore.QSize(40, 40))
        self.moveZPButton.setCheckable(False)
        self.moveZPButton.setAutoDefault(False)
        self.moveZPButton.setDefault(False)
        self.moveZPButton.setFlat(False)
        self.moveZPButton.setObjectName("moveZPButton")
        self.XYLabel = QtWidgets.QLabel(self.motionTab)
        self.XYLabel.setGeometry(QtCore.QRect(10, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.XYLabel.setFont(font)
        self.XYLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.XYLabel.setObjectName("XYLabel")
        self.ZLabel = QtWidgets.QLabel(self.motionTab)
        self.ZLabel.setGeometry(QtCore.QRect(330, 70, 31, 41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.ZLabel.setFont(font)
        self.ZLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.ZLabel.setObjectName("ZLabel")
        self.retractButton = QtWidgets.QPushButton(self.motionTab)
        self.retractButton.setGeometry(QtCore.QRect(610, 260, 111, 91))
        self.retractButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.retractButton.setFont(font)
        self.retractButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-left-radius: 15px;\n"
"    border-bottom-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.retractButton.setText("")
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap("templates/img/remove.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.retractButton.setIcon(icon33)
        self.retractButton.setIconSize(QtCore.QSize(40, 40))
        self.retractButton.setCheckable(False)
        self.retractButton.setAutoDefault(False)
        self.retractButton.setDefault(False)
        self.retractButton.setFlat(False)
        self.retractButton.setObjectName("retractButton")
        self.extruderButton = QtWidgets.QPushButton(self.motionTab)
        self.extruderButton.setGeometry(QtCore.QRect(610, 180, 111, 81))
        self.extruderButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.extruderButton.setFont(font)
        self.extruderButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.extruderButton.setText("")
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap("templates/img/add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.extruderButton.setIcon(icon34)
        self.extruderButton.setIconSize(QtCore.QSize(40, 40))
        self.extruderButton.setCheckable(False)
        self.extruderButton.setAutoDefault(False)
        self.extruderButton.setDefault(False)
        self.extruderButton.setFlat(False)
        self.extruderButton.setObjectName("extruderButton")
        self.ELabel = QtWidgets.QLabel(self.motionTab)
        self.ELabel.setGeometry(QtCore.QRect(570, 70, 31, 41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.ELabel.setFont(font)
        self.ELabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.ELabel.setObjectName("ELabel")
        self.moveByLabel = QtWidgets.QLabel(self.motionTab)
        self.moveByLabel.setGeometry(QtCore.QRect(50, 10, 121, 41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.moveByLabel.setFont(font)
        self.moveByLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.moveByLabel.setObjectName("moveByLabel")
        self.toolToggleMotionButton = QtWidgets.QPushButton(self.motionTab)
        self.toolToggleMotionButton.setGeometry(QtCore.QRect(610, 90, 111, 91))
        self.toolToggleMotionButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(20)
        self.toolToggleMotionButton.setFont(font)
        self.toolToggleMotionButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
" border-top-right-radius:15px;\n"
" border-top-left-radius:15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap("templates/img/NozzleSelect.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolToggleMotionButton.setIcon(icon35)
        self.toolToggleMotionButton.setIconSize(QtCore.QSize(40, 40))
        self.toolToggleMotionButton.setCheckable(True)
        self.toolToggleMotionButton.setChecked(False)
        self.toolToggleMotionButton.setAutoDefault(False)
        self.toolToggleMotionButton.setDefault(False)
        self.toolToggleMotionButton.setFlat(False)
        self.toolToggleMotionButton.setObjectName("toolToggleMotionButton")
        self.moveByLabel.raise_()
        self.step1Button.raise_()
        self.step10Button.raise_()
        self.step100Button.raise_()
        self.moveYPButton.raise_()
        self.moveYMButton.raise_()
        self.moveXPButton.raise_()
        self.moveXMButton.raise_()
        self.homeXYButton.raise_()
        self.homeZButton.raise_()
        self.motorOffButton.raise_()
        self.moveZMButton.raise_()
        self.moveZPButton.raise_()
        self.XYLabel.raise_()
        self.ZLabel.raise_()
        self.retractButton.raise_()
        self.extruderButton.raise_()
        self.ELabel.raise_()
        self.toolToggleMotionButton.raise_()
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap("templates/img/Motion.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon36.addPixmap(QtGui.QPixmap("templates/img/Motion_Selected.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.controlTabWidget.addTab(self.motionTab, icon36, "")
        self.filamentTab = QtWidgets.QWidget()
        self.filamentTab.setObjectName("filamentTab")
        self.setFlowRateButton = QtWidgets.QPushButton(self.filamentTab)
        self.setFlowRateButton.setGeometry(QtCore.QRect(540, 190, 91, 132))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.setFlowRateButton.setFont(font)
        self.setFlowRateButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-top-right-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.setFlowRateButton.setText("")
        self.setFlowRateButton.setIcon(icon18)
        self.setFlowRateButton.setIconSize(QtCore.QSize(70, 70))
        self.setFlowRateButton.setObjectName("setFlowRateButton")
        self.flowRateSpinBox = QtWidgets.QSpinBox(self.filamentTab)
        self.flowRateSpinBox.setGeometry(QtCore.QRect(300, 188, 241, 136))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.flowRateSpinBox.setFont(font)
        self.flowRateSpinBox.setStyleSheet("QSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-arrow { image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px; }\n"
"\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::down-arrow {image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.flowRateSpinBox.setFrame(False)
        self.flowRateSpinBox.setReadOnly(False)
        self.flowRateSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.flowRateSpinBox.setAccelerated(True)
        self.flowRateSpinBox.setMinimum(75)
        self.flowRateSpinBox.setMaximum(125)
        self.flowRateSpinBox.setSingleStep(1)
        self.flowRateSpinBox.setProperty("value", 100)
        self.flowRateSpinBox.setObjectName("flowRateSpinBox")
        self.flowRateLabelControlPage = QtWidgets.QLabel(self.filamentTab)
        self.flowRateLabelControlPage.setGeometry(QtCore.QRect(120, 240, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.flowRateLabelControlPage.setFont(font)
        self.flowRateLabelControlPage.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.flowRateLabelControlPage.setObjectName("flowRateLabelControlPage")
        self.changeFilamentButton = QtWidgets.QToolButton(self.filamentTab)
        self.changeFilamentButton.setGeometry(QtCore.QRect(0, 10, 431, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.changeFilamentButton.setFont(font)
        self.changeFilamentButton.setStyleSheet("QToolButton  {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton :pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QToolButton :flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton :default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton :focus {\n"
"    outline: none;\n"
"}")
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap("templates/img/changeFilament.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.changeFilamentButton.setIcon(icon37)
        self.changeFilamentButton.setIconSize(QtCore.QSize(70, 70))
        self.changeFilamentButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.changeFilamentButton.setObjectName("changeFilamentButton")
        self.toggleFilamentSensorButton = QtWidgets.QToolButton(self.filamentTab)
        self.toggleFilamentSensorButton.setEnabled(True)
        self.toggleFilamentSensorButton.setGeometry(QtCore.QRect(430, 10, 371, 131))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(16)
        self.toggleFilamentSensorButton.setFont(font)
        self.toggleFilamentSensorButton.setStyleSheet("QToolButton  {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QToolButton :pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"    /* #dadbde #f6f7fa */\n"
"}\n"
"\n"
"\n"
"QToolButton :flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QToolButton :default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QToolButton :focus {\n"
"    outline: none;\n"
"}")
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap("templates/img/filamentSensorOn.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toggleFilamentSensorButton.setIcon(icon38)
        self.toggleFilamentSensorButton.setIconSize(QtCore.QSize(60, 60))
        self.toggleFilamentSensorButton.setCheckable(True)
        self.toggleFilamentSensorButton.setChecked(True)
        self.toggleFilamentSensorButton.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toggleFilamentSensorButton.setObjectName("toggleFilamentSensorButton")
        self.flowRateSpinBox.raise_()
        self.setFlowRateButton.raise_()
        self.flowRateLabelControlPage.raise_()
        self.changeFilamentButton.raise_()
        self.toggleFilamentSensorButton.raise_()
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap("templates/img/Spool.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon39.addPixmap(QtGui.QPixmap("templates/img/Spool_Selected.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon39.addPixmap(QtGui.QPixmap("png/Spool_Selected.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
        icon39.addPixmap(QtGui.QPixmap("png/Spool.png"), QtGui.QIcon.Selected, QtGui.QIcon.Off)
        icon39.addPixmap(QtGui.QPixmap("png/Spool_Selected.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.controlTabWidget.addTab(self.filamentTab, icon39, "")
        self.controlBackButton = QtWidgets.QPushButton(self.controlPage)
        self.controlBackButton.setGeometry(QtCore.QRect(640, 381, 161, 101))
        self.controlBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.controlBackButton.setFont(font)
        self.controlBackButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.controlBackButton.setStyleSheet("QPushButton {\n"
"    border: none; /* no border for a flat push button */\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    /*border-bottom-right-radius: 15px;*/\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}")
        self.controlBackButton.setText("")
        self.controlBackButton.setIcon(icon5)
        self.controlBackButton.setIconSize(QtCore.QSize(70, 70))
        self.controlBackButton.setCheckable(False)
        self.controlBackButton.setAutoDefault(False)
        self.controlBackButton.setDefault(False)
        self.controlBackButton.setFlat(False)
        self.controlBackButton.setObjectName("controlBackButton")
        self.stackedWidget.addWidget(self.controlPage)
        self.changeFilamentPage = QtWidgets.QWidget()
        self.changeFilamentPage.setObjectName("changeFilamentPage")
        self.selectFilamentlabel = QtWidgets.QLabel(self.changeFilamentPage)
        self.selectFilamentlabel.setGeometry(QtCore.QRect(10, 30, 431, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.selectFilamentlabel.setFont(font)
        self.selectFilamentlabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.selectFilamentlabel.setObjectName("selectFilamentlabel")
        self.changeFilamentComboBox = QtWidgets.QComboBox(self.changeFilamentPage)
        self.changeFilamentComboBox.setGeometry(QtCore.QRect(0, 80, 801, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.changeFilamentComboBox.setFont(font)
        self.changeFilamentComboBox.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 80px;\n"
"     margin: 70px 0 70px 0;\n"
" }\n"
" QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 20px;\n"
" }\n"
" QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
" QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"     background: none;\n"
" }\n"
"\n"
"QComboBox {\n"
"border: 1px solid black;\n"
"    padding: 0px 18px 0px 3px;\n"
"    min-width: 6em;\n"
"\n"
"}\n"
"\n"
"QComboBox::item {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down {\n"
"border-left: 1px solid black;\n"
"border-right: 1px solid black;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 50px;\n"
"\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"\n"
"image: url(./templates/img/arrows-5.png);\n"
"width: 30px;\n"
"height: 30px;\n"
"\n"
"}\n"
"")
        self.changeFilamentComboBox.setEditable(False)
        self.changeFilamentComboBox.setMaxVisibleItems(8)
        self.changeFilamentComboBox.setIconSize(QtCore.QSize(30, 30))
        self.changeFilamentComboBox.setObjectName("changeFilamentComboBox")
        self.changeFilamentLoadButton = QtWidgets.QPushButton(self.changeFilamentPage)
        self.changeFilamentLoadButton.setGeometry(QtCore.QRect(0, 280, 401, 111))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.changeFilamentLoadButton.setFont(font)
        self.changeFilamentLoadButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap("templates/img/load.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.changeFilamentLoadButton.setIcon(icon40)
        self.changeFilamentLoadButton.setIconSize(QtCore.QSize(70, 70))
        self.changeFilamentLoadButton.setObjectName("changeFilamentLoadButton")
        self.toolToggleChangeFilamentButton = QtWidgets.QPushButton(self.changeFilamentPage)
        self.toolToggleChangeFilamentButton.setGeometry(QtCore.QRect(0, 180, 801, 101))
        self.toolToggleChangeFilamentButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.toolToggleChangeFilamentButton.setFont(font)
        self.toolToggleChangeFilamentButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.toolToggleChangeFilamentButton.setText("")
        self.toolToggleChangeFilamentButton.setIcon(icon28)
        self.toolToggleChangeFilamentButton.setIconSize(QtCore.QSize(150, 100))
        self.toolToggleChangeFilamentButton.setCheckable(True)
        self.toolToggleChangeFilamentButton.setChecked(False)
        self.toolToggleChangeFilamentButton.setAutoDefault(False)
        self.toolToggleChangeFilamentButton.setDefault(False)
        self.toolToggleChangeFilamentButton.setFlat(False)
        self.toolToggleChangeFilamentButton.setObjectName("toolToggleChangeFilamentButton")
        self.changeFilamentUnloadButton = QtWidgets.QPushButton(self.changeFilamentPage)
        self.changeFilamentUnloadButton.setGeometry(QtCore.QRect(399, 280, 401, 111))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.changeFilamentUnloadButton.setFont(font)
        self.changeFilamentUnloadButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap("templates/img/unload.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.changeFilamentUnloadButton.setIcon(icon41)
        self.changeFilamentUnloadButton.setIconSize(QtCore.QSize(70, 70))
        self.changeFilamentUnloadButton.setObjectName("changeFilamentUnloadButton")
        self.changeFilamentBackButton = QtWidgets.QPushButton(self.changeFilamentPage)
        self.changeFilamentBackButton.setGeometry(QtCore.QRect(0, 389, 801, 91))
        self.changeFilamentBackButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.changeFilamentBackButton.setFont(font)
        self.changeFilamentBackButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.changeFilamentBackButton.setText("")
        self.changeFilamentBackButton.setIcon(icon5)
        self.changeFilamentBackButton.setIconSize(QtCore.QSize(70, 70))
        self.changeFilamentBackButton.setCheckable(False)
        self.changeFilamentBackButton.setAutoDefault(False)
        self.changeFilamentBackButton.setDefault(False)
        self.changeFilamentBackButton.setFlat(False)
        self.changeFilamentBackButton.setObjectName("changeFilamentBackButton")
        self.stackedWidget.addWidget(self.changeFilamentPage)
        self.changeFilamentProgressPage = QtWidgets.QWidget()
        self.changeFilamentProgressPage.setObjectName("changeFilamentProgressPage")
        self.changeFilamentStatus = QtWidgets.QLabel(self.changeFilamentProgressPage)
        self.changeFilamentStatus.setGeometry(QtCore.QRect(10, 220, 471, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.changeFilamentStatus.setFont(font)
        self.changeFilamentStatus.setStyleSheet("color: rgb(255, 255, 255);")
        self.changeFilamentStatus.setObjectName("changeFilamentStatus")
        self.changeFilamentProgress = QtWidgets.QProgressBar(self.changeFilamentProgressPage)
        self.changeFilamentProgress.setGeometry(QtCore.QRect(0, 270, 801, 81))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.changeFilamentProgress.setFont(font)
        self.changeFilamentProgress.setStyleSheet("QProgressBar::chunk {\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0.517, x2:0, y2:0.512, stop:0 rgba(255, 28, 35, 255), stop:1 rgba(255, 68, 74, 255));\n"
"border-bottom-right-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"}\n"
"\n"
"QProgressBar {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
" /*  border-bottom-left-radius: 10px;\n"
" border-bottom-right-radius: 10px;*/\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(150, 150, 150, 255), stop:1 rgba(180, 180, 180, 255));\n"
"}\n"
"")
        self.changeFilamentProgress.setMaximum(100)
        self.changeFilamentProgress.setProperty("value", 0)
        self.changeFilamentProgress.setAlignment(QtCore.Qt.AlignCenter)
        self.changeFilamentProgress.setTextVisible(True)
        self.changeFilamentProgress.setOrientation(QtCore.Qt.Horizontal)
        self.changeFilamentProgress.setObjectName("changeFilamentProgress")
        self.changeFilamentNameOperation = QtWidgets.QLabel(self.changeFilamentProgressPage)
        self.changeFilamentNameOperation.setGeometry(QtCore.QRect(0, 0, 471, 61))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.changeFilamentNameOperation.setFont(font)
        self.changeFilamentNameOperation.setStyleSheet("color: rgb(255, 255, 255);")
        self.changeFilamentNameOperation.setObjectName("changeFilamentNameOperation")
        self.changeFilamentBackButton2 = QtWidgets.QPushButton(self.changeFilamentProgressPage)
        self.changeFilamentBackButton2.setGeometry(QtCore.QRect(0, 350, 801, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.changeFilamentBackButton2.setFont(font)
        self.changeFilamentBackButton2.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.changeFilamentBackButton2.setText("")
        self.changeFilamentBackButton2.setIcon(icon5)
        self.changeFilamentBackButton2.setIconSize(QtCore.QSize(70, 70))
        self.changeFilamentBackButton2.setObjectName("changeFilamentBackButton2")
        self.label_2 = QtWidgets.QLabel(self.changeFilamentProgressPage)
        self.label_2.setGeometry(QtCore.QRect(330, 60, 121, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("templates/img/changeFilament2.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.stackedWidget.addWidget(self.changeFilamentProgressPage)
        self.changeFilamentLoadPage = QtWidgets.QWidget()
        self.changeFilamentLoadPage.setObjectName("changeFilamentLoadPage")
        self.feedFilamentlabel_60 = QtWidgets.QLabel(self.changeFilamentLoadPage)
        self.feedFilamentlabel_60.setGeometry(QtCore.QRect(10, 40, 801, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_60.setFont(font)
        self.feedFilamentlabel_60.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_60.setObjectName("feedFilamentlabel_60")
        self.feedFilamentlabel_61 = QtWidgets.QLabel(self.changeFilamentLoadPage)
        self.feedFilamentlabel_61.setGeometry(QtCore.QRect(10, 140, 691, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_61.setFont(font)
        self.feedFilamentlabel_61.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_61.setObjectName("feedFilamentlabel_61")
        self.feedFilamentlabel_62 = QtWidgets.QLabel(self.changeFilamentLoadPage)
        self.feedFilamentlabel_62.setGeometry(QtCore.QRect(0, 140, 771, 161))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_62.setFont(font)
        self.feedFilamentlabel_62.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_62.setWordWrap(True)
        self.feedFilamentlabel_62.setObjectName("feedFilamentlabel_62")
        self.loadedTillExtruderButton = QtWidgets.QPushButton(self.changeFilamentLoadPage)
        self.loadedTillExtruderButton.setGeometry(QtCore.QRect(0, 360, 381, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.loadedTillExtruderButton.setFont(font)
        self.loadedTillExtruderButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.loadedTillExtruderButton.setIconSize(QtCore.QSize(40, 40))
        self.loadedTillExtruderButton.setObjectName("loadedTillExtruderButton")
        self.changeFilamentBackButton3 = QtWidgets.QPushButton(self.changeFilamentLoadPage)
        self.changeFilamentBackButton3.setGeometry(QtCore.QRect(380, 360, 421, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(13)
        self.changeFilamentBackButton3.setFont(font)
        self.changeFilamentBackButton3.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.changeFilamentBackButton3.setText("")
        self.changeFilamentBackButton3.setIcon(icon5)
        self.changeFilamentBackButton3.setIconSize(QtCore.QSize(70, 70))
        self.changeFilamentBackButton3.setObjectName("changeFilamentBackButton3")
        self.feedFilamentlabel_64 = QtWidgets.QLabel(self.changeFilamentLoadPage)
        self.feedFilamentlabel_64.setGeometry(QtCore.QRect(10, 80, 801, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_64.setFont(font)
        self.feedFilamentlabel_64.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_64.setObjectName("feedFilamentlabel_64")
        self.stackedWidget.addWidget(self.changeFilamentLoadPage)
        self.changeFilamentExtrudePage = QtWidgets.QWidget()
        self.changeFilamentExtrudePage.setObjectName("changeFilamentExtrudePage")
        self.feedFilamentlabel = QtWidgets.QLabel(self.changeFilamentExtrudePage)
        self.feedFilamentlabel.setGeometry(QtCore.QRect(0, 10, 461, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel.setFont(font)
        self.feedFilamentlabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel.setObjectName("feedFilamentlabel")
        self.loadDoneButton = QtWidgets.QPushButton(self.changeFilamentExtrudePage)
        self.loadDoneButton.setGeometry(QtCore.QRect(0, 360, 801, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.loadDoneButton.setFont(font)
        self.loadDoneButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.loadDoneButton.setIconSize(QtCore.QSize(40, 40))
        self.loadDoneButton.setObjectName("loadDoneButton")
        self.feedFilamentlabel_2 = QtWidgets.QLabel(self.changeFilamentExtrudePage)
        self.feedFilamentlabel_2.setGeometry(QtCore.QRect(0, 80, 831, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_2.setFont(font)
        self.feedFilamentlabel_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_2.setObjectName("feedFilamentlabel_2")
        self.feedFilamentlabel_6 = QtWidgets.QLabel(self.changeFilamentExtrudePage)
        self.feedFilamentlabel_6.setGeometry(QtCore.QRect(10, 240, 761, 101))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_6.setFont(font)
        self.feedFilamentlabel_6.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_6.setWordWrap(True)
        self.feedFilamentlabel_6.setObjectName("feedFilamentlabel_6")
        self.feedFilamentlabel_8 = QtWidgets.QLabel(self.changeFilamentExtrudePage)
        self.feedFilamentlabel_8.setGeometry(QtCore.QRect(10, 140, 761, 101))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_8.setFont(font)
        self.feedFilamentlabel_8.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_8.setWordWrap(True)
        self.feedFilamentlabel_8.setObjectName("feedFilamentlabel_8")
        self.stackedWidget.addWidget(self.changeFilamentExtrudePage)
        self.changeFilamentRetractPage = QtWidgets.QWidget()
        self.changeFilamentRetractPage.setObjectName("changeFilamentRetractPage")
        self.feedFilamentlabel_3 = QtWidgets.QLabel(self.changeFilamentRetractPage)
        self.feedFilamentlabel_3.setGeometry(QtCore.QRect(10, 100, 511, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_3.setFont(font)
        self.feedFilamentlabel_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_3.setObjectName("feedFilamentlabel_3")
        self.unloadDoneButton = QtWidgets.QPushButton(self.changeFilamentRetractPage)
        self.unloadDoneButton.setGeometry(QtCore.QRect(0, 360, 801, 121))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(16)
        self.unloadDoneButton.setFont(font)
        self.unloadDoneButton.setStyleSheet("QPushButton {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.unloadDoneButton.setIconSize(QtCore.QSize(40, 40))
        self.unloadDoneButton.setObjectName("unloadDoneButton")
        self.feedFilamentlabel_4 = QtWidgets.QLabel(self.changeFilamentRetractPage)
        self.feedFilamentlabel_4.setGeometry(QtCore.QRect(10, 10, 461, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_4.setFont(font)
        self.feedFilamentlabel_4.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_4.setObjectName("feedFilamentlabel_4")
        self.feedFilamentlabel_7 = QtWidgets.QLabel(self.changeFilamentRetractPage)
        self.feedFilamentlabel_7.setGeometry(QtCore.QRect(10, 260, 761, 101))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_7.setFont(font)
        self.feedFilamentlabel_7.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_7.setWordWrap(True)
        self.feedFilamentlabel_7.setObjectName("feedFilamentlabel_7")
        self.feedFilamentlabel_9 = QtWidgets.QLabel(self.changeFilamentRetractPage)
        self.feedFilamentlabel_9.setGeometry(QtCore.QRect(10, 130, 761, 131))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.feedFilamentlabel_9.setFont(font)
        self.feedFilamentlabel_9.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.feedFilamentlabel_9.setWordWrap(True)
        self.feedFilamentlabel_9.setObjectName("feedFilamentlabel_9")
        self.stackedWidget.addWidget(self.changeFilamentRetractPage)
        MainWindow.setCentralWidget(self.mainApplication)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(24)
        self.controlTabWidget.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.fileName_2.setText(_translate("MainWindow", "Loading ..."))
        self.FileNameLabel.setText(_translate("MainWindow", "File:"))
        self.printTimeLabel.setText(_translate("MainWindow", "Print Time:"))
        self.fileName.setText(_translate("MainWindow", "fileName"))
        self.printTime.setText(_translate("MainWindow", "printTime"))
        self.timeLeftLabel.setText(_translate("MainWindow", "Time Left:"))
        self.bedTempBar.setFormat(_translate("MainWindow", "%v"))
        self.tool0TargetTemperature.setText(_translate("MainWindow", "0"))
        self.tool0TempBar.setFormat(_translate("MainWindow", "%v"))
        self.tool0ActualTemperature.setText(_translate("MainWindow", "0"))
        self.bedActualTemperatute.setText(_translate("MainWindow", "0"))
        self.bedTargetTemperature.setText(_translate("MainWindow", "0"))
        self.printProgressBar.setFormat(_translate("MainWindow", "%p%"))
        self.timeLeft.setText(_translate("MainWindow", "timeLeft"))
        self.printerStatus.setText(_translate("MainWindow", "STATUS"))
        self.celciusLabel.setText(_translate("MainWindow", "°C"))
        self.tool1TargetTemperature.setText(_translate("MainWindow", "0"))
        self.tool1TempBar.setFormat(_translate("MainWindow", "%v"))
        self.tool1ActualTemperature.setText(_translate("MainWindow", "0"))
        self.ipStatus.setText(_translate("MainWindow", "Not Connected"))
        self.celciusLabel_2.setText(_translate("MainWindow", "°C"))
        self.celciusLabel_3.setText(_translate("MainWindow", "°C"))
        self.label.setText(_translate("MainWindow", "1"))
        self.label_3.setText(_translate("MainWindow", "0"))
        self.doorLockButton.setText(_translate("MainWindow", "Toggle Door"))
        self.menuControlButton.setText(_translate("MainWindow", "Control"))
        self.menuPrintButton.setText(_translate("MainWindow", "Print"))
        self.menuSettingsButton.setText(_translate("MainWindow", "Settings"))
        self.menuCartButton.setText(_translate("MainWindow", "Cart"))
        self.menuCalibrateButton.setText(_translate("MainWindow", "Calibrate"))
        self.networkSettingsButton.setText(_translate("MainWindow", "Network Settings"))
        self.displaySettingsButton.setText(_translate("MainWindow", "Display Settings"))
        self.pairPhoneButton.setText(_translate("MainWindow", "Open in Smartphone"))
        self.OTAButton.setText(_translate("MainWindow", "Check for Updates"))
        self.versionButton.setText(_translate("MainWindow", "Version"))
        self.restorePrintSettingsButton.setText(_translate("MainWindow", "Restore Print Settings"))
        self.restoreFactoryDefaultsButton.setText(_translate("MainWindow", "Restore Factory Defaults"))
        self.restartButton.setText(_translate("MainWindow", "Restart"))
        self.staticIPINterfaceLabel.setText(_translate("MainWindow", "Interface"))
        self.staticIPSettingsDoneButton.setText(_translate("MainWindow", "Done"))
        self.staticIPGatewayKeyboardButton.setText(_translate("MainWindow", "..."))
        self.staticIPGatewayLabel.setText(_translate("MainWindow", "Gateway"))
        self.staticIPKeyboardButton.setText(_translate("MainWindow", "..."))
        self.staticIPLabel.setText(_translate("MainWindow", "IP Address"))
        self.staticIPNameServerKeyboardButton.setText(_translate("MainWindow", "..."))
        self.staticIPNameServerLabel.setText(_translate("MainWindow", "Name Servers"))
        self.staticIPSettingsCancelButton.setText(_translate("MainWindow", "Cancel"))
        self.ssidlabel.setText(_translate("MainWindow", "Enter SSID:"))
        self.passwordlabel.setText(_translate("MainWindow", "Enter Password:"))
        self.wifiSettingsDoneButton.setText(_translate("MainWindow", "Done"))
        self.wifiSettingsCancelButton.setText(_translate("MainWindow", "Cancel"))
        self.wifiSettingsSSIDKeyboardButton.setText(_translate("MainWindow", "..."))
        self.hiddenCheckBox.setText(_translate("MainWindow", "Hidden "))
        self.networkInfoButton.setText(_translate("MainWindow", "Network Info"))
        self.configureWifiButton.setText(_translate("MainWindow", "Configure WiFi"))
        self.configureStaticIPButton.setText(_translate("MainWindow", "Configure Static IP"))
        self.calibrateTouch.setText(_translate("MainWindow", "Calibrate Touch"))
        self.rotateDisplaySettingsDoneButton.setText(_translate("MainWindow", "Done"))
        self.rotateDisplaySettingsCancelButton.setText(_translate("MainWindow", "Cancel"))
        self.rotateDisplaySettingsComboBox.setItemText(0, _translate("MainWindow", "Normal"))
        self.rotateDisplaySettingsComboBox.setItemText(1, _translate("MainWindow", "Flipped"))
        self.rotateDisplaySettingsLabel.setText(_translate("MainWindow", "Rotation"))
        self.hostnameLabel.setText(_translate("MainWindow", "mDNS URL"))
        self.hostname.setText(_translate("MainWindow", "Hostname"))
        self.wifiIpLabel.setText(_translate("MainWindow", "Wi-Fi MAC"))
        self.wifiMac.setText(_translate("MainWindow", "WiFi"))
        self.lanIpLabel.setText(_translate("MainWindow", "Ethernet MAC"))
        self.lanMac.setText(_translate("MainWindow", "Ethernet"))
        self.wifiMacLabel.setText(_translate("MainWindow", "Wi-Fi IP"))
        self.lanMacLabel.setText(_translate("MainWindow", "Ethernet IP"))
        self.wifiIp.setText(_translate("MainWindow", "WiFi"))
        self.lanIp.setText(_translate("MainWindow", "Ethernet"))
        self.wifiApLabel.setText(_translate("MainWindow", "Wi-Fi AP"))
        self.wifiAp.setText(_translate("MainWindow", "WiFi"))
        self.performUpdateButton.setText(_translate("MainWindow", "Update"))
        self.logTextEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Gotham\'; font-size:16pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Software Update Starting, Please Wait....</span></p></body></html>"))
        self.firmwareUpdateLog.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Gotham\'; font-size:10pt;\">Firmware Update Starting, Please Wait....</span></p></body></html>"))
        self.calibrateLabel.setText(_translate("MainWindow", "Calibrate:"))
        self.calibrationWizardButton.setText(_translate("MainWindow", "Calibration Wizard"))
        self.toolOffsetXYButton.setText(_translate("MainWindow", "Tool Offset X/Y"))
        self.nozzleOffsetButton.setText(_translate("MainWindow", "Probe Offset"))
        self.toolOffsetZButton.setText(_translate("MainWindow", "Tool Offsets Z"))
        self.testPrintsButton.setText(_translate("MainWindow", "Test Prints"))
        self.idexCalibrationWizardButton.setText(_translate("MainWindow", "IDEX Config"))
        self.calibrateLabel_36.setText(_translate("MainWindow", "Calibration and Test Prints :"))
        self.calibrateLabel_57.setText(_translate("MainWindow", "Ensure PLA material of different colors are loaded into both nozzles before continuing "))
        self.calibrateLabel_58.setText(_translate("MainWindow", "Select Installed Nozzles Diameter\'s:"))
        self.tool0TargetTemperature_27.setText(_translate("MainWindow", "0"))
        self.testPrintsTool0SizeComboBox.setItemText(0, _translate("MainWindow", "0.6"))
        self.testPrintsTool0SizeComboBox.setItemText(1, _translate("MainWindow", "0.4"))
        self.testPrintsTool0SizeComboBox.setItemText(2, _translate("MainWindow", "0.8"))
        self.testPrintsTool1SizeComboBox_6.setItemText(0, _translate("MainWindow", "0.6"))
        self.testPrintsTool1SizeComboBox_6.setItemText(1, _translate("MainWindow", "0.4"))
        self.testPrintsTool1SizeComboBox_6.setItemText(2, _translate("MainWindow", "0.8"))
        self.tool0TargetTemperature_28.setText(_translate("MainWindow", "1"))
        self.calibrateLabel_59.setText(_translate("MainWindow", "Ensure Tool 1 nozzle diameter is greater or equal to the nozzle diameter of Tool 0"))
        self.testPrintsNextButton.setText(_translate("MainWindow", "Next"))
        self.calibrateLabel_2.setText(_translate("MainWindow", "Ensure PLA material of different colors are loaded into both nozzles before continuing "))
        self.bedLevelPrintButton.setText(_translate("MainWindow", "Bed Leveling Print"))
        self.singleNozzlePrintButton.setText(_translate("MainWindow", "Single Nozzle Test Print"))
        self.dualNozzlePrintButton.setText(_translate("MainWindow", "Dual Nozzle Test Print"))
        self.movementTestPrintButton.setText(_translate("MainWindow", "Movement Stress Test"))
        self.dualCaliberationPrintButton.setText(_translate("MainWindow", "Dual Calibration Print"))
        self.testPrintsCancelButton.setText(_translate("MainWindow", "Cancel"))
        self.bedLabel_3.setText(_translate("MainWindow", "Y:"))
        self.tollOffsetXLabel.setText(_translate("MainWindow", "X offset: "))
        self.toolOffsetLabel.setText(_translate("MainWindow", "X/Y offset distance for extruder E1:"))
        self.toolOffsetXDoubleSpinBox.setSuffix(_translate("MainWindow", "mm"))
        self.toolOffsetYDoubleSpinBox.setSuffix(_translate("MainWindow", "mm"))
        self.toolOffsetYLabel.setText(_translate("MainWindow", "Y offset: "))
        self.toolOffsetZDoubleSpinBox.setSuffix(_translate("MainWindow", "mm"))
        self.tollOffsetXLabel_2.setText(_translate("MainWindow", "Z offset:"))
        self.toolOffsetLabel_2.setText(_translate("MainWindow", "Z offset distance for extruder E1:"))
        self.quickStep1CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.quickStep1NextButton.setText(_translate("MainWindow", "Next"))
        self.calibrateLabel_6.setText(_translate("MainWindow", "We start by calibrating the print bed\'s level. A perfectly leveled bed is essential to get reliable printing performance."))
        self.quickStep2NextButton.setText(_translate("MainWindow", "Next"))
        self.quickStep2CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.calibrateLabel_7.setText(_translate("MainWindow", "Tighten the front left screw, and measure the height with the help of an A4 sheet of Paper as a measuring guage"))
        self.quickStep3NextButton.setText(_translate("MainWindow", "Next"))
        self.quickStep3CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.calibrateLabel_10.setText(_translate("MainWindow", "Repeat the same using the front right leveling screw"))
        self.quickStep4NextButton.setText(_translate("MainWindow", "Next"))
        self.quickStep4CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.calibrateLabel_12.setText(_translate("MainWindow", "Repeat the same using the back leveling screw"))
        self.nozzleHeightStep1NextButton.setText(_translate("MainWindow", "Next"))
        self.nozzleHeightStep1CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.toolZOffsetLabel.setText(_translate("MainWindow", "Move the bed up or down to the Second Nozzle, testing height using paper "))
        self.calibrateLabel_8.setText(_translate("MainWindow", "Both Nozzles have to physically be at the same level with respect to the bed to print in MIRROR or DUPLICATION mode."))
        self.calibrateLabel_14.setText(_translate("MainWindow", "Unlock T0 (on the left) by loosening the fastener on its right so that it can slide up and down. Slide to to the lowest position it can go and lock it back."))
        self.idexConfigStep1NextButton.setText(_translate("MainWindow", "Next"))
        self.idexConfigStep1CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.idexConfigStep2NextButton.setText(_translate("MainWindow", "Next"))
        self.idexConfigStep2CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.calibrateLabel_9.setText(_translate("MainWindow", "Level the Bed"))
        self.calibrateLabel_15.setText(_translate("MainWindow", "Tighten the front left screw, and measure the height with the help of an A4 sheet of Paper as a measuring guage"))
        self.calibrateLabel_11.setText(_translate("MainWindow", "Level the Bed"))
        self.idexConfigStep3NextButton.setText(_translate("MainWindow", "Next"))
        self.calibrateLabel_16.setText(_translate("MainWindow", "Tighten the front left screw, and measure the height with the help of an A4 sheet of Paper as a measuring guage"))
        self.idexConfigStep3CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.calibrateLabel_13.setText(_translate("MainWindow", "Loosen both tools"))
        self.idexConfigStep4NextButton.setText(_translate("MainWindow", "Next"))
        self.calibrateLabel_17.setText(_translate("MainWindow", "Unlock both tools by loosening the fastener on their right so that they can slide up and down. Slide to to the lowest position it can go WITHOUT locking them back"))
        self.idexConfigStep4CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.toolZOffsetLabel_4.setText(_translate("MainWindow", "Step 1: Move the Bed up untill BOTH nozzes just touch."))
        self.idexConfigStep5NextButton.setText(_translate("MainWindow", "Next"))
        self.idexConfigStep5CancelButton.setText(_translate("MainWindow", "Cancel"))
        self.toolZOffsetLabel_5.setText(_translate("MainWindow", "Step 2: Move the Bed up untill BOTH nozzes just touch the bed."))
        self.toolZOffsetLabel_6.setText(_translate("MainWindow", "Step 3: Physically slide the tools up and down in the carriage such that their nozzles lightly touch the bed. "))
        self.toolZOffsetLabel_7.setText(_translate("MainWindow", "Step 4: Lock the position of the tools by tightening the fastener on their right."))
        self.nozzleOffsetDoubleSpinBox.setSuffix(_translate("MainWindow", "mm"))
        self.feedRateLabelControlPage_3.setText(_translate("MainWindow", "Change the initial height for the first layer of the print. +ve value increases height, -ve value reduces it."))
        self.feedRateLabelControlPage_4.setText(_translate("MainWindow", "Current Z Offset: "))
        self.currentNozzleOffset.setText(_translate("MainWindow", "0"))
        self.fromUsbButton.setText(_translate("MainWindow", "USB"))
        self.printFromLabel.setText(_translate("MainWindow", "Print From :"))
        self.fromLocalButton.setText(_translate("MainWindow", "Local "))
        self.fileSelected.setText(_translate("MainWindow", "You Selected: "))
        self.fileSelectedPrintButton.setText(_translate("MainWindow", "Print"))
        self.fileSizeSelected.setText(_translate("MainWindow", "Size"))
        self.fileDateSelected.setText(_translate("MainWindow", "Date"))
        self.filePrintTimeSelected.setText(_translate("MainWindow", "EST"))
        self.filamentVolumeSelected.setText(_translate("MainWindow", "Fil. Volume"))
        self.fileSizeSelectedLabel.setText(_translate("MainWindow", "Size:"))
        self.fileDateSelectedLabel.setText(_translate("MainWindow", "Date:"))
        self.filePrintTimeSelectedLabel.setText(_translate("MainWindow", "Estimated Print Time:"))
        self.filamentVolumeSelectedLabel.setText(_translate("MainWindow", "Volume:"))
        self.filamentLengthFileSelected.setText(_translate("MainWindow", "Fil. Length"))
        self.filamentLengthSelectedLabel.setText(_translate("MainWindow", "Length:"))
        self.fileSelectedUSBTransferButton.setText(_translate("MainWindow", "Save to Local"))
        self.fileSelectedUSBName.setText(_translate("MainWindow", "File Name"))
        self.fileSelectedUSBPrintButton.setText(_translate("MainWindow", "Print"))
        self.feedRateLabelControlPage.setText(_translate("MainWindow", "Feed Rate :"))
        self.feedRateSpinBox.setSuffix(_translate("MainWindow", "%"))
        self.flowRateLabelControlPage_5.setText(_translate("MainWindow", "Tune Bed Height during Print :"))
        self.toolLabel.setText(_translate("MainWindow", "Nozzle:"))
        self.bedLabel_2.setText(_translate("MainWindow", "Bed:"))
        self.toolTempSpinBox.setSuffix(_translate("MainWindow", "°C"))
        self.bedTempSpinBox.setSuffix(_translate("MainWindow", "°C"))
        self.tool180PreheatButton.setText(_translate("MainWindow", "180°C"))
        self.tool250PreheatButton.setText(_translate("MainWindow", "250°C"))
        self.bed100PreheatButton.setText(_translate("MainWindow", "100°C"))
        self.bed60PreheatButton.setText(_translate("MainWindow", "60°C"))
        self.step1Button.setText(_translate("MainWindow", "1 mm"))
        self.step10Button.setText(_translate("MainWindow", "10 mm"))
        self.step100Button.setText(_translate("MainWindow", "100 mm"))
        self.XYLabel.setText(_translate("MainWindow", "X/Y :"))
        self.ZLabel.setText(_translate("MainWindow", "Z:"))
        self.ELabel.setText(_translate("MainWindow", "E:"))
        self.moveByLabel.setText(_translate("MainWindow", "Move By:"))
        self.toolToggleMotionButton.setText(_translate("MainWindow", "1"))
        self.flowRateSpinBox.setSuffix(_translate("MainWindow", "%"))
        self.flowRateLabelControlPage.setText(_translate("MainWindow", "Flow Rate :"))
        self.changeFilamentButton.setText(_translate("MainWindow", "Change Filament"))
        self.toggleFilamentSensorButton.setText(_translate("MainWindow", "Toggle Filament Sensor"))
        self.selectFilamentlabel.setText(_translate("MainWindow", "Select Filament :"))
        self.changeFilamentLoadButton.setText(_translate("MainWindow", "Load"))
        self.changeFilamentUnloadButton.setText(_translate("MainWindow", "Unload"))
        self.changeFilamentStatus.setText(_translate("MainWindow", "Heating ..."))
        self.changeFilamentProgress.setFormat(_translate("MainWindow", "%p%"))
        self.changeFilamentNameOperation.setText(_translate("MainWindow", "Loading Filament"))
        self.feedFilamentlabel_60.setText(_translate("MainWindow", "Insert the Filament into filament side motor,"))
        self.feedFilamentlabel_61.setText(_translate("MainWindow", "Press \"DONE\" when the filament starts to get pulled"))
        self.feedFilamentlabel_62.setText(_translate("MainWindow", "Incase filament cannot be pushed beyond a point, and is not being automatically pulled, check extruder for issues. "))
        self.loadedTillExtruderButton.setText(_translate("MainWindow", "Done"))
        self.feedFilamentlabel_64.setText(_translate("MainWindow", "untill the filament gets pulls automatically."))
        self.feedFilamentlabel.setText(_translate("MainWindow", "Feed Filament into Extruder"))
        self.loadDoneButton.setText(_translate("MainWindow", "Done"))
        self.feedFilamentlabel_2.setText(_translate("MainWindow", "Click \"Done\" when filament starts coming out of the nozzle"))
        self.feedFilamentlabel_6.setText(_translate("MainWindow", "Incase Filament is not getting extruded even after waiting for 2-3 minutes, Check extruders at the filament chamber as well as on the carriage for issues."))
        self.feedFilamentlabel_8.setText(_translate("MainWindow", "Wait for approximately 2-3 minutes for the filament to reach the extruder on the carriage. "))
        self.feedFilamentlabel_3.setText(_translate("MainWindow", "Click \"Done\" when filament is retracted"))
        self.unloadDoneButton.setText(_translate("MainWindow", "Done"))
        self.feedFilamentlabel_4.setText(_translate("MainWindow", "Retract Filament From Extruder"))
        self.feedFilamentlabel_7.setText(_translate("MainWindow", "Incase Filament is not getting retracted even after waiting for 2-3 minutes, Check the external extruders as well as on the carriage extruders for issues."))
        self.feedFilamentlabel_9.setText(_translate("MainWindow", "Wait for approximately 2-3 minutes for the filament to get retracted from the carriage extruder as well as the external extruder"))
