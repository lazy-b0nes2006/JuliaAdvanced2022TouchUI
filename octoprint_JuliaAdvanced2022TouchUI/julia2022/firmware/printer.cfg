# This file contains common pin mappings for the BIGTREETECH Manta M8P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PD12/PD13)".

# See docs/Config_Reference.md for a description of parameters.


[save_variables]
filename: /home/pi/variables.cfg

[force_move]
enable_force_move: True


########################################
# Include .cfg Files
########################################

[include IDEX_mode.cfg]

[include GCodes.cfg]

########################################
# MCU Config
########################################

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_060015001551303531313638-if00
canbus_uuid: 7abb712798fa #cb1dc5e15b2f #Main default MCU

[mcu toolhead0]
canbus_uuid: 3a74f65c3b30 #79a038a95f1d #d9b801b4c9b4  #Tool0 MCU

[mcu toolhead1]
canbus_uuid: a21b8aa2b3ea #724ce7f44809 #79a038a95f1d  #Tool1 MCU


[printer]
kinematics: hybrid_corexy
#SET_KINEMATICS_LIMIT X_ACCEL=1500 Y_ACCEL=1000
max_velocity: 1000 #1000 #700
max_accel: 5000 #30000
max_accel_to_decel: 6000 # 5000
max_z_velocity: 10
max_z_accel: 30 #50

########################################
# T0 Toolboard Config
########################################


[adxl345 toolhead0]
cs_pin: toolhead0: gpio13
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus:
spi_software_sclk_pin: toolhead0: gpio14
spi_software_mosi_pin: toolhead0: gpio15
spi_software_miso_pin: toolhead0: gpio12
axes_map: x,y,z

[extruder]
step_pin: toolhead0: gpio24
dir_pin: !toolhead0: gpio21
enable_pin: !toolhead0: gpio28
microsteps: 8
rotation_distance: 4.637 #33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: toolhead0: gpio20
sensor_type: EPCOS 100K B57560G104F
sensor_pin: toolhead0: gpio26
control: pid
pid_Kp: 17.062
pid_Ki: 0.455
pid_Kd: 159.960
min_temp: -130
max_temp: 280
min_extrude_temp: -130
max_extrude_only_distance: 5000.0
#pressure_advance: 0.2825

[verify_heater extruder]
max_error: 120
check_gain_time: 20
hysteresis: 40 #15 #5
heating_gain: 6 #2



[tmc2209 extruder]
uart_pin: toolhead0: gpio25
run_current: 0.850

[extruder_stepper extruder_side0]
extruder: extruder
step_pin:  PG9
dir_pin: !PD7
enable_pin: !PG11
microsteps: 8
rotation_distance: 22.857142857142858 #33.500

[tmc2209 extruder_stepper extruder_side0]
uart_pin: PG10
run_current: 1.000

[fan_generic extruder_CF ]
pin: toolhead0: gpio10

[heater_fan extruder_AOF]
pin: toolhead0: gpio8
heater: extruder
heater_temp: 50.0


########################################
# T1 Toolboard Config
########################################

[adxl345 toolhead1]
cs_pin: toolhead1: gpio13
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus:
spi_software_sclk_pin: toolhead1: gpio14
spi_software_mosi_pin: toolhead1: gpio15
spi_software_miso_pin: toolhead1: gpio12
axes_map: x,y,z

[extruder1]
step_pin: toolhead1: gpio24
dir_pin: !toolhead1: gpio21
enable_pin: !toolhead1: gpio28
microsteps: 8
rotation_distance: 4.637 #33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: toolhead1: gpio20
sensor_type: EPCOS 100K B57560G104F
sensor_pin: toolhead1: gpio26
control: pid
pid_Kp: 17.062
pid_Ki: 0.455
pid_Kd: 159.960
min_temp: -130
max_temp: 280
min_extrude_temp: -130
max_extrude_only_distance: 5000.0
#pressure_advance: 0.2825

[verify_heater extruder1]
max_error: 120
check_gain_time: 20
hysteresis: 40 #15 #5
heating_gain: 6 #2

[tmc2209 extruder1]
uart_pin: toolhead1: gpio25
run_current: 0.850

[extruder_stepper extruder_side1]
extruder: extruder1
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6 
microsteps: 8
rotation_distance:  22.857142857142858 #33.500

[tmc2209 extruder_stepper extruder_side1]
uart_pin: PD5
run_current: 1.000

[fan_generic extruder1_CF ]
pin: toolhead1: gpio10

[heater_fan extruder1_AOF]
pin: toolhead1: gpio8
heater: extruder1
heater_temp: 50 #50.0









########################################
# X Steppers-M1
########################################

[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 32
endstop_pin: toolhead0: gpio7
position_endstop: -77.000
position_min: -77.000
position_max: 610.000
homing_speed: 100
homing_retract_dist: 10.0


[tmc5160 stepper_x]
cs_pin: PC13
spi_software_sclk_pin: PG8
spi_software_mosi_pin: PG6
spi_software_miso_pin: PG7
interpolate: False
run_current: 1.2 #1.000
sense_resistor: 0.075
driver_TBL: 0
driver_TOFF: 1
driver_TPFD: 0

########################################
# X- dual carriage Steppers-M2
########################################

[dual_carriage]
axis: x
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 32
endstop_pin: toolhead1: gpio7
position_endstop: 688 
position_min: -2 #value received after visual calibration
position_max: 688 #value received after visual calibration
homing_speed: 100
homing_retract_dist: 10.0


[tmc5160 dual_carriage]
cs_pin: PE3
spi_software_sclk_pin: PG8
spi_software_mosi_pin: PG6
spi_software_miso_pin: PG7
interpolate: False
run_current: 1.2 #1.000
sense_resistor: 0.075
driver_TBL: 0
driver_TOFF: 1
driver_TPFD: 0


########################################
# Y Steppers- M4
########################################

[stepper_y]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
microsteps: 16
rotation_distance: 32
endstop_pin: ^PF2
position_endstop: 637 #350
position_max: 637 #350
position_min: -120
homing_speed: 100
homing_retract_dist: 10.0

[tmc5160 stepper_y]
cs_pin: PB5
spi_software_sclk_pin: PG8
spi_software_mosi_pin: PG6
spi_software_miso_pin: PG7
interpolate: False
run_current: 1.200
sense_resistor: 0.075
driver_TBL: 0
driver_TOFF: 1
driver_TPFD: 0

########################################
# Y Steppers- M5
########################################

[stepper_y1]
step_pin: PG13
dir_pin: !PG12
enable_pin: !PG15
microsteps: 16
rotation_distance: 32
endstop_pin: ^PF2


[tmc5160 stepper_y1]
cs_pin: PG14
spi_software_sclk_pin: PG8
spi_software_mosi_pin: PG6
spi_software_miso_pin: PG7
interpolate: False
run_current: 1.200
sense_resistor: 0.075
driver_TBL: 0
driver_TOFF: 1
driver_TPFD: 0




########################################
# Z Steppers- M3
########################################
[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
microsteps: 4
rotation_distance: 4
endstop_pin: ^PF1
position_endstop: 414 #410 #417.000
position_max: 414 #410 #417.000
position_min: -6
homing_speed: 40
homing_retract_dist: 5.0

[tmc5160 stepper_z]
cs_pin: PB9
spi_software_sclk_pin: PG8
spi_software_mosi_pin: PG6
spi_software_miso_pin: PG7
interpolate: False
run_current: 2.5

sense_resistor: 0.022
driver_TBL: 0
driver_TOFF: 1
driver_TPFD: 0


########################################
# Heater Bed
########################################
[heater_bed]
heater_pin: PA3
sensor_type: EPCOS 100K B57560G104F #Generic 3950
sensor_pin: PB1
control: watermark
min_temp: -150
max_temp: 500

########################################
# Probe and ABL
########################################

[probe]
pin: PD8
x_offset: 0
y_offset: 0
#z_offset: 0
sample_retract_dist: 2.0
speed: 4
lift_speed: 10
samples_tolerance: 2.00
samples:1
samples_result: average
samples_tolerance_retries : 2


########################################
# Bed Mesh
########################################


[bed_mesh]
horizontal_move_z: 5
mesh_min: 63, 70 #50, 10 #0,0
mesh_max: 542, 500 #570, 567 #550,280
probe_count: 4,4
algorithm: bicubic
speed: 200 #to be checked


########################################
# Input Shaping and Resonance
########################################

[input_shaper]

[resonance_tester]
probe_points:
    304,127,20
#   A list of X, Y, Z coordinates of points (one point per line) to test
#   resonances at. At least one point is required. Make sure that all
#   points with some safety margin in XY plane (~a few centimeters)
#   are reachable by the toolhead.
accel_chip: adxl345 toolhead0
#accel_chip: adxl345 toolhead1
#   A name of the accelerometer chip to use for measurements. If
#   adxl345 chip was defined without an explicit name, this parameter
#   can simply reference it as "accel_chip: adxl345", otherwise an
#   explicit name must be supplied as well, e.g. "accel_chip: adxl345
#   my_chip_name". Either this, or the next two parameters must be
#   set.
#accel_chip_x:
#accel_chip_y:
#   Names of the accelerometer chips to use for measurements for each
#   of the axis. Can be useful, for instance, on bed slinger printer,
#   if two separate accelerometers are mounted on the bed (for Y axis)
#   and on the toolhead (for X axis). These parameters have the same
#   format as 'accel_chip' parameter. Only 'accel_chip' or these two
#   parameters must be provided.
#max_smoothing:
#   Maximum input shaper smoothing to allow for each axis during shaper
#   auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
#   maximum smoothing is specified. Refer to Measuring_Resonances guide
#   for more details on using this feature.
#min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
#max_freq: 133.33
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
#accel_per_hz: 75
#   This parameter is used to determine which acceleration to use to
#   test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to
#   a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of
#   high-frequency resonances less precise. The default value is 75
#   (mm/sec).
#hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in
#   range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values
#   will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).


########################################
# Other Config
########################################

[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

#[filament_switch_sensor filament_sensor0]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
# M118 Filament runout extruder0
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin: !PF0 #!PD3
#   The pin on which the switch is connected. This parameter must be
#   provided.


#[filament_switch_sensor filament_sensor1]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
# M118 Filament runout extruder1
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin: !PC15 #!MKS: PE4
#   The pin on which the switch is connected. This parameter must be
#   provided.

[led toolhead0]
#red_pin:
green_pin: toolhead0: gpio2
#blue_pin:
#white_pin:
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
#cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.

[led toolhead1]
#red_pin:
green_pin: toolhead1: gpio2
#blue_pin:
#white_pin:
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
#cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.015000, 0.135000, -0.015000, -0.710000
#*# 	  0.085000, 0.135000, -0.210000, -0.815000
#*# 	  0.105000, 0.035000, -0.440000, -1.220000
#*# 	  -0.340000, -0.195000, -0.855000, -1.775000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 63.0
#*# max_x = 541.98
#*# min_y = 70.0
#*# max_y = 499.99
#*#
#*# [probe]
#*# z_offset = -0.350
#*#
#*# [input_shaper]
#*# shaper_freq_x = 50
#*# shaper_freq_y = 60
#*# shaper_type_x = mzv
#*#
#*# [bed_mesh p1]
#*# version = 1
#*# points =
#*# 	  -0.015000, 0.135000, -0.015000, -0.710000
#*# 	  0.085000, 0.135000, -0.210000, -0.815000
#*# 	  0.105000, 0.035000, -0.440000, -1.220000
#*# 	  -0.340000, -0.195000, -0.855000, -1.775000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 63.0
#*# max_x = 541.98
#*# min_y = 70.0
#*# max_y = 499.99
